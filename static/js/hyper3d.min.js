/**
 * Modules in this bundle
 * @license
 * 
 * hyper3d:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: yvt <i@yvt.jp> (https://yvt.jp/)
 *   homepage: https://hyper3d.github.io/
 *   version: 0.0.1
 * 
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
!function e(t,r,n){function i(a,s){if(!r[a]){if(!t[a]){var u="function"==typeof require&&require;if(!s&&u)return u(a,!0);if(o)return o(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var f=r[a]={exports:{}};t[a][0].call(f.exports,function(e){var r=t[a][1][e];return i(r?r:e)},f,f.exports,e,t,r,n)}return r[a].exports}for(var o="function"==typeof require&&require,a=0;a<n.length;a++)i(n[a]);return i}({1:[function(e,t,r){"use strict";function n(e){for(var t in e)r.hasOwnProperty(t)||(r[t]=e[t])}n(e("./renderer/public/Lights")),n(e("./renderer/public/Materials")),n(e("./renderer/public/ReflectionProbe")),n(e("./renderer/public/WebGLHyperRenderer"))},{"./renderer/public/Lights":27,"./renderer/public/Materials":28,"./renderer/public/ReflectionProbe":29,"./renderer/public/WebGLHyperRenderer":31}],2:[function(e,t,r){"use strict";var n=function(){function e(e,t){this.gl=e,this.handle=t}return e.createFramebuffer=function(t,r,n){null==n&&(n=t.TEXTURE_2D);var i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),null!=r.depth&&(r.depth instanceof WebGLTexture?t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r.depth,0):r.depth instanceof WebGLRenderbuffer&&t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,r.depth));var o=r.colors;if(1==o.length)t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,n,o[0],0);else for(var a=t.getExtension("WEBGL_draw_buffers"),s=0;s<o.length;++s)t.framebufferTexture2D(t.FRAMEBUFFER,a.COLOR_ATTACHMENT0_WEBGL+s,n,o[s],0);var u=t.checkFramebufferStatus(t.FRAMEBUFFER);if(u!=t.FRAMEBUFFER_COMPLETE)throw t.deleteFramebuffer(i),new Error("incomplete framebuffer: "+u);return new e(t,i)},e.prototype.bind=function(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.handle)},e.prototype.dispose=function(){this.gl.deleteFramebuffer(this.handle)},e}();r.GLFramebuffer=n},{}],3:[function(require,module,exports){"use strict";var GLProgram=function(){function GLProgram(e,t){this.core=e,this.program=t,this.logger=e.log.getLogger("shader"),this.attrLocs={},this.nextAttrLoc=0,this.gl=e.gl,this.linked=!1,this.globalUniformSubscriber=e.shaderManager.subscribeGlobalUniforms(this)}return GLProgram.prototype.dispose=function(){this.gl.deleteProgram(this.program)},GLProgram.prototype.use=function(){this.linked||this.link(),this.gl.useProgram(this.program),this.globalUniformSubscriber.updateGlobalUniforms()},GLProgram.prototype.link=function(){if(this.linked)throw new Error;var e=this.gl;if(e.linkProgram(this.program),this.logger.isEnabled){var t=e.getProgramInfoLog(this.program);t.length>0&&this.logger.log("Program link log was generated:\n"+t)}if(!e.getProgramParameter(this.program,e.LINK_STATUS))throw new Error("program compilation failed.");this.linked=!0},GLProgram.prototype.initializeAttributes=function(e){if(this.linked)throw new Error("already linked");for(var t=0,r=e;t<r.length;t++){var n=r[t],i=this.attrLocs[n];null==i&&(i=this.nextAttrLoc,this.gl.bindAttribLocation(this.program,i,n),this.attrLocs[n]=i,this.nextAttrLoc=i+1)}},GLProgram.prototype.getAttributes=function(e){for(var t={},r=0,n=e;r<n.length;r++){var i=n[r];t[i]=this.attrLocs[i]}return t},GLProgram.prototype.getUniforms=function(e){if(!this.linked)throw new Error("not linked");for(var t={},r=0,n=e;r<n.length;r++){var i=n[r];t[i]=this.gl.getUniformLocation(this.program,i)}return t},GLProgram.prototype.createUniformSetter=function(setters){var ret={},gl=this.gl;for(var name_4 in setters){var loc=this.gl.getUniformLocation(this.program,name_4);loc?ret[name_4]=eval("(function(gl, fn, loc) {\n                    return function (a1, a2, a3, a4) {\n                        fn.call(gl, loc, a1, a2, a3, a4);\n                    };\n                })")(gl,setters[name_4],loc):ret[name_4]=function(){}}return ret},GLProgram.link=function(e,t,r){var n=e.gl,i=new GLProgram(e,n.createProgram());try{for(var o=0,a=t;o<a.length;o++){var s=a[o];n.attachShader(i.program,s.shader)}var u=i;return u.initializeAttributes(r),u.link(),i=null,u}finally{null!=i&&i.dispose()}},GLProgram}();exports.GLProgram=GLProgram},{}],4:[function(e,t,r){"use strict";var n=e("./shaders"),i=function(){function e(e,t){this.gl=e,this.shader=t}return e.prototype.dispose=function(){this.gl.deleteShader(this.shader)},e.getAllAttributesReferencedByChunk=function(e){function t(e){if(e.requires)for(var a=0,s=e.requires;a<s.length;a++){var u=s[a];if(!o[u]){if(o[u]=!0,!n.shaderChunks[u])throw new Error("shader chunk "+u+" not found.");t(n.shaderChunks[u])}}if(e.attributes)for(var l=0,f=e.attributes;l<f.length;l++){var h=f[l];i[h]||(i[h]=!0,r.push(h))}}var r=[],i={},o={};return e.forEach(t),r},e.preprocess=function(e,t,r,i){function o(e,t){if(e.requires)for(var r=0,i=e.requires;r<i.length;r++){var f=i[r];if(!s[f]){if(s[f]=!0,!n.shaderChunks[f])throw new Error("shader chunk "+f+" not found.");o(n.shaderChunks[f],f)}}if(e.parameters)for(var h=0,c=e.parameters;h<c.length;h++){var p=c[h];u[p]=null}t&&a.push("/* ---- "+t+" ---- */"),a.push(e.source),e.source.indexOf("// --- precision highp ---")>=0&&(l=!0)}var a=[],s={},u={};r=r||{};var l=!1,f=e.gl;switch(t.forEach(function(e){return o(e)}),i){case f.VERTEX_SHADER:break;case f.FRAGMENT_SHADER:a.unshift("precision "+(l?"highp":"mediump")+" float;");break;default:throw new Error}var h=e.shaderManager.globalParameters;for(var c in u){var p=r[c];if(null==p&&(p=h[c]),null==p)throw new Error("value for parameter "+c+" is missing");if(p===!0)a.unshift("#define c_"+c+" 1");else if(p===!1)a.unshift("#define c_"+c+" 0");else{if("number"!=typeof p)throw new Error("bad parameter type");a.unshift("#define c_"+c+" "+p)}}return a.join("\n")},e.compile=function(t,r,n){var i=t.gl,o=t.log.getLogger("shader"),a=new e(i,i.createShader(r));try{if(i.shaderSource(a.shader,n),i.compileShader(a.shader),o.isEnabled){var s=i.getShaderInfoLog(a.shader);s.length>0&&o.log("Shader compilation log generated for the following shader:\n"+n+"\nFollowing is the log message:\n"+s)}if(!i.getShaderParameter(a.shader,i.COMPILE_STATUS))throw new Error("shader compilation failed.");var u=a;return a=null,u}finally{null!=a&&a.dispose()}},e}();r.GLShader=i},{"./shaders":16}],5:[function(e,t,r){"use strict";function n(e){var t=1&e;return e>>=1,t=t<<1|1&e,e>>=1,t=t<<1|1&e,e>>=1,t=t<<1|1&e,e>>=1,t=t<<1|1&e,e>>=1,t<<=3}function i(e,t,r,i){var o=n(i);return 1&r&&(e+=4),2&r&&(t+=4),e&=7,t&=7,(s[e|t<<3]<<2&208)+o&255}var o=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},a=function(){function e(e,t){this.gl=e,this.size=64,this.textures=[],this.index=0;for(var r=new Uint8Array(this.size*this.size*4),n=0;n<32;++n){var i=e.createTexture();this.generate(r,n,t),e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.REPEAT),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.size,this.size,0,e.RGBA,e.UNSIGNED_BYTE,r),this.textures.push(i)}this.texture=this.textures[0]}return e.prototype.dispose=function(){for(var e=this.gl,t=0,r=this.textures;t<r.length;t++){var n=r[t];e.deleteTexture(n)}},e.prototype.generate=function(e,t,r){for(var n=e.byteLength,i=0;i<n;i++)e[i]=r(i>>2&63,i>>8,3&i,t)},e.prototype.update=function(){this.texture=this.textures[this.index],this.index++,this.index==this.textures.length&&(this.index=0)},e}();r.JitterTexture=a;var s=[0,48,12,60,3,51,15,63,32,16,44,28,35,19,47,31,8,56,4,52,11,59,7,55,40,24,36,20,43,27,39,23,2,50,14,62,1,49,13,61,34,18,46,30,33,17,45,29,10,58,6,54,9,57,5,53,42,26,38,22,41,25,37,21],u=function(e){function t(t){e.call(this,t,i)}return o(t,e),t}(a);r.DitherJitterTexture=u;var l=function(e){function t(t){e.call(this,t,function(e,t,r,n){var o=(i(e,t,r,n)-128)*(1/128),a=o*o,s=a*a,u=s*s,l=u*o,f=.4736*o+.5263*l;return 160*f+128})}return o(t,e),t}(a);r.GaussianDitherJitterTexture=l;var f=function(e){function t(t){e.call(this,t,function(){return 256*Math.random()})}return o(t,e),t}(a);r.UniformJitterTexture=f;var h=function(e){function t(t){e.call(this,t,function(){var e,t;do e=Math.random(),t=Math.random();while(0==e);var r=Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t);return 128+32*r})}return o(t,e),t}(a);r.GaussianJitterTexture=h},{}],6:[function(e,t,r){"use strict";var n=e("../utils/Utils"),i=function(){function e(e,t){this.core=e,this.logger=t,this.ext=e.ext.get("EXT_disjoint_timer_query"),this.queries=[],this.nextIndex=0,this.activePhases=[],this.state=0,this.callback=null,this.queryRunning=!1}return e.prototype.begin=function(e){if(1==this.state){var t=this.markTime(!1),r=this.activePhases[this.activePhases.length-1],n={begin:t,end:0,name:e,subphases:[]};r&&r.subphases.push(n),this.activePhases.push(n)}},e.prototype.end=function(){if(1==this.state){var e=this.markTime(!0),t=this.activePhases.pop();if(!t)throw new Error("Unmatched Profiler.begin/end. Too many ends.");t.end=e}},e.prototype.dispose=function(){for(var e=0,t=this.queries;e<t.length;e++){var r=t[e];this.ext.deleteQueryEXT(r)}this.queries=[]},e.prototype.startProfiling=function(e){if(0==this.state){if(!this.ext)return void this.logger.error("Cannot start profiling because EXT_disjoint_timer_query is not available.");this.state=1}this.callback=e},e.prototype.stopProfiling=function(){this.state=0,this.callback=null,this.dispose()},e.prototype.checkMeasurementReady=function(){function e(t,r,n){for(var i="",o=0;o<r;++o)i+=o==r-1?n?"└ ":"├ ":"│";i+=t.name,u.push({name:i,time:a[t.end]-a[t.begin]});for(var s=0,l=t.subphases;s<l.length;s++){var f=l[s];e(f,r+1,f==t.subphases[t.subphases.length-1])}}if(2==this.state){for(var t=this.queries,r=this.nextIndex,i=0;i<r;++i)if(!this.ext.getQueryObjectEXT(t[i],this.ext.QUERY_RESULT_AVAILABLE_EXT))return;this.state=1;var o=this.activePhases.pop();if(!o)throw new Error;for(var a=[0],s=0,i=0;i<r;++i)s+=this.ext.getQueryObjectEXT(t[i],this.ext.QUERY_RESULT_EXT),a.push(s);var u=[];e(o,0,!0);var l={phases:u},f=[40,10,20];this.logger.warn("Profiling done. \n"+("| "+n.fillWith("Phase",f[0]," ")+" | "+n.fillWithRightAligned("Time",f[1]," ")+" | "+n.stringRepeat(" ",f[2])+" |\n")+("| "+n.stringRepeat("-",f[0])+" | "+n.stringRepeat("-",f[1])+" | "+n.stringRepeat("-",f[2])+" |\n")+u.map(function(e){var t=e.name,r=""+Math.floor(e.time),i=Math.min(Math.ceil(e.time/15e5*f[2]),f[2]);return"| "+n.fillWith(t,f[0]," ")+" | "+n.fillWithRightAligned(r,f[1]," ")+" | "+(n.fillWith(n.stringRepeat("▓",i),f[2],"░")+" |")}).join("\n")),this.callback&&this.callback(l)}},e.prototype.beginFrame=function(){this.checkMeasurementReady(),1==this.state&&(this.nextIndex=0,this.queryRunning=!1,this.activePhases=[],this.begin("Frame"))},e.prototype.finalizeFrame=function(){if(1!=this.state)return void this.checkMeasurementReady();if(this.activePhases.length>1)throw new Error("Unmatched Profiler.begin/end. Too many begins.");var e=this.activePhases[0];this.end(),this.activePhases.push(e),this.state=2,this.checkMeasurementReady()},e.prototype.markTime=function(e){return this.queryRunning&&(this.ext.endQueryEXT(this.ext.TIME_ELAPSED_EXT),this.queryRunning=!1,this.nextIndex++),e||(this.nextIndex>=this.queries.length&&this.queries.push(this.ext.createQueryEXT()),this.ext.beginQueryEXT(this.ext.TIME_ELAPSED_EXT,this.queries[this.nextIndex]),this.queryRunning=!0),this.nextIndex},e}();r.Profiler=i},{"../utils/Utils":57}],7:[function(e,t,r){"use strict";var n=function(){function e(e){this.renderer=e;var t=e.gl;this.buffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffer);var r=new Uint8Array([-1,-1,1,-1,-1,1,1,1]);t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW)}return e.prototype.dispose=function(){var e=this.renderer.gl;e.deleteBuffer(this.buffer)},e.prototype.render=function(e){var t=this.renderer.gl;this.renderer.vertexAttribs.toggleAllWithTrueIndex(e),t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.vertexAttribPointer(e,2,t.BYTE,!1,2,0),t.drawArrays(t.TRIANGLE_STRIP,0,4)},e}();r.QuadRenderer=n},{}],8:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=e("./RenderPipeline"),o=function(e){function t(t,r,n,i){switch(e.call(this,t),this.width=r,this.height=n,this.format=i,this.format){case s.R8:case s.R8G8:this.format=s.RGBA8}switch(this.hash=this.width^this.height<<16^this.format<<24^114514,this.cost=this.width*this.height,this.format){case s.RGBA8:this.cost*=4;break;case s.RGBAF16:this.cost*=8;break;case s.Depth:this.cost*=2}}return n(t,e),t.prototype.canMergeWith=function(e){return e instanceof t&&(this.width==e.width&&this.height==e.height&&this.format==e.format)},t.prototype.create=function(e){return new u(e,this.width,this.height,this.format)},Object.defineProperty(t.prototype,"isDepthBuffer",{get:function(){switch(this.format){case s.Depth:return!0;default:return!1}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"physicalFormatDescription",{get:function(){var e=""+this.format;switch(this.format){case s.RGBA8:e="RGBA8";break;case s.SRGBA8:e="sRGBA8";break;case s.RGBAF16:e="RGBAF16";break;case s.Depth:e="Depth"}return"Texture "+this.width+"x"+this.height+" "+e},enumerable:!0,configurable:!0}),t}(i.RenderBufferInfo);r.TextureRenderBufferInfo=o;var a=function(e){function t(t){e.call(this,t),this.cost=0}return n(t,e),t.prototype.create=function(e){return new l},Object.defineProperty(t.prototype,"physicalFormatDescription",{get:function(){return"None"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"Untyped"},enumerable:!0,configurable:!0}),t}(i.RenderBufferInfo);r.DummyRenderBufferInfo=a,function(e){e[e.Depth=0]="Depth",e[e.RGBA8=1]="RGBA8",e[e.SRGBA8=2]="SRGBA8",e[e.RGBAF16=3]="RGBAF16",e[e.R8=4]="R8",e[e.R8G8=5]="R8G8"}(r.TextureRenderBufferFormat||(r.TextureRenderBufferFormat={}));var s=r.TextureRenderBufferFormat,u=function(){function e(e,t,r,n){this.manager=e,this.width=t,this.height=r,this.format=n;var i=e.core.gl;this.texture=null,this.renderbuffer=null;var o;switch(this.format){case s.SRGBA8:if(o=e.core.ext.get("EXT_sRGB"),!o)throw new Error("sRGB not supported");this.texture=i.createTexture(),i.bindTexture(i.TEXTURE_2D,this.texture),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,o.SRGB_ALPHA_EXT,t,r,0,o.SRGB_ALPHA_EXT,i.UNSIGNED_BYTE,null);break;case s.RGBA8:this.texture=i.createTexture(),i.bindTexture(i.TEXTURE_2D,this.texture),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,t,r,0,i.RGBA,i.UNSIGNED_BYTE,null);break;case s.RGBAF16:if(o=e.core.ext.get("OES_texture_half_float"),!o)throw new Error("RGBAF16 buffer not supported");this.texture=i.createTexture(),i.bindTexture(i.TEXTURE_2D,this.texture),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,t,r,0,i.RGBA,o.HALF_FLOAT_OES,null);break;case s.Depth:if(o=e.core.ext.get("WEBGL_depth_texture"),!o)throw new Error("Depth texture not supported");this.texture=i.createTexture(),i.bindTexture(i.TEXTURE_2D,this.texture),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,i.DEPTH_STENCIL,t,r,0,i.DEPTH_STENCIL,o.UNSIGNED_INT_24_8_WEBGL,null)}this.renderbuffer=i.createRenderbuffer()}return e.prototype.dispose=function(){var e=this.manager.core.gl;null!=this.texture&&(e.deleteTexture(this.texture),this.texture=null),null!=this.renderbuffer&&(e.deleteRenderbuffer(this.renderbuffer),this.renderbuffer=null)},e.prototype.invalidate=function(){},e}(),l=function(){function e(){}return e.prototype.dispose=function(){},e}()},{"./RenderPipeline":9}],9:[function(e,t,r){"use strict";function n(e){return e.map(function(e){var t=[],r=[];for(var n in e.inputs)null!=e.inputs[n]&&t.push(n);for(var n in e.outputs)null!=e.outputs[n]&&r.push(n);var i=[];if(e.bindings)for(var o=0;o<e.bindings.length;o+=2)i.push(t.indexOf(e.bindings[o])),i.push(r.indexOf(e.bindings[o+1]));return{name:e.name,factory:function(n){for(var i={inputs:{},outputs:{}},o=0;o<t.length;++o)i.inputs[t[o]]=n.inputs[o];for(var o=0;o<r.length;++o)i.outputs[r[o]]=n.outputs[o];return e.factory?e.factory(i):null},inputs:t.map(function(t){return e.inputs[t]}),outputs:r.map(function(t){return e.outputs[t]}),bindings:i,optionalOutputs:e.optionalOutputs?e.optionalOutputs.map(function(e){return r.indexOf(e)}):[]}})}function i(e){function t(e){return e.id||(e.id=d++),"n-"+e.id}function r(e){p.push('"'+t(e)+'" [ label="'+e.toString().replace(/ : /g,"\n")+'", shape=none ];\n')}for(var n=[],i=[],o=0,a=0,s=e;a<s.length;a++){var u=s[a];for(var l in u.inputs)u.inputs[l]&&(u.inputs[l].num=o++);for(var l in u.outputs)u.outputs[l]&&(u.outputs[l].num=o++)}for(var f=0,h=e;f<h.length;f++){var u=h[f];for(var l in u.inputs)if(u.inputs[l]){var c=u.inputs[l].num;n[c]||(n[c]=!0,i.push(u.inputs[l]))}for(var l in u.outputs)if(u.outputs[l]){var c=u.outputs[l].num;n[c]||(n[c]=!0,i.push(u.outputs[l]))}}var p=[];p.push("digraph G {"),p.push('rankdir="LR";\n'),p.push("node [shape=none];\n");for(var d=1,m=0,g=i;m<g.length;m++){var l=g[m];t(l),r(l)}for(var v=0,_=e;v<_.length;v++){var u=_[v],x=t(u);p.push('"'+x+'" [ label=<<table border="1" cellborder="0" cellpadding="3" bgcolor="white">');var T=[],b=[];for(var y in u.inputs)T.push(y);for(var y in u.outputs)b.push(y);var w=Math.max(T.length,b.length);p.push('<TR><TD bgcolor="black" align="center" colspan="2"><font color="white">'),p.push(u.name+"</font></TD></TR>");for(var R=0;R<w;++R)p.push("<tr>"),R<T.length?p.push('<td align="left" port="in-'+T[R]+'">'+T[R]+"</td>"):p.push('<td align="left"></td>'),R<b.length?p.push('<td align="right" port="out-'+b[R]+'">'+b[R]+"</td>"):p.push('<td align="right"></td>'),p.push("</tr>");p.push("</table>>];\n");for(var E=0,M=T;E<M.length;E++){var y=M[E],D=u.inputs[y];D&&p.push('"'+t(D)+'" -> "'+x+'":"in-'+y+'";\n')}for(var S=0,C=b;S<C.length;S++){var y=C[S],D=u.outputs[y];D&&p.push('"'+x+'":"out-'+y+'" -> "'+t(D)+'";\n')}}return p.push("}"),p.join("")}var o=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},a=e("../utils/Map");r.preprocessRenderOperations=n;var s=function(){function e(e){this.name=e,this.num=0,this.hash=0,this.cost=0}return e.prototype.canMergeWith=function(e){return this==e},e.prototype.create=function(e){throw new Error("not implemented")},e.prototype.toString=function(){return this.name+" : "+this.logicalFormatDescription+" : "+this.physicalFormatDescription},Object.defineProperty(e.prototype,"physicalFormatDescription",{get:function(){throw new Error("not implemented")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"logicalFormatDescription",{get:function(){return"Untyped"},enumerable:!0,configurable:!0}),e}();r.RenderBufferInfo=s;var u=function(e){function t(){e.apply(this,arguments)}return o(t,e),t.prototype.computeHash=function(e){return e.hash},t.prototype.equals=function(e,t){return e.canMergeWith(t)},t}(a.Map),l=function(){function e(){this.maxNumAllocated=0,this.numAllocated=0}return e.prototype.get=function(){this.numAllocated+=1,this.maxNumAllocated=Math.max(this.maxNumAllocated,this.numAllocated)},e.prototype.release=function(){this.numAllocated-=1},e}(),f=function(){function e(e){this.info=e,this.maxNumAllocated=0,this.numAllocated=0,this.firstFree=null}return e.prototype.get=function(){if(this.numAllocated+=1,null==this.firstFree){var e=this.maxNumAllocated++;return{info:this.info,index:e,next:null}}var t=this.firstFree;return this.firstFree=t.next,t},e.prototype.release=function(e){if(e.next=this.firstFree,this.firstFree=e,this.numAllocated-=1,this.numAllocated<0)throw new Error},e}(),h=function(e){function t(){e.apply(this,arguments)}return o(t,e),t.prototype.getOrCreate=function(e){var t=this.get(e);return null==t&&(t=new l,this.set(e,t)),t},t}(u),c=function(e){function t(){e.apply(this,arguments)}return o(t,e),t.prototype.getOrCreate=function(e){var t=this.get(e);return null==t&&(t=new f(e),this.set(e,t)),t},t}(u);r.dumpRenderOperationAsDot=i;var p=function(){function e(e){this.core=e,this.logger=e.log.getLogger("pipeline"),this.renderBuffers=new u,this.phases=[],this.operators=[],this.outputBuffers=[],this.allRenderBuffers=[]}return e.prototype.dispose=function(){this.clearPipeline(),this.releaseAll()},e.prototype.setup=function(e,t){var r=this,i=n(e);this.clearPipeline();for(var o=0,a=0,s=i;a<s.length;a++){for(var l=s[a],f=0,p=l.inputs;f<p.length;f++){var d=p[f];d.num=o++}for(var m=0,g=l.outputs;m<g.length;m++){var d=g[m];d.num=o++}}for(var v=[],_=[],x=[],T=0,b=t;T<b.length;T++){var d=b[T];_.push(d),x[d.num]=d}for(;_.length>0;){for(var y=[],w=!1,R=0,E=_;R<E.length;R++){var d=E[R];y[d.num]=d}for(var M=0;M<i.length;++M){for(var l=i[M],D=!1,S=0,C=l.outputs;S<C.length;S++){var B=C[S];x[B.num]&&(D=!0)}if(D){v.indexOf(l)<0&&v.push(l);for(var P=0,F=l.outputs;P<F.length;P++){var B=F[P];y[B.num]=null}for(var G=0,L=l.inputs;G<L.length;G++){var A=L[G];y[A.num]||(y[A.num]=A)}w=!0}}if(!w)throw new Error('no driver for one of "'+_.map(function(e){return e.name}).join(", ")+'"');x=y;var U=[];for(var z in y)y[z]&&U.push(y[z]);_=U}for(var I=new c,O=new h,V=[],X=[],k=[],j=v.slice(0),N=[],H=0,W=v;H<W.length;H++)for(var l=W[H],q=0,Y=l.inputs;q<Y.length;q++){var d=Y[q];N[d.num]=(N[d.num]||0)+1}for(var J=0,Z=t;J<Z.length;J++){var d=Z[J],Q={info:d,allocated:I.getOrCreate(d).get()};V.push({binding:Q,useCount:1}),k.push(Q),N[d.num]=(N[d.num]||0)+1}for(var K=1e3;V.length>0;){if(0==--K)throw new Error("bad");for(var $=-1,ee=-1,M=0;M<j.length;++M){for(var l=j[M],te=!1,re=0,ne=l.outputs;re<ne.length;re++){var ie=ne[re];if(N[ie.num]){for(var oe=!1,ae=0,se=V;ae<se.length;ae++){var ue=se[ae];if(N[ue.binding.info.num]==ue.useCount&&ue.binding.info===ie){oe=!0;break}}if(!oe){te=!0;break}}}if(!te){for(var le=0,fe=5,he=1,ce=[],pe=0;pe<l.inputs.length;++pe){var d=l.inputs[pe],de=I.getOrCreate(d),me=O.getOrCreate(d);me.numAllocated=de.numAllocated,me.maxNumAllocated=de.maxNumAllocated}for(var pe=0;pe<l.inputs.length;++pe){for(var ge=l.inputs[pe],ve=-1,_e=0;_e<l.bindings.length;_e+=2)if(l.bindings[_e]==pe){if(ve!=-1)throw new Error('operation "%s" has invalid bindings');ve=l.bindings[_e+1]}if(ve>=0)for(var xe=0,Te=V;xe<Te.length;xe++){var be=Te[xe];if(be.binding.info==ge){ve=-1;break}}if(ve<0){for(var ye=!1,we=0,Re=V;we<Re.length;we++){var Ee=Re[we];Ee.binding.info==ge&&(ye=!0)}if(!ye&&!ce[ge.num]){var me=O.getOrCreate(ge),Me=me.maxNumAllocated;me.get(),le+=ge.cost*(me.maxNumAllocated-Me)*fe,le+=ge.cost*he,ce[ge.num]=!0}}}for(var pe=0;pe<l.outputs.length;++pe){for(var De=l.outputs[pe],ve=-1,_e=0;_e<l.bindings.length;_e+=2)if(l.bindings[_e+1]==pe){if(ve!=-1)throw new Error('operation "%s" has invalid bindings');ve=l.bindings[_e]}if(ve>=0)for(var Se=0,Ce=V;Se<Ce.length;Se++){var be=Ce[Se];if(be.binding.info==l.inputs[ve]){ve=-1;break}}if(ve<0){var me=O.getOrCreate(De),Me=me.maxNumAllocated;me.release(),le+=De.cost*(me.maxNumAllocated-Me)*fe,le-=he}}($==-1||le<ee)&&($=M,ee=le)}}if($==-1)throw new Error("unrealizable dependency graph; remaining needed variables = "+V.map(function(e){return e.binding.info.name}).join(", "));var l=j[$];j.splice($,1);for(var Be={operation:l,inputs:[],outputs:[]},_e=0;_e<l.outputs.length;++_e){var Pe=l.outputs[_e];if(N[Pe.num]){for(var Fe=!1,pe=V.length-1;pe>=0;--pe)if(V[pe].binding.info==Pe){if(V[pe].useCount!=N[Pe.num])throw new Error;Be.outputs.push(V[pe].binding.allocated),V.splice(pe,1),Fe=!0;break}if(!Fe)throw new Error}else if(l.optionalOutputs.indexOf(_e)>=0)Be.outputs.push(null);else{var Q=I.getOrCreate(Pe).get();Be.outputs.push(Q)}}for(var _e=0;_e<l.inputs.length;++_e){for(var ge=l.inputs[_e],ve=-1,pe=0;pe<l.bindings.length;pe+=2)if(l.bindings[pe]==_e){if(ve!=-1)throw new Error('operation "%s" has invalid bindings');ve=l.bindings[pe+1]}if(ve>=0){for(var Ge=0,Le=V;Ge<Le.length;Ge++){var be=Le[Ge];if(be.binding.info==ge){ve=-1;break}}if(ve>=0){Be.inputs.push(Be.outputs[ve]),V.push({binding:{info:ge,allocated:Be.outputs[ve]},useCount:1});continue}}for(var ye=!1,Ae=0,Ue=V;Ae<Ue.length;Ae++){var be=Ue[Ae];if(be.binding.info==ge){be.useCount+=1,Be.inputs.push(be.binding.allocated),ye=!0;break}}if(!ye){var Q=I.getOrCreate(ge).get();Be.inputs.push(Q),V.push({binding:{info:ge,allocated:Q},useCount:1})}}if(Be.inputs.length!=l.inputs.length||Be.outputs.length!=l.outputs.length)throw new Error;for(var pe=0;pe<l.outputs.length;++pe){for(var ve=-1,_e=0;_e<l.bindings.length;_e+=2)if(l.bindings[_e+1]==pe){if(ve!=-1)throw new Error('operation "'+l.name+'" has invalid bindings');ve=l.bindings[_e]}ve>=0&&Be.inputs[ve]!=Be.outputs[pe]&&(ve=-1),ve<0&&Be.outputs[pe]&&I.getOrCreate(Be.outputs[pe].info).release(Be.outputs[pe])}X.unshift(Be)}if(this.phases=X,this.logger.isEnabled){this.logger.log("--- Pipeline Compilation Done ----");for(var ze=0,Ie=X;ze<Ie.length;ze++){var Be=Ie[ze];this.logger.log(Be.outputs.map(function(e){return e?e.info.physicalFormatDescription+"["+e.index+"]":"_"}).join(", ")+" := "+Be.operation.name+"("+Be.inputs.map(function(e){return e.info.physicalFormatDescription+"["+e.index+"]"}).join(", ")+")")}var Oe=0;I.forEach(function(e,t){r.logger.log(t.info.physicalFormatDescription+" (cost="+t.info.cost+") x "+t.maxNumAllocated+" = "+t.maxNumAllocated*t.info.cost),Oe+=t.maxNumAllocated*t.info.cost}),this.logger.log("Total Cost = "+Oe)}this.renderBuffers.forEach(function(e,t){for(var r=I.get(e),n=r?r.maxNumAllocated:0,i=t.renderBuffers;i.length>n;){var o=i.pop();o.dispose()}}),this.allRenderBuffers=[];var Ve=new u;I.forEach(function(e,t){for(var n=r.renderBuffers.get(e),i=n?n.renderBuffers:[],o=t.maxNumAllocated;i.length<o;)i.push(e.create(r));Ve.set(e,{renderBuffers:i});for(var a=0,s=i;a<s.length;a++){var u=s[a];r.allRenderBuffers.push(u)}}),this.operators=X.map(function(e){return e.operation.factory({inputs:e.inputs.map(function(e){return Ve.get(e.info).renderBuffers[e.index]}),outputs:e.outputs.map(function(e){return e?Ve.get(e.info).renderBuffers[e.index]:null})})}),this.outputBuffers=k.map(function(e){return Ve.get(e.info).renderBuffers[e.allocated.index]}),this.renderBuffers=Ve},e.prototype.render=function(){this.renderPartial(this.numPhases)},Object.defineProperty(e.prototype,"numPhases",{get:function(){return this.operators.length},enumerable:!0,configurable:!0}),e.prototype.getPhaseName=function(e){return this.phases[e].operation.name},e.prototype.renderPartial=function(e){var t=this.core.profiler;t.begin("Before Render");for(var r=0;r<e;++r)this.operators[r].beforeRender();t.end(),t.begin("Render");for(var r=0;r<e;++r)t.begin(this.getPhaseName(r)),this.operators[r].perform(),t.end();t.end(),t.begin("After Render");for(var r=0;r<e;++r)this.operators[r].afterRender();t.end()},e.prototype.clearPipeline=function(){for(var e=0,t=this.operators;e<t.length;e++){var r=t[e];r.dispose()}this.operators=[],this.outputBuffers=[],this.allRenderBuffers=[]},e.prototype.releaseAll=function(){this.renderBuffers.forEach(function(e,t){for(var r=0,n=t.renderBuffers;r<n.length;r++){var i=n[r];i.dispose()}}),this.renderBuffers=new u},e}();r.RenderPipeline=p},{"../utils/Map":53}],10:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=window.THREE,o=e("../render/TextureManager"),a=e("../render/TextureProvider"),s=e("../render/ReflectionTextureProvider"),u=e("../utils/BitArray"),l=e("../render/GeometryRenderer"),f=e("../render/ShadowMapRenderer"),h=e("../render/GeometryManager"),c=e("../render/LightRenderer"),p=e("../render/ReflectionRenderer"),d=e("../render/HdrDemosaicFilter"),m=e("../render/RenderingController"),g=e("./JitterTexture"),v=e("./QuadRenderer"),_=e("./ShaderManager"),x=e("./Visualizer"),T=e("../postfx/ToneMappingFilter"),b=e("../postfx/MotionBlurFilter"),y=e("../postfx/ResampleFilter"),w=e("../postfx/SSAORenderer"),R=e("../postfx/TemporalAAFilter"),E=e("../postfx/BloomFilter"),M=e("../postfx/HdrCompressFilter"),D=e("./RendererParameters"),S=e("./RenderPipeline"),C=e("./TypedRenderBuffers"),B=e("../utils/Geometry"),P=e("../validator/SRGBValidator"),F=e("../validator/FPColorBufferValidator"),G=e("../utils/Logger"),L=e("./Profiler");!function(e){e[e.NativeHdr=0]="NativeHdr",e[e.MobileHdr=1]="MobileHdr"}(r.HdrMode||(r.HdrMode={}));var A=r.HdrMode,U=function(){function e(e,t){if(this.gl=e,this.params=t,null==t&&(this.params=t={}),this.log=new G.LogManager,"object"==typeof t.log){var r=t.log;for(var n in r)r[n]&&this.log.enableTopic(n)}else"boolean"==typeof t.log&&t.log&&this.log.enableAllTopics();if(this.parameters=new D.RendererCoreParameters(this),this.useFullResolutionGBuffer=null!=t.useFullResolutionGBuffer&&t.useFullResolutionGBuffer,this.ext=new i.WebGLExtensions(this.gl),this.ext.get("OES_texture_float"),this.ext.get("OES_texture_float_linear"),this.ext.get("OES_texture_half_float"),this.ext.get("OES_texture_half_float_linear"),this.ext.get("OES_standard_derivatives"),this.ext.get("EXT_frag_depth"),!this.ext.get("WEBGL_depth_texture"))throw new Error("required WebGL extension WEBGL_depth_texture is not supported.");if(!this.ext.get("EXT_shader_texture_lod"))throw new Error("required WebGL extension EXT_shader_texture_lod is not supported.");this.supportsSRGB=!!this.ext.get("EXT_sRGB"),this.supportsHdrTexture=!(!this.ext.get("OES_texture_half_float")||!this.ext.get("OES_texture_half_float_linear")),this.supportsMRT=!!this.ext.get("WEBGL_draw_buffers"),this.supportsHdrRenderingBuffer=!1,this.hdrMode=A.MobileHdr,this.supportsMRT&&(this.useFullResolutionGBuffer=!0),this.renderWidth=this.width=e.drawingBufferWidth,this.renderHeight=this.height=e.drawingBufferHeight,this.deferGC=!1,this.depthFar=1e3,this.shadowCasterBounds=null,this.sceneBounds=null,this.setup()}return Object.defineProperty(e.prototype,"useWiderTemporalAA",{get:function(){return!this.useFullResolutionGBuffer},enumerable:!0,configurable:!0}),e.prototype.setup=function(){this.shaderManager=_.createShaderManager(this),this.vertexAttribs=new z(this.gl),this.state=new I(this.gl),this.profiler=new L.Profiler(this,this.log.getLogger("profiler")),this.quadRenderer=new v.QuadRenderer(this),this.supportsSRGB&&(P.validateSRGBCompliance(this)||(console.warn("WebGLHyperRenderer: defective EXT_sRGB detected; disabling sRGB support."),this.supportsSRGB=!1)),F.validateHalfFloatColorBuffer(this)&&(this.supportsHdrRenderingBuffer=!0),this.hdrMode=this.supportsHdrRenderingBuffer&&this.params.useFPBuffer?A.NativeHdr:A.MobileHdr,this.shaderManager.setGlobalParameter("globalUseFullResolutionGBuffer",this.useFullResolutionGBuffer),this.shaderManager.setGlobalParameter("globalSupportsSRGB",this.supportsSRGB),this.updateGlobalUniforms(),this.textures=new o.TextureManager(this,new a.Texture2DProvider),this.textureCubes=new o.TextureManager(this,new a.TextureCubeProvider),this.reflectionTextures=new o.TextureManager(this,new s.ReflectionTextureCubeProvider(this)),
this.ctrler=new m.RenderingController(this),this.geometryManager=new h.GeometryManager(this),this.renderBuffers=new S.RenderPipeline(this),this.uniformJitter=new g.UniformJitterTexture(this.gl),this.gaussianJitter=new g.GaussianJitterTexture(this.gl),this.uniformDitherJitter=new g.DitherJitterTexture(this.gl),this.gaussianDitherJitter=new g.GaussianDitherJitterTexture(this.gl),this.geometryRenderer=new l.GeometryRenderer(this),this.shadowRenderer=new f.ShadowMapRenderer(this),this.passthroughRenderer=new O(this),this.bufferVisualizer=new x.BufferVisualizer(this),this.lightRenderer=new c.LightRenderer(this),this.reflectionRenderer=new p.ReflectionRenderer(this),this.hdrDemosaic=new d.HdrDemosaicFilterRenderer(this),this.ssaoRenderer=new w.SSAORenderer(this),this.resampler=new y.ResampleFilterRenderer(this),this.toneMapFilter=new T.ToneMappingFilterRenderer(this),this.temporalAA=new R.TemporalAAFilterRenderer(this,{useWiderFilter:this.useWiderTemporalAA}),this.bloom=new E.BloomFilterRenderer(this),this.motionBlur=new b.MotionBlurFilterRenderer(this),this.hdrCompress=new M.HdrCompressFilter(this),this.compilePipeline()},e.prototype.updateGlobalUniforms=function(){this.shaderManager.setGlobalUniform("globalRenderSize",!0,this.renderWidth,this.renderHeight),this.shaderManager.setGlobalUniform("globalQuadRenderSize",!0,4*this.renderWidth,4*this.renderHeight),this.shaderManager.setGlobalUniform("globalDoubleRenderSize",!0,2*this.renderWidth,2*this.renderHeight),this.shaderManager.setGlobalUniform("globalHalfRenderSize",!0,.5*this.renderWidth,.5*this.renderHeight),this.shaderManager.setGlobalUniform("globalQuadInvRenderSize",!0,4/this.renderWidth,4/this.renderHeight),this.shaderManager.setGlobalUniform("globalDoubleInvRenderSize",!0,2/this.renderWidth,2/this.renderHeight),this.shaderManager.setGlobalUniform("globalInvRenderSize",!0,1/this.renderWidth,1/this.renderHeight),this.shaderManager.setGlobalUniform("globalHalfInvRenderSize",!0,.5/this.renderWidth,.5/this.renderHeight),this.shaderManager.setGlobalUniform("globalQuarterInvRenderSize",!0,.25/this.renderWidth,.25/this.renderHeight),this.shaderManager.setGlobalUniform("globalDepthFar",!0,this.depthFar),this.shaderManager.setGlobalUniform("globalInvDepthFar",!0,1/this.depthFar)},e.prototype.dispose=function(){this.motionBlur.dispose(),this.bloom.dispose(),this.temporalAA.dispose(),this.toneMapFilter.dispose(),this.resampler.dispose(),this.ssaoRenderer.dispose(),this.hdrDemosaic.dispose(),this.reflectionRenderer.dispose(),this.lightRenderer.dispose(),this.bufferVisualizer.dispose(),this.passthroughRenderer.dispose(),this.geometryRenderer.dispose(),this.ctrler.dispose(),this.shadowRenderer.dispose(),this.textures.dispose(),this.quadRenderer.dispose(),this.geometryManager.dispose(),this.renderBuffers.dispose(),this.uniformDitherJitter.dispose(),this.gaussianDitherJitter.dispose(),this.uniformJitter.dispose(),this.gaussianJitter.dispose(),this.shaderManager.dispose(),this.hdrCompress.dispose(),this.profiler.dispose()},e.prototype.compilePipeline=function(){var e=[],t=this.geometryRenderer.setupGeometryPass(this.width,this.height,e),r=this.resampler.setupNearestResampler(t.linearDepth,{outWidth:t.linearDepth.width+1>>1,outHeight:t.linearDepth.height+1>>1},e),n=this.shadowRenderer.setupShadowPass(e),i=this.ssaoRenderer.setupFilter({g2:t.g2,linearDepth:t.linearDepth,linearDepthHalf:r},e),o=this.hdrMode==A.MobileHdr?this.lightRenderer.setupMobileHdrLightPass({g0:t.g0,g1:t.g1,g2:t.g2,g3:t.g3,linearDepth:t.linearDepth,depth:t.depth,shadowMaps:n.shadowMaps,ssao:i.output},e):this.lightRenderer.setupNativeHdrLightPass({g0:t.g0,g1:t.g1,g2:t.g2,g3:t.g3,linearDepth:t.linearDepth,depth:t.depth,shadowMaps:n.shadowMaps,ssao:i.output},e),a=this.reflectionRenderer.setupReflectionPass({g0:t.g0,g1:t.g1,g2:t.g2,g3:t.g3,linearDepth:t.linearDepth,depth:t.depth,ssao:i.output,lit:o},e),s=a instanceof C.HdrMosaicTextureRenderBufferInfo?this.hdrDemosaic.setupFilter(a,{halfSized:!1},e):a;this.hdrMode==A.NativeHdr&&(s=this.hdrCompress.setupFilter(s,0,1,1,e),s=this.temporalAA.setupFilter({color:s,linearDepth:t.linearDepth,g0:t.g0,g1:t.g1},e),s=this.hdrCompress.setupFilter(s,0,0,1,e)),s=this.motionBlur.setupFilter({color:s,g0:t.g0,g1:t.g1,linearDepth:t.linearDepth},{maxBlur:Math.max(this.renderWidth,this.renderHeight)/40},e),s=this.bloom.setupFilter(s,e);var u=this.toneMapFilter.setupFilter(s,e);this.hdrMode==A.MobileHdr&&(u=this.temporalAA.setupFilter({color:u,linearDepth:t.linearDepth,g0:t.g0,g1:t.g1},e));var l=u,f=this.bufferVisualizer.setupColorVisualizer(l,e),h=this.log.getLogger("pipeline");h.isEnabled&&h.log(S.dumpRenderOperationAsDot(e)),this.renderBuffers.setup(e,[f])},e.prototype.startProfiling=function(e){this.profiler.startProfiling(e)},e.prototype.stopProfiling=function(){this.profiler.stopProfiling()},e.prototype.invalidateFramebuffer=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];for(var r=0,n=this.gl,i=0;i<e.length;++i)switch(e[i]){case n.COLOR_ATTACHMENT0:r|=n.COLOR_BUFFER_BIT;break;case n.DEPTH_ATTACHMENT:r|=n.DEPTH_BUFFER_BIT;break;case n.STENCIL_ATTACHMENT:r|=n.STENCIL_BUFFER_BIT;break;case n.DEPTH_STENCIL_ATTACHMENT:r|=n.DEPTH_BUFFER_BIT,r|=n.STENCIL_BUFFER_BIT}0==e.length&&(r=n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT|n.STENCIL_BUFFER_BIT),n.clear(r)},e.prototype.render=function(e,t){this.currentScene=e,this.currentCamera=t,this.uniformJitter.update(),this.gaussianJitter.update(),this.uniformDitherJitter.update(),this.gaussianDitherJitter.update(),this.sceneBounds=(new B.ObjectBoundingBoxCalculator).computeBoundingBox(e,this.sceneBounds),this.shadowCasterBounds=(new B.ShadowCastingObjectBoundingBoxCalculator).computeBoundingBox(e,this.shadowCasterBounds);var r=t.projectionMatrix,n=B.computeFarDepthFromProjectionMatrix(r);n!=this.depthFar&&(this.depthFar=n,this.updateGlobalUniforms()),e.autoUpdate&&e.updateMatrixWorld(!1),t.parent||t.updateMatrixWorld(!1),e.traverse(function(e){e instanceof i.SkinnedMesh&&e.skeleton.update()}),t.matrixWorldInverse.getInverse(t.matrixWorld),this.profiler.beginFrame(),this.ctrler.beforeRender(),this.renderBuffers.render(),this.profiler.finalizeFrame()},e.prototype.setSize=function(e,t){if(1&e)throw new Error("width cannot be odd");if(1&t)throw new Error("height cannot be odd");e=Math.max(0|e,2),t=Math.max(0|t,2),this.renderWidth=this.width=e,this.renderHeight=this.height=t,this.updateGlobalUniforms(),this.compilePipeline()},e}();r.RendererCore=U;var z=function(e){function t(t){e.call(this),this.gl=t}return n(t,e),t.prototype.onToggledTrue=function(e){this.gl.enableVertexAttribArray(e)},t.prototype.onToggledFalse=function(e){this.gl.disableVertexAttribArray(e)},t}(u.BitArray),I=function(){function e(e){this.gl=e,e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.depthMask(!0),e.colorMask(!0,!0,!0,!0),e.enable(e.CULL_FACE),e.frontFace(e.CCW),this.extDrawBuffers=e.getExtension("WEBGL_draw_buffers"),this.drawBuffers=this.extDrawBuffers?[this.extDrawBuffers.COLOR_ATTACHMENT0_WEBGL]:null,this.drawBuffers&&this.extDrawBuffers.drawBuffersWEBGL(this.drawBuffers),this.flags_=0}return Object.defineProperty(e.prototype,"flags",{get:function(){return this.flags_},set:function(e){var t=e^this.flags_;if(t){var r=this.gl;1&t&&(1&e?r.enable(r.DEPTH_TEST):r.disable(r.DEPTH_TEST)),2&t&&(2&e?r.depthMask(!1):r.depthMask(!0)),240&t&&r.colorMask(!(16&e),!(32&e),!(64&e),!(128&e)),4&t&&(4&e?r.enable(r.STENCIL_TEST):r.disable(r.STENCIL_TEST)),8&t&&(8&e?r.enable(r.BLEND):r.disable(r.BLEND)),256&t&&(256&e?r.disable(r.CULL_FACE):r.enable(r.CULL_FACE)),512&t&&(512&e?r.frontFace(r.CW):r.frontFace(r.CCW)),31744&t&&(this.drawBuffers.length=0,1024&t||this.drawBuffers.push(this.extDrawBuffers.COLOR_ATTACHMENT0_WEBGL),2048&t&&this.drawBuffers.push(this.extDrawBuffers.COLOR_ATTACHMENT1_WEBGL),4096&t&&this.drawBuffers.push(this.extDrawBuffers.COLOR_ATTACHMENT2_WEBGL),8192&t&&this.drawBuffers.push(this.extDrawBuffers.COLOR_ATTACHMENT3_WEBGL),16384&t&&this.drawBuffers.push(this.extDrawBuffers.COLOR_ATTACHMENT4_WEBGL),this.extDrawBuffers.drawBuffersWEBGL(this.drawBuffers)),this.flags_=e}},enumerable:!0,configurable:!0}),e}(),O=function(){function e(e){this.core=e;var t=e.shaderManager.get("VS_Passthrough","FS_Passthrough",["a_position"]);this.normal={program:t,uniforms:t.getUniforms(["u_uvScale","u_texture"]),attrs:t.getAttributes(["a_position"])};var t=e.shaderManager.get("VS_Passthrough","FS_PassthroughModulated",["a_position"]);this.modulated={program:t,uniforms:t.getUniforms(["u_uvScale","u_texture","u_modulation"]),attrs:t.getAttributes(["a_position"])}}return e.prototype.dispose=function(){},e.prototype.render=function(){var e=this.core.gl,t=this.normal;t.program.use(),e.uniform4f(t.uniforms.u_uvScale,.5,.5,.5,.5),e.uniform1i(t.uniforms.u_texture,0),this.core.quadRenderer.render(t.attrs.a_position)},e.prototype.renderModulated=function(e,t,r,n){var i=this.core.gl,o=this.modulated;o.program.use(),i.uniform4f(o.uniforms.u_uvScale,.5,.5,.5,.5),i.uniform1i(o.uniforms.u_texture,0),i.uniform4f(o.uniforms.u_modulation,e,t,r,n),this.core.quadRenderer.render(o.attrs.a_position)},e}()},{"../postfx/BloomFilter":18,"../postfx/HdrCompressFilter":20,"../postfx/MotionBlurFilter":21,"../postfx/ResampleFilter":22,"../postfx/SSAORenderer":23,"../postfx/TemporalAAFilter":25,"../postfx/ToneMappingFilter":26,"../render/GeometryManager":34,"../render/GeometryRenderer":35,"../render/HdrDemosaicFilter":36,"../render/LightRenderer":37,"../render/ReflectionRenderer":39,"../render/ReflectionTextureProvider":40,"../render/RenderingController":41,"../render/ShadowMapRenderer":43,"../render/TextureManager":45,"../render/TextureProvider":46,"../utils/BitArray":48,"../utils/Geometry":49,"../utils/Logger":52,"../validator/FPColorBufferValidator":58,"../validator/SRGBValidator":59,"./JitterTexture":5,"./Profiler":6,"./QuadRenderer":7,"./RenderPipeline":9,"./RendererParameters":11,"./ShaderManager":12,"./TypedRenderBuffers":14,"./Visualizer":15}],11:[function(e,t,r){"use strict";var n=function(){function e(e){this.core=e}return Object.defineProperty(e.prototype,"bloomAmount",{get:function(){return this.core.bloom.params.amount},set:function(e){this.core.bloom.params.amount=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bloomSaturation",{get:function(){return this.core.bloom.params.saturation},set:function(e){this.core.bloom.params.saturation=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bloomTexture",{get:function(){return this.core.bloom.params.texture},set:function(e){this.core.bloom.params.texture=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"motionBlurAmount",{get:function(){return this.core.motionBlur.amount},set:function(e){this.core.motionBlur.amount=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"exposureBias",{get:function(){return this.core.toneMapFilter.params.exposureBias},set:function(e){this.core.toneMapFilter.params.exposureBias=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"vignette",{get:function(){return this.core.toneMapFilter.params.vignette},set:function(e){this.core.toneMapFilter.params.vignette=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoExposureEnabled",{get:function(){return this.core.toneMapFilter.params.autoExposureEnabled},set:function(e){this.core.toneMapFilter.params.autoExposureEnabled=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this.core.toneMapFilter.params.color},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"highlightCrush",{get:function(){return this.core.toneMapFilter.params.highlightCrush},set:function(e){this.core.toneMapFilter.params.highlightCrush=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contrast",{get:function(){return this.core.toneMapFilter.params.contrast},set:function(e){this.core.toneMapFilter.params.contrast=e},enumerable:!0,configurable:!0}),e}();r.RendererCoreParameters=n},{}],12:[function(e,t,r){"use strict";function n(e){return new s(e)}var i=e("../core/GLProgram"),o=e("../core/GLShader"),a=function(){function e(e,t){this.program=e,this.manager=t,this.lastGlobalUniformStructureVersion=null,this.lastGlobalUniformVersion=null,this.globalUniforms=null}return e.prototype.updateGlobalUniforms=function(){var e=this.manager;if(e.globalUniformVersion!==this.lastGlobalUniformVersion){if(this.lastGlobalUniformVersion=e.globalUniformVersion,e.globalUniformStructureVersion!=this.lastGlobalUniformStructureVersion){this.lastGlobalUniformStructureVersion=e.globalUniformStructureVersion;for(var t=this.program.getUniforms(e.globalUniforms.map(function(e){return"u_"+e.name})),r=[],n=0,i=e.globalUniforms;n<i.length;n++){var o=i[n],a=t["u_"+o.name];null!=a&&r.push({index:a,unif:o})}this.globalUniforms=r}for(var s=this.manager.core.gl,u=0,l=this.globalUniforms;u<l.length;u++){var r=l[u],f=r.unif.value;if(r.unif.isIntegral)switch(f.length){case 1:s.uniform1i(r.index,f[0]);break;case 2:s.uniform2i(r.index,f[0],f[1]);break;case 3:s.uniform3i(r.index,f[0],f[1],f[2]);break;case 4:s.uniform4i(r.index,f[0],f[1],f[2],f[3]);break;default:throw new Error}else switch(f.length){case 1:s.uniform1f(r.index,f[0]);break;case 2:s.uniform2f(r.index,f[0],f[1]);break;case 3:s.uniform3f(r.index,f[0],f[1],f[2]);break;case 4:s.uniform4f(r.index,f[0],f[1],f[2],f[3]);break;default:throw new Error}}}},e}();r.createShaderManager=n;var s=function(){function e(e){this.core=e,this.programs={},this.frags={},this.verts={},this.globalParameters={},this.globalUniforms=[],this.globalUniformStructureVersion={},this.globalUniformVersion={},this.globalUniformMap=[]}return e.prototype.dispose=function(){},e.prototype.subscribeGlobalUniforms=function(e){return new a(e,this)},e.prototype.setGlobalParameter=function(e,t){this.globalParameters[e]=t},e.prototype.setGlobalUniform=function(e,t,r,n,i,o){var a,s=this.globalUniformMap[e];null==s&&(s=this.globalUniforms.length,this.globalUniformMap[e]=s,this.globalUniforms.push(a={name:e,value:[0],isIntegral:!t}),this.globalUniformStructureVersion={});var u=this.globalUniforms[s].value;u[0]=r,null!=n?(u[1]=n,null!=i?(u[2]=i,null!=o?u[3]=o:u.length>3&&(u.length=3)):u.length>2&&(u.length=2)):u.length>1&&(u.length=1),this.globalUniformVersion={}},e.prototype.getShader=function(e,t,r,n){var i=[r];for(var a in n)i.push(a),i.push(String(n[a]));var s=i.join("_"),u=e[s];if(!u){var l=o.GLShader.preprocess(this.core,[{requires:[r],source:""}],n,t);u=o.GLShader.compile(this.core,t,l),e[s]=u}return u},e.prototype.get=function(e,t,r,n){var o=[e,"-",t];for(var a in n)o.push(a),o.push(String(n[a]));var s=o.join("_"),u=this.core.gl,l=this.programs[s];return l||(l=i.GLProgram.link(this.core,[this.getShader(this.verts,u.VERTEX_SHADER,e,n),this.getShader(this.verts,u.FRAGMENT_SHADER,t,n)],r),this.programs[s]=l),l},e}()},{"../core/GLProgram":3,"../core/GLShader":4}],13:[function(e,t,r){"use strict";var n=e("../shaders/ShaderChunk");r.shaderChunks=n.shaderChunks},{"../shaders/ShaderChunk":47}],14:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=e("./RenderBuffers"),o=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"LogRGB"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.LogRGBTextureRenderBufferInfo=o;var a=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"Linear RGB"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.LinearRGBTextureRenderBufferInfo=a;var s=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"HDR Mosaic"},enumerable:!0,configurable:!0}),t}(i.TextureRenderBufferInfo);r.HdrMosaicTextureRenderBufferInfo=s;var u=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"Mosaiced G-Buffer"},enumerable:!0,configurable:!0}),t}(i.TextureRenderBufferInfo);r.GBufferMosaicTextureRenderBufferInfo=u;var l=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"Depth"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.DepthTextureRenderBufferInfo=l;var f=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"Linearized Depth"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.LinearDepthTextureRenderBufferInfo=f;var h=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"G0"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.GBuffer0TextureRenderBufferInfo=h;var c=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"G1"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.GBuffer1TextureRenderBufferInfo=c;var p=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"G2"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.GBuffer2TextureRenderBufferInfo=p;var d=function(e){function t(){e.apply(this,arguments)}return n(t,e),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"G3"},enumerable:!0,configurable:!0}),t.prototype.cloneWithDimension=function(e,r,n){return new t(e,r,n,this.format)},t}(i.TextureRenderBufferInfo);r.GBuffer3TextureRenderBufferInfo=d},{"./RenderBuffers":8}],15:[function(e,t,r){"use strict";var n=e("./RenderBuffers"),i=function(){function e(e){this.core=e}return e.prototype.dispose=function(){},e.prototype.setupColorVisualizer=function(e,t){var r=this,i=new n.DummyRenderBufferInfo("Visualized Output");return t.push({inputs:{input:e},outputs:{output:i},optionalOutputs:["output"],name:"Visualize Color Buffer",factory:function(e){return new o(r.core,e.inputs.input,"FS_VisualizeColor")}}),i},e.prototype.setupLinearDepthVisualizer=function(e,t){var r=this,i=new n.DummyRenderBufferInfo("Visualized Output");return t.push({inputs:{input:e},outputs:{output:i},optionalOutputs:["output"],name:"Visualize Linear Depth Buffer",factory:function(e){return new o(r.core,e.inputs.input,"FS_VisualizeLinearDepth")}}),i},e.prototype.setupGBufferVisualizer=function(e,t,r){var i=this,o=new n.DummyRenderBufferInfo("Visualized Output"),s=""+t;switch(t){case 0:s="Albedo";break;case 1:s="Normal";break;case 2:s="Velocity";break;case 3:s="Roughness";break;case 4:s="Metallic";break;case 5:s="Specular";break;case 6:s="Preshaded";break;case 7:s="MaterialId"}return r.push({inputs:{g0:e.g0,g1:e.g1,g2:e.g2,g3:e.g3},outputs:{output:o},optionalOutputs:["output"],name:"Visualize "+t,factory:function(e){return new a(i.core,e.inputs.g0,e.inputs.g1,e.inputs.g2,e.inputs.g3,t)}}),o},e}();r.BufferVisualizer=i;var o=function(){function e(e,t,r){this.core=e,this.input=t,this.shader=r,this.program=e.shaderManager.get("VS_Passthrough",r,["a_position"]),this.attributes=this.program.getAttributes(["a_position"]),this.uniforms=this.program.getUniforms(["u_texture","u_uvScale"])}return e.prototype.dispose=function(){},e.prototype.beforeRender=function(){},e.prototype.perform=function(){var e=this.core.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),this.program.use(),e.uniform1i(this.uniforms.u_texture,0),e.uniform4f(this.uniforms.u_uvScale,.5,.5,.5,.5),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),this.core.state.flags=0;var t=this.core.quadRenderer;t.render(this.attributes.a_position)},e.prototype.afterRender=function(){},e}(),a=function(){function e(e,t,r,n,i,o){this.core=e,this.inG0=t,this.inG1=r,this.inG2=n,this.inG3=i,this.type=o,this.program=e.shaderManager.get("VS_Passthrough","FS_VisualizeGBuffer",["a_position"],{visualizedAttribute:o}),this.attributes=this.program.getAttributes(["a_position"]),this.uniforms=this.program.getUniforms(["u_g0","u_g1","u_g2","u_g3","u_uvScale"])}return e.prototype.dispose=function(){},e.prototype.beforeRender=function(){},e.prototype.perform=function(){var e=this.core.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG0.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inG1.texture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.inG2.texture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.inG3.texture),this.program.use(),e.uniform1i(this.uniforms.u_g0,0),e.uniform1i(this.uniforms.u_g1,1),e.uniform1i(this.uniforms.u_g2,2),e.uniform1i(this.uniforms.u_g3,3),e.uniform4f(this.uniforms.u_uvScale,.5,.5,.5,.5),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),this.core.state.flags=0;var t=this.core.quadRenderer;t.render(this.attributes.a_position)},e.prototype.afterRender=function(){},e}()},{"./RenderBuffers":8}],16:[function(e,t,r){arguments[4][13][0].apply(r,arguments)},{"../shaders/ShaderChunk":47,dup:13}],17:[function(e,t,r){"use strict";var n=e("../core/RenderBuffers"),i=e("../core/GLFramebuffer"),o=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t,r){var i=this,o=t.outWidth,s=t.outHeight,u=t.dir,l={output:new n.TextureRenderBufferInfo(0==u?"H Bilateral Result":"V Bilateral Result",o,s,n.TextureRenderBufferFormat.R8)};return r.push({inputs:{input:e.input,linearDepth:e.linearDepth},outputs:{output:l.output},bindings:[],optionalOutputs:[],name:0==u?"H Bilateral Filter":"V Bilateral Filter",factory:function(e){return new a(i,e.inputs.input,e.inputs.linearDepth,e.outputs.output,t)}}),l},e}();r.BilateralFilterRenderer=o;var a=function(){function e(e,t,r,n,o){this.parent=e,this.input=t,this.inLinearDepth=r,this.out=n,this.params=o,this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[n.texture]});var a=e.renderer.shaderManager.get("VS_BilateralFilter","FS_BilateralFilter",["a_position"]);this.program={program:a,uniforms:a.getUniforms(["u_input","u_linearDepth","u_texCoordOffset"]),attributes:a.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_input,0),e.uniform1i(t.uniforms.u_linearDepth,1);var r=this.params.kernelScale/this.out.width,n=this.params.kernelScale/this.out.height;switch(this.params.dir){case 0:n=0;break;case 1:r=0}e.uniform2f(t.uniforms.u_texCoordOffset,r,n);var i=this.parent.renderer.quadRenderer;i.render(t.attributes.a_position),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}();r.BilateralFilterRendererInstance=a},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8}],18:[function(e,t,r){"use strict";var n=window.THREE,i=e("../core/TypedRenderBuffers"),o=e("../core/GLFramebuffer"),a=e("./BlurFilter"),s=e("./SimpleOps"),u=e("./ResampleFilter"),l=function(){function e(e){this.renderer=e,this.params={amount:.5,saturation:1,texture:null,textureZoom:1},this.resampler=new u.ResampleFilterRenderer(e),this.blurFlt=new a.GaussianBlurFilterRenderer(e),this.adder=new s.BufferAdder(e)}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t){var r,o=this,a=1/128;this.renderer.supportsSRGB||(a=1/16),e instanceof i.LinearRGBTextureRenderBufferInfo&&(a=1),e instanceof i.LogRGBTextureRenderBufferInfo?(r=new i.LinearRGBTextureRenderBufferInfo("Bloom 1/2",e.width+1>>1,e.height+1>>1,e.format),t.push({inputs:{input:e},outputs:{output:r},bindings:[],optionalOutputs:[],name:"Resample and Convert To Linear RGB",factory:function(e){return new f(o,e.inputs.input,e.outputs.output,a)}})):(r=this.resampler.setupLinearResampler(e,{outWidth:e.width+1>>1,outHeight:e.height+1>>1},t),r.name="Bloom 1/2");for(var s=[],u=r,l=0;l<6;++l){var c=4<<l;if(e.width<4*c||e.height<4*c)break;var p=this.resampler.setupLinearResampler(u,{outWidth:e.width+c-1>>l+2,outHeight:e.height+c-1>>l+2},t);if(p.name="Bloom 1/"+c,l<1)u=p;else{var d=this.blurFlt.setupFilter(p,2,t);d.name="Bloom 1/"+c+" LPFed",s.push(d),u=d}}for(var l=s.length-2;l>=0;--l){var m=1.5;u=this.adder.setupFilter(s[l],u,new n.Vector4(m,m,m,m),t)}var g=e instanceof i.LinearRGBTextureRenderBufferInfo?new i.LinearRGBTextureRenderBufferInfo("Bloom Added",e.width,e.height,e.format):new i.LogRGBTextureRenderBufferInfo("Bloom Added",e.width,e.height,e.format);return t.push({inputs:{input:e,bloom:u},outputs:{output:g},bindings:[],optionalOutputs:[],name:"Combine Bloom",factory:function(t){return new h(o,t.inputs.input,t.inputs.bloom,t.outputs.output,e instanceof i.LogRGBTextureRenderBufferInfo,1/32/a)}}),g},e}();r.BloomFilterRenderer=l;var f=function(){function e(e,t,r,n){this.parent=e,this.input=t,this.out=r,this.gain=n,this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var i=e.renderer.shaderManager.get("VS_BloomDownsample","FS_BloomDownsample",["a_position"]);this.program={program:i,uniforms:i.getUniforms(["u_input","u_gain","u_texCoordOffset"]),attributes:i.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_input,0),e.uniform1f(t.uniforms.u_gain,.25*this.gain),e.uniform2f(t.uniforms.u_texCoordOffset,.5/this.input.width,.5/this.input.height);var r=this.parent.renderer.quadRenderer;r.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}(),h=function(){function e(e,t,r,n,i,a){this.parent=e,this.input=t,this.bloom=r,this.out=n,this.gain=a,this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[n.texture]}),this.program=[];for(var s=0;s<2;++s){var u=e.renderer.shaderManager.get("VS_Bloom","FS_Bloom",["a_position"],{useLogRGB:i,hasTexture:0!=(1&s)});this.program.push({program:u,uniforms:u.getUniforms(["u_input","u_bloom","u_texture","u_strength","u_saturation","u_dustScale"]),attributes:u.getAttributes(["a_position"])})}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.bloom.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR);var t=this.parent.renderer.textures.get(this.parent.params.texture);t&&(e.activeTexture(e.TEXTURE2),t.bind());var r=0;t&&(r|=1);var n=this.program[r];n.program.use(),e.uniform1i(n.uniforms.u_input,0),e.uniform1i(n.uniforms.u_bloom,1),e.uniform1i(n.uniforms.u_texture,2);var i=this.parent.params;e.uniform1f(n.uniforms.u_strength,i.amount*this.gain),e.uniform1f(n.uniforms.u_saturation,i.saturation),e.uniform2f(n.uniforms.u_texCoordOffset,.5/this.input.width,.5/this.input.height),e.uniform2f(n.uniforms.u_dustScale,.5*this.input.width/(Math.max(this.input.width,this.input.height)*i.textureZoom),.5*this.input.height/(Math.max(this.input.width,this.input.height)*i.textureZoom));var o=this.parent.renderer.quadRenderer;o.render(n.attributes.a_position),e.activeTexture(e.TEXTURE1),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/TypedRenderBuffers":14,"./BlurFilter":19,"./ResampleFilter":22,"./SimpleOps":24}],19:[function(e,t,r){"use strict";var n=e("../core/TypedRenderBuffers"),i=e("../core/GLFramebuffer"),o=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t,r){var i=this,o=new n.LinearRGBTextureRenderBufferInfo("H & V Blurred",e.width,e.height,e.format),u=new n.LinearRGBTextureRenderBufferInfo("H Blurred",e.width,e.height,e.format);return r.push({inputs:{input:e},outputs:{output:u},bindings:[],optionalOutputs:[],name:"H Gaussian Blur (sigma="+t+")",factory:function(e){return new s(i,e.inputs.input,e.outputs.output,t,a.Horitonzal)}}),r.push({inputs:{input:u},outputs:{output:o},bindings:[],optionalOutputs:[],name:"V Gaussian Blur (sigma="+t+")",factory:function(e){return new s(i,e.inputs.input,e.outputs.output,t,a.Vertical)}}),o},e}();r.GaussianBlurFilterRenderer=o;var a;!function(e){e[e.Horitonzal=0]="Horitonzal",e[e.Vertical=1]="Vertical"}(a||(a={}));var s=function(){function e(e,t,r,n,o){this.parent=e,this.input=t,this.out=r,this.sigma=n,this.dir=o,this.kernelRadius=Math.floor(2*n),this.kernelSize=1+2*this.kernelRadius;var a=0;this.weights=[];for(var s=0;s<this.kernelSize;++s){var u=(s-this.kernelRadius)/n,l=Math.exp(-u*u);this.weights.push(l),a+=l}for(var f=1/a,s=0;s<this.kernelSize;++s)this.weights[s]*=f;this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var h=e.renderer.shaderManager.get("VS_GaussianBlur","FS_GaussianBlur",["a_position"],{kernelSize:this.kernelSize});this.program={program:h,uniforms:h.getUniforms(["u_input","u_linearDepth","u_texCoordOffset","u_texCoordIncr","u_weight1","u_weight2","u_weight3","u_weight4","u_weight5","u_weight6","u_weight7","u_weight8","u_weight9","u_weight10","u_weight11"]),attributes:h.getAttributes(["a_position"])},this.weightUniforms=[];for(var s=1;s<=this.kernelSize;++s)this.weightUniforms.push(this.program.uniforms["u_weight"+s])}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_input,0),e.uniform1i(t.uniforms.u_linearDepth,1);for(var r=this.weightUniforms,n=this.weights,i=0;i<n.length;++i)e.uniform1f(r[i],n[i]);var o=1/this.out.width,s=1/this.out.height;
switch(this.dir){case a.Horitonzal:s=0;break;case a.Vertical:o=0}e.uniform2f(t.uniforms.u_texCoordIncr,o,s),e.uniform2f(t.uniforms.u_texCoordOffset,-o*this.kernelRadius,-s*this.kernelRadius);var u=this.parent.renderer.quadRenderer;u.render(t.attributes.a_position),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/TypedRenderBuffers":14}],20:[function(e,t,r){"use strict";var n=e("../core/TypedRenderBuffers"),i=e("../core/GLFramebuffer"),o=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t,r,i,o){var s=this,u=e.width,l=e.height,f=new n.LinearRGBTextureRenderBufferInfo(1==r?"Compressed":"Decompressed",u,l,e.format);return o.push({inputs:{input:e},outputs:{output:f},bindings:[],optionalOutputs:[],name:(1==r?"Compress":"Decompress")+" HDR",factory:function(e){return new a(s,e.inputs.input,e.outputs.output,t,r,i)}}),f},e}();r.HdrCompressFilter=o;var a=function(){function e(e,t,r,n,o,a){this.parent=e,this.input=t,this.out=r,this.scale=a,this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var s=e.renderer.shaderManager.get("VS_HdrCompress","FS_HdrCompress",["a_position"],{operatorType:n,direction:o});this.program={program:s,uniforms:s.getUniforms(["u_input","u_gain","u_jitter","u_jitterScale"]),attributes:s.getAttributes(["a_position"])},0==o&&(this.scale=1/this.scale)}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.state.flags=2,this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture);var t=this.parent.renderer.uniformJitter;e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t.texture);var r=this.program;r.program.use(),e.uniform1i(r.uniforms.u_input,0),e.uniform1f(r.uniforms.u_gain,this.scale),e.uniform1i(r.uniforms.u_jitter,1),e.uniform2f(r.uniforms.u_jitterScale,this.out.width/t.size,this.out.height/t.size),this.parent.renderer.quadRenderer.render(r.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/TypedRenderBuffers":14}],21:[function(e,t,r){"use strict";var n=e("../core/RenderBuffers"),i=e("../core/TypedRenderBuffers"),o=e("../core/GLFramebuffer"),a=function(){function e(e){this.renderer=e,this.amount=1}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t,r){var o=this,a=e.color.width,f=e.color.height,h=e.color instanceof i.LinearRGBTextureRenderBufferInfo?new i.LinearRGBTextureRenderBufferInfo("Motion Blur Result",a,f,e.color.format):new i.LogRGBTextureRenderBufferInfo("Motion Blur Result",a,f,e.color.format),c=Math.ceil(e.color.width/t.maxBlur),p=Math.ceil(e.color.height/t.maxBlur),d=new n.TextureRenderBufferInfo("TileMax Velocity Map",c,p,n.TextureRenderBufferFormat.R8G8),m=new n.TextureRenderBufferInfo("NeighboxMax Velocity Map 1",c,p,n.TextureRenderBufferFormat.R8G8),g=new n.TextureRenderBufferInfo("NeighboxMax Velocity Map 2",c,p,n.TextureRenderBufferFormat.R8G8);return r.push({inputs:{g0:e.g0,g1:e.g1},outputs:{output:d},bindings:[],optionalOutputs:[],name:"Motion Blur: TileMax",factory:function(e){return new s(o,e.inputs.g0,e.inputs.g1,e.outputs.output,t.maxBlur)}}),r.push({inputs:{input:d},outputs:{output:m},bindings:[],optionalOutputs:[],name:"Motion Blur: NeighborMax",factory:function(e){return new u(o,e.inputs.input,e.outputs.output)}}),r.push({inputs:{input:m},outputs:{output:g},bindings:[],optionalOutputs:[],name:"Motion Blur: NeighborMax",factory:function(e){return new u(o,e.inputs.input,e.outputs.output)}}),r.push({inputs:{g0:e.g0,g1:e.g1,neighborVel:g,color:e.color,linearDepth:e.linearDepth},outputs:{output:h},bindings:[],optionalOutputs:[],name:"Motion Blur: Final Pass",factory:function(r){return new l(o,r.inputs.color,r.inputs.g0,r.inputs.g1,r.inputs.neighborVel,r.inputs.linearDepth,r.outputs.output,t.maxBlur,e.color instanceof i.LogRGBTextureRenderBufferInfo)}}),h},e}();r.MotionBlurFilterRenderer=a;var s=function(){function e(e,t,r,n,i){this.parent=e,this.inG0=t,this.inG1=r,this.out=n,this.maxVelocity=i;var a=t.width/n.width;this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[n.texture]});var s=e.renderer.shaderManager.get("VS_MotionBlurDownsample","FS_MotionBlurDownsample",["a_position"],{scale:Math.ceil(a)});this.program={program:s,uniforms:s.getUniforms(["u_g0","u_g1","u_texCoordIncr","u_texCoordOffset","u_velocityScale","u_amount"]),attributes:s.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG0.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inG1.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_g0,0),e.uniform1i(t.uniforms.u_g1,1),e.uniform1f(t.uniforms.u_amount,this.parent.amount),e.uniform2f(t.uniforms.u_velocityScale,this.inG0.width/this.maxVelocity*.25,this.inG0.height/this.maxVelocity*.25),e.uniform2f(t.uniforms.u_texCoordIncr,1/this.inG0.width,1/this.inG0.height),e.uniform2f(t.uniforms.u_texCoordOffset,this.out.width/this.inG0.width*-.5,this.out.height/this.inG0.height*-.5);var r=this.parent.renderer.quadRenderer;r.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}(),u=function(){function e(e,t,r){this.parent=e,this.input=t,this.out=r,this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var n=e.renderer.shaderManager.get("VS_MotionBlurNeighborMax","FS_MotionBlurNeighborMax",["a_position"]);this.program={program:n,uniforms:n.getUniforms(["u_input","u_texCoordOffset"]),attributes:n.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_input,0),e.uniform2f(t.uniforms.u_texCoordOffset,1/this.input.width,1/this.input.height);var r=this.parent.renderer.quadRenderer;r.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}(),l=function(){function e(e,t,r,n,i,a,s,u,l){this.parent=e,this.inColor=t,this.inG0=r,this.inG1=n,this.inVelTile=i,this.inLinearDepth=a,this.out=s,this.maxVelocity=u,this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[s.texture]});var f=e.renderer.shaderManager.get("VS_MotionBlur","FS_MotionBlur",["a_position"],{numSamples:8,useLogRGB:l});this.program={program:f,uniforms:f.getUniforms(["u_g0","u_g1","u_velTile","u_color","u_linearDepth","u_velocityScale","u_velocityInvScale","u_minimumVelocity","u_minimumVelocitySquared","u_amount","u_jitter","u_jitterScale"]),attributes:f.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2;var t=this.parent.renderer.uniformDitherJitter;e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG0.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inG1.texture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.inVelTile.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.inColor.texture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture),e.activeTexture(e.TEXTURE5),e.bindTexture(e.TEXTURE_2D,t.texture);var r=this.program;r.program.use(),e.uniform1i(r.uniforms.u_g0,0),e.uniform1i(r.uniforms.u_g1,1),e.uniform1i(r.uniforms.u_velTile,2),e.uniform1i(r.uniforms.u_color,3),e.uniform1i(r.uniforms.u_linearDepth,4),e.uniform1i(r.uniforms.u_jitter,5),e.uniform2f(r.uniforms.u_velocityScale,this.inG0.width/this.maxVelocity*.25,this.inG0.height/this.maxVelocity*.25),e.uniform2f(r.uniforms.u_velocityInvScale,this.maxVelocity/this.inG0.width*2,this.maxVelocity/this.inG0.height*2),e.uniform1f(r.uniforms.u_minimumVelocitySquared,Math.pow(.5/this.maxVelocity,2)),e.uniform1f(r.uniforms.u_minimumVelocity,.5/this.maxVelocity),e.uniform2f(r.uniforms.u_jitterScale,this.inG0.width/t.size,this.inG0.height/t.size),e.uniform1f(r.uniforms.u_amount,this.parent.amount);var n=this.parent.renderer.quadRenderer;n.render(r.attributes.a_position),e.activeTexture(e.TEXTURE2),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../core/TypedRenderBuffers":14}],22:[function(e,t,r){"use strict";var n=e("../core/TypedRenderBuffers"),i=e("../core/GLFramebuffer"),o=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupNearestResampler=function(e,t,r){var n=this,i=t.outWidth,o=t.outHeight,s=e.cloneWithDimension(e.name+" Resampled",i,o);return r.push({inputs:{input:e},outputs:{output:s},bindings:[],optionalOutputs:[],name:"Resample (Nearest)",factory:function(e){return new a(n,e.inputs.input,e.outputs.output,0)}}),s},e.prototype.setupLinearResampler=function(e,t,r){var i=this,o=t.outWidth,s=t.outHeight,u=new n.LinearRGBTextureRenderBufferInfo(e.name+" Resampled",o,s,e.format);return r.push({inputs:{input:e},outputs:{output:u},bindings:[],optionalOutputs:[],name:"Resample (Linear)",factory:function(e){return new a(i,e.inputs.input,e.outputs.output,1)}}),u},e}();r.ResampleFilterRenderer=o;var a=function(){function e(e,t,r,n){this.parent=e,this.input=t,this.out=r,this.type=n,this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var o=e.renderer.shaderManager.get("VS_Passthrough","FS_Passthrough",["a_position"]);this.program={program:o,uniforms:o.getUniforms(["u_texture","u_uvScale"]),attributes:o.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),1==this.type&&(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR));var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_texture,0),e.uniform4f(t.uniforms.u_uvScale,.5,.5,.5,.5);var r=this.parent.renderer.quadRenderer;r.render(t.attributes.a_position),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}();r.ResampleFilterRendererInstance=a},{"../core/GLFramebuffer":2,"../core/TypedRenderBuffers":14}],23:[function(e,t,r){"use strict";var n=window.THREE,i=e("../core/RenderBuffers"),o=e("../core/GLFramebuffer"),a=e("./BilateralFilter"),s=e("../utils/Geometry"),u=function(){function e(e){this.renderer=e,this.bilateral=new a.BilateralFilterRenderer(e)}return e.prototype.dispose=function(){this.bilateral.dispose()},e.prototype.setupFilter=function(e,t){var r=this,n=e.linearDepth.width,o=e.linearDepth.height,a=new i.TextureRenderBufferInfo("SSAO Raw Result",n+1>>1,o+1>>1,i.TextureRenderBufferFormat.R8);t.push({inputs:{g2:e.g2,linearDepth:e.linearDepthHalf},outputs:{output:a},bindings:[],optionalOutputs:[],name:"SSAO",factory:function(e){return new l(r,e.inputs.g2,e.inputs.linearDepth,e.outputs.output)}});var s=this.bilateral.setupFilter({input:a,linearDepth:e.linearDepth},{dir:0,outWidth:n,outHeight:o,kernelScale:2},t),u=this.bilateral.setupFilter({input:s.output,linearDepth:e.linearDepth},{dir:1,outWidth:n,outHeight:o,kernelScale:2},t),f={output:u.output};return f},e}();r.SSAORenderer=u;var l=function(){function e(e,t,r,i){this.parent=e,this.inG2=t,this.inLinearDepth=r,this.out=i,this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[i.texture]}),this.tmpMat=new n.Matrix4,this.projectionViewMat=new n.Matrix4,this.viewMat=null,this.viewVec=null;var a=e.renderer.shaderManager.get("VS_SSAO","FS_SSAO",["a_position"]);this.program={program:a,uniforms:a.getUniforms(["u_linearDepth","u_g2","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_sampleOffsetScale"]),attributes:a.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){this.viewMat=this.parent.renderer.currentCamera.matrixWorldInverse,this.projectionViewMat.multiplyMatrices(this.parent.renderer.currentCamera.projectionMatrix,this.parent.renderer.currentCamera.matrixWorldInverse),this.viewVec=s.computeViewVectorCoefFromProjectionMatrix(this.parent.renderer.currentCamera.projectionMatrix,this.viewVec)},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG2.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture);var t=.002*Math.min(this.out.width,this.out.height),r=this.program;r.program.use(),e.uniform1i(r.uniforms.u_g2,0),e.uniform1i(r.uniforms.u_linearDepth,1),e.uniform2f(r.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),e.uniform2f(r.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),e.uniform2f(r.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y),e.uniform2f(r.uniforms.u_sampleOffsetScale,t/this.out.width,t/this.out.height);var n=this.parent.renderer.quadRenderer;n.render(r.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}();r.SSAORendererInstance=l},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../utils/Geometry":49,"./BilateralFilter":17}],24:[function(e,t,r){"use strict";var n=e("../core/TypedRenderBuffers"),i=e("../core/GLFramebuffer"),o=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t,r,i){var o=this,s=e.width,u=e.height,l=new n.LinearRGBTextureRenderBufferInfo("Sum",s,u,e.format);return i.push({inputs:{input1:e,input2:t},outputs:{output:l},bindings:["input1","output"],optionalOutputs:[],name:"Add",factory:function(e){return new a(o,e.inputs.input1,e.inputs.input2,e.outputs.output,r?r.clone():null)}}),l},e}();r.BufferAdder=o;var a=function(){function e(e,t,r,n,o){this.parent=e,this.input1=t,this.input2=r,this.out=n,this.modulation=o,this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[n.texture]})}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),this.input1!=this.out&&(this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),e.bindTexture(e.TEXTURE_2D,this.input1.texture),this.parent.renderer.passthroughRenderer.render()),this.parent.renderer.state.flags=10,e.blendFunc(e.ONE,e.ONE),e.bindTexture(e.TEXTURE_2D,this.input2.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),this.modulation?this.parent.renderer.passthroughRenderer.renderModulated(this.modulation.x,this.modulation.y,this.modulation.z,this.modulation.w):this.parent.renderer.passthroughRenderer.render(),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/TypedRenderBuffers":14}],25:[function(e,t,r){"use strict";var n=e("../core/RenderBuffers"),i=e("../core/TypedRenderBuffers"),o=e("../core/GLFramebuffer"),a=function(){function e(e,t){this.renderer=e,this.params=t}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t){var r=this,n=e.color.width,o=e.color.height,a=e.color instanceof i.LinearRGBTextureRenderBufferInfo?new i.LinearRGBTextureRenderBufferInfo("Antialiased",n,o,e.color.format):new i.LogRGBTextureRenderBufferInfo("Antialiased",n,o,e.color.format);return t.push({inputs:{g0:e.g0,g1:e.g1,input:e.color,linearDepth:e.linearDepth},outputs:{output:a},bindings:[],optionalOutputs:[],name:"Temporal AA",factory:function(e){return new s(r,e.inputs.input,e.inputs.g0,e.inputs.g1,e.inputs.linearDepth,e.outputs.output)}}),a},e}();r.TemporalAAFilterRenderer=a;var s=function(){function e(e,t,r,i,a,s){this.parent=e,this.input=t,this.inG0=r,this.inG1=i,this.inLinearDepth=a,this.out=s,this.fb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[s.texture]});var u=e.renderer.gl;this.accumTex=u.createTexture(),u.bindTexture(u.TEXTURE_2D,this.accumTex),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE);var l=t.format==n.TextureRenderBufferFormat.SRGBA8?e.renderer.ext.get("EXT_sRGB").SRGB_ALPHA_EXT:u.RGBA,f=t.format==n.TextureRenderBufferFormat.RGBAF16?e.renderer.ext.get("OES_texture_half_float").HALF_FLOAT_OES:u.UNSIGNED_BYTE;u.texImage2D(u.TEXTURE_2D,0,l,t.width,t.height,0,l,f,null),this.savedDepthTex=u.createTexture(),u.bindTexture(u.TEXTURE_2D,this.savedDepthTex),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texImage2D(u.TEXTURE_2D,0,u.RGBA,t.width,t.height,0,u.RGBA,f,null),this.accumFb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[this.accumTex]}),this.savedDepthFb=o.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[this.savedDepthTex]}),this.firstTime=!0;var h=e.renderer.shaderManager.get("VS_TemporalAA","FS_TemporalAA",["a_position"],{useWiderFilter:e.params.useWiderFilter});this.program={program:h,uniforms:h.getUniforms(["u_input","u_linearDepth","u_oldAccum","u_oldDepth","u_g0","u_g1"]),attributes:h.getAttributes(["a_position"])};var h=e.renderer.shaderManager.get("VS_TemporalAA","FS_TemporalAAPrepass",["a_position"]);this.pre={program:h,uniforms:h.getUniforms(["u_input","u_linearDepth","u_oldAccum","u_oldDepth","u_g0","u_g1"]),attributes:h.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){var e=this.parent.renderer.gl,t=this.parent.renderer.profiler;t.begin("Pass 1"),e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.inG0.texture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.inG1.texture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.accumTex),e.activeTexture(e.TEXTURE5),e.bindTexture(e.TEXTURE_2D,this.savedDepthTex);var r=this.parent.renderer.quadRenderer;this.fb.bind(),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0);var n=this.pre;n.program.use(),e.uniform1i(n.uniforms.u_input,0),e.uniform1i(n.uniforms.u_linearDepth,1),e.uniform1i(n.uniforms.u_g0,2),e.uniform1i(n.uniforms.u_g1,3),e.uniform1i(n.uniforms.u_oldAccum,4),e.uniform1i(n.uniforms.u_oldDepth,5),r.render(n.attributes.a_position),t.end(),t.begin("Pass 2"),this.accumFb.bind(),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.out.texture);var n=this.program;n.program.use(),e.uniform1i(n.uniforms.u_input,0),e.uniform1i(n.uniforms.u_linearDepth,1),e.uniform1i(n.uniforms.u_g0,2),e.uniform1i(n.uniforms.u_g1,3),e.uniform1i(n.uniforms.u_oldAccum,4),e.uniform1i(n.uniforms.u_oldDepth,5),r.render(n.attributes.a_position),t.end(),t.begin("Pass 3"),this.fb.bind(),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.accumTex),this.parent.renderer.passthroughRenderer.render(),t.end(),t.begin("Pass 4"),this.savedDepthFb.bind(),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture),this.parent.renderer.passthroughRenderer.render(),t.end()},e.prototype.afterRender=function(){},e.prototype.dispose=function(){var e=this.parent.renderer.gl;this.fb.dispose(),this.accumFb.dispose(),this.savedDepthFb.dispose(),e.deleteTexture(this.accumTex),e.deleteTexture(this.savedDepthTex)},e}()},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../core/TypedRenderBuffers":14}],26:[function(e,t,r){"use strict";var n=window.THREE,i=e("../core/RenderBuffers"),o=e("../core/TypedRenderBuffers"),a=e("../core/GLFramebuffer"),s=e("../utils/Geometry"),u=function(){function e(e){this.renderer=e,this.params={vignette:1,autoExposureEnabled:!0,exposureBias:0,color:new n.Vector3(1,1,1),highlightCrush:.2,contrast:.5}}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t){var r=this,n=e.width,a=e.height,s=new o.LinearRGBTextureRenderBufferInfo("Tone Mapped",n,a,this.renderer.supportsSRGB?i.TextureRenderBufferFormat.SRGBA8:i.TextureRenderBufferFormat.RGBA8);return t.push({inputs:{input:e},outputs:{output:s},bindings:[],optionalOutputs:[],name:"Tone Mapping",factory:function(t){return new l(r,t.inputs.input,t.outputs.output,e instanceof o.LogRGBTextureRenderBufferInfo)}}),s},e}();r.ToneMappingFilterRenderer=u;var l=function(){function e(e,t,r,n){this.parent=e,this.input=t,this.out=r,this.fb=a.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]}),this.viewVecs=null;var i=e.renderer.shaderManager.get("VS_ToneMapping","FS_ToneMapping",["a_position"],{inputIsLogRGB:n});this.program={program:i,uniforms:i.getUniforms(["u_input","u_vignetteAmount","u_vignetteScale","u_gain","u_color","u_highlightCrush","u_contrast"]),attributes:i.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_input,0);var r=this.parent.params;this.viewVecs=s.computeViewVectorCoefFromProjectionMatrix(this.parent.renderer.currentCamera.projectionMatrix,this.viewVecs),e.uniform1f(t.uniforms.u_vignetteAmount,r.vignette),e.uniform2f(t.uniforms.u_vignetteScale,this.viewVecs.coefX.length(),this.viewVecs.coefY.length()),e.uniform1f(t.uniforms.u_gain,Math.pow(2,r.exposureBias)),e.uniform3f(t.uniforms.u_color,r.color.x,r.color.y,r.color.z),e.uniform1f(t.uniforms.u_highlightCrush,r.highlightCrush),e.uniform1f(t.uniforms.u_contrast,r.contrast);var n=this.parent.renderer.quadRenderer;n.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../core/TypedRenderBuffers":14,"../utils/Geometry":49}],27:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=window.THREE,o=function(e){function t(t,r,n){e.call(this,t,r,n),this.radius=0,this.length=0,this.shadowCameraNear=0!=this.distance?.01*this.distance:.1}return n(t,e),t}(i.PointLight);r.PointLight=o;var a=function(e){function t(t,r){e.call(this,t,r),this.shadowCascadeCount=0,this.shadowCamera=null}return n(t,e),t}(i.DirectionalLight);r.DirectionalLight=a},{}],28:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=window.THREE;!function(e){e[e.Unlit=0]="Unlit",e[e.Opaque=1]="Opaque",e[e.ClearCoat=2]="ClearCoat",e[e.Transparent=3]="Transparent"}(r.MaterialShadingModel||(r.MaterialShadingModel={}));r.MaterialShadingModel;!function(e){e[e.Float=0]="Float",e[e.Float2=1]="Float2",e[e.Float3=2]="Float3",e[e.Float4=3]="Float4",e[e.Texture2D=4]="Texture2D",e[e.TextureCube=5]="TextureCube"}(r.MaterialParameterType||(r.MaterialParameterType={}));var o=(r.MaterialParameterType,0),a=function(){function e(e){this.id=o++,this.shadingModel=e.shadingModel,this.parameters=e.parameters,this.requiredVertexAttributes=(e.requiredVertexAttributes||[]).slice(0),this.shader=e.shader,this.vertexShader=e.vertexShader||""}return e}();r.Material=a;var s=function(e){function t(t,r){e.call(this),this.material=t,this.parameters={};for(var n in t.parameters)this.parameters[n]=t.parameters[n]["default"],r&&null!=r[n]&&(this.parameters[n]=r[n])}return n(t,e),t}(i.Material);r.MaterialInstance=s},{}],29:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=window.THREE,o=function(e){function t(){e.call(this),this.distance=1/0,this.decayDistance=5}return n(t,e),t}(i.Object3D);r.ReflectionProbe=o},{}],30:[function(e,t,r){r.REVISION="0.0.1"},{}],31:[function(e,t,r){"use strict";var n=e("../core/RendererCore"),i=e("./Version"),o=function(){function e(e){var t=this;console.log(this.rendererInfo),e=e||{},this.canvas=e.canvas?e.canvas:document.createElement("canvas");var r={alpha:!1,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};if(this.gl=this.canvas.getContext("webgl",r)||this.canvas.getContext("experimental-webgl",r),!this.gl)throw new Error("could not create WebGL context.");this.canvas.addEventListener("webglcontextlost",function(){t.setup()}),this.canvas.addEventListener("webglcontextrestored",function(){}),this.core=new n.RendererCore(this.gl,e)}return e.prototype.setup=function(){},e.prototype.startProfiling=function(e){this.core.startProfiling(e)},e.prototype.stopProfiling=function(){this.core.stopProfiling()},Object.defineProperty(e.prototype,"rendererName",{get:function(){return"Hyper.WebGLHyperRenderer"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rendererVersion",{get:function(){return i.REVISION},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rendererInfo",{get:function(){return this.rendererName+" "+this.rendererVersion},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"context",{get:function(){return this.core.gl},enumerable:!0,configurable:!0}),e.prototype.render=function(e,t){this.core.render(e,t)},e.prototype.setSize=function(e,t,r){this.canvas.width=e,this.canvas.height=t,this.core.setSize(e,t)},Object.defineProperty(e.prototype,"domElement",{get:function(){return this.canvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parameters",{get:function(){return this.core.parameters},enumerable:!0,configurable:!0}),e}();r.WebGLHyperRenderer=o},{"../core/RendererCore":10,"./Version":30}],32:[function(e,t,r){"use strict";function n(e){return e==l.MaterialShadingModel.Opaque||e==l.MaterialShadingModel.ClearCoat||e==l.MaterialShadingModel.Unlit}var i=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},o=window.THREE,a=e("./MaterialManager"),s=e("./SkinningShader"),u=e("../utils/IntegerMap"),l=e("../public/Materials"),f=e("../core/GLProgram"),h=e("../core/GLShader"),c=e("../utils/ObjectPool"),p=e("../core/Shaders");r.isMaterialShadingModelDeferred=n;var d=function(){function e(e,t,r){this.core=e,this.materialManager=t,this.needsLastWorldPosition=r,this.tmpMat=new o.Matrix4,this.state={projectionMat:new o.Matrix4,projectionViewMat:new o.Matrix4,viewMat:new o.Matrix4,frustum:new o.Frustum,lastViewProjMat:new o.Matrix4,nextToken:!1},this.objs=new u.IntegerMap}return e.prototype.renderGeometry=function(e,t){var r=this,n=this.state;n.viewMat.copy(e),n.projectionMat.copy(t),n.projectionViewMat.multiplyMatrices(t,e),n.frustum.setFromMatrix(n.projectionViewMat);var i=this.core.currentScene;this.renderTree(i),this.objs.forEach(function(e,t){t.token!=n.nextToken&&r.objs.remove(e)}),n.nextToken=!n.nextToken,n.lastViewProjMat.copy(n.projectionViewMat)},e.prototype.cullObject=function(e){return e.frustumCulled&&!this.state.frustum.intersectsObject(e)},e.prototype.renderTree=function(e){var t=e.geometry;null==t||this.cullObject(e)||(e instanceof o.Mesh&&!this.skipsMesh(e)?this.renderMesh(e,t):e instanceof o.Points&&!this.skipsPoints(e)&&this.renderPoints(e,t));for(var r=0,n=e.children;r<n.length;r++){var i=n[r];this.renderTree(i)}},e.prototype.renderMesh=function(e,t){var r=this.objs.get(e.id);r||(r=new g(e,this),this.objs.set(e.id,r)),r.render(this.state)},e.prototype.renderPoints=function(e,t){var r=this.objs.get(e.id);r||(r=new v(e,this),this.objs.set(e.id,r)),r.render(this.state)},e.prototype.skipsMesh=function(e){return!1},e.prototype.skipsPoints=function(e){return!1},e.prototype.skipsMaterial=function(e){return!n(e.material.shadingModel)},e.prototype.setupAdditionalUniforms=function(e,t){},e.prototype.dispose=function(){},e}();r.BaseGeometryPassRenderer=d;var m=function(){function e(e,t,r){this.obj=e,this.renderer=t,this.token=!1,this.lastModelMatrix=null,this.shaderInst=null,this.shader=null,this.lastModelMatrix=e.matrixWorld.clone();var n=a.importThreeJsMaterial(e.material);t.skipsMaterial(n)||(this.shaderInst=t.materialManager.get(n,r),this.shader=this.shaderInst.shader)}return Object.defineProperty(e.prototype,"isSkipped",{get:function(){return null==this.shader},enumerable:!0,configurable:!0}),e.prototype.render=function(e){if(this.shader){var t=this.renderer.core.gl,r=this.obj,n=this.obj.geometry,i=this.renderer,o=i.core.geometryManager.get(n),a=this.shaderInst,s=this.shader,u=s.getGeometryBinding(o);s.glProgram.use(),a.updateParameterUniforms(),u.setupVertexAttribs(),t.uniformMatrix4fv(s.uniforms.u_projectionMatrix,!1,e.projectionMat.elements),t.uniformMatrix4fv(s.uniforms.u_viewProjectionMatrix,!1,e.projectionViewMat.elements),t.uniformMatrix4fv(s.uniforms.u_lastViewProjectionMatrix,!1,e.lastViewProjMat.elements);var l=c.Matrix4Pool.alloc();l.multiplyMatrices(e.viewMat,r.matrixWorld),t.uniformMatrix4fv(s.uniforms.u_viewModelMatrix,!1,l.elements),c.Matrix4Pool.free(l),t.uniformMatrix4fv(s.uniforms.u_viewMatrix,!1,e.viewMat.elements),t.uniformMatrix4fv(s.uniforms.u_modelMatrix,!1,r.matrixWorld.elements),t.uniformMatrix4fv(s.uniforms.u_lastModelMatrix,!1,this.lastModelMatrix.elements),i.setupAdditionalUniforms(r,s),this.glDraw(o)}this.save(e.nextToken)},e.prototype.glDraw=function(e){
var t=this.renderer.core.gl,r=e.indexAttribute;null!=r?r.drawElements(t.TRIANGLES):t.drawArrays(t.TRIANGLES,0,3*e.numFaces)},e.prototype.save=function(e){this.shader&&this.lastModelMatrix.copy(this.obj.matrixWorld),this.token=e},e}(),g=function(e){function t(r,n){e.call(this,r,n,t.computeShaderFlags(r)),this.mesh=r,this.isSkipped||this.shader.skinningShader&&(this.skinning=this.shader.skinningShader.createInstance(r))}return i(t,e),t.computeShaderFlags=function(e){var t=0,r=e instanceof o.SkinnedMesh;return r&&(t|=1),t},t.prototype.render=function(e){this.isSkipped||(this.skinning&&this.skinning.update(),m.prototype.render.call(this,e))},t}(m),v=function(e){function t(t,r){e.call(this,t,r,2),this.points=t}return i(t,e),t.prototype.glDraw=function(e){var t=this.renderer.core.gl,r=e.indexAttribute;null!=r?r.drawElements(t.POINTS):t.drawArrays(t.POINTS,0,e.numVertices)},t}(m),_=function(e){function t(t,r,n){e.call(this,t),this.vsName=r,this.fsName=n}return i(t,e),t.prototype.createShader=function(e,t){return new x(this,e,t)},t}(a.MaterialManager);r.BaseGeometryPassMaterialManager=_;var x=function(e){function t(t,r,n){e.call(this,t,r),this.manager=t,this.source=r,this.flags=n;for(var i=this.getVertexAttributesUsedInShader(h.GLShader.getAllAttributesReferencedByChunk([p.shaderChunks[t.vsName]]),!1),o=this.getVertexAttributesUsedInShader(h.GLShader.getAllAttributesReferencedByChunk([p.shaderChunks[t.vsName]]),!0),u=[],c=[],d=0,m=i;d<m.length;d++){var g=m[d],v=g.substr(2);u.push("attribute vec4 a_"+v+";"),u.push("varying vec4 v_"+v+";"),c.push("varying vec4 v_"+v+";")}c.push(a.getUniformDeclarationsForMaterial(r)),u.push(a.getUniformDeclarationsForMaterial(r)),u.push("void computeExtraValues() {");for(var _=0,x=i;_<x.length;_++){var g=x[_],v=g.substr(2);u.push("v_"+v+" = a_"+v+";")}u.push("}"),u.push("void evaluateVertexShader() {"),u.push(this.source.vertexShader),u.push("}");var T={requires:[t.vsName],source:u.join("\n")};switch(c.push("void evaluateFragmentShader() {"),r.shadingModel){case l.MaterialShadingModel.Unlit:c.push("m_materialId = MaterialIdUnlit;");break;case l.MaterialShadingModel.Opaque:c.push("m_materialId = MaterialIdDefault;");break;case l.MaterialShadingModel.ClearCoat:c.push("m_materialId = MaterialIdClearCoat;")}c.push(this.source.shader),c.push("}");var b,y={requires:[t.fsName,"Materials"],source:c.join("\n")};b=1&n?t.core.ext.get("OES_texture_float")?3:2:0;var w={useNormalMap:!0,skinningMode:b,usePointSize:!!(2&n)},R=null,E=null;try{var M=t.core.gl,D=h.GLShader.preprocess(t.core,[T],w,M.VERTEX_SHADER),S=h.GLShader.preprocess(t.core,[y],w,M.FRAGMENT_SHADER);R=h.GLShader.compile(t.core,M.VERTEX_SHADER,D),E=h.GLShader.compile(t.core,M.FRAGMENT_SHADER,S),this.program=f.GLProgram.link(t.core,[R,E],o)}finally{R&&R.dispose(),E&&E.dispose()}this.uniforms=this.program.getUniforms(["u_projectionMatrix","u_viewProjectionMatrix","u_lastViewProjectionMatrix","u_modelMatrix","u_lastModelMatrix","u_viewMatrix","u_viewModelMatrix"]),0!=b?(this.skinningShader=new s.SkinningShader(this.manager.core,this.program,0!=(4&n),b),this.skinningShader.textureStageIndex=this.numTextureStages,this.numTextureStages+=this.skinningShader.numTextureStagesNeeded):this.skinningShader=null}return i(t,e),Object.defineProperty(t.prototype,"glProgram",{get:function(){return this.program},enumerable:!0,configurable:!0}),t.prototype.dispose=function(){this.program.dispose(),a.Shader.prototype.dispose.call(this)},t}(a.Shader);r.BaseGeometryPassShader=x},{"../core/GLProgram":3,"../core/GLShader":4,"../core/Shaders":13,"../public/Materials":28,"../utils/IntegerMap":51,"../utils/ObjectPool":54,"./MaterialManager":38,"./SkinningShader":44}],33:[function(e,t,r){"use strict";var n=window.THREE,i=e("../utils/ObjectPool"),o=e("../core/GLFramebuffer"),a=e("../utils/Geometry"),s=e("./ShadowMapRenderer"),u=function(){function e(e,t,r,n,i){this.core=e,this.lightBuffer=t,this.inDepth=r,this.inLinearDepth=n,this.shadowMapService=i,this.width=t.width,this.height=t.height,this.infoMap=new Map,this.fb=o.GLFramebuffer.createFramebuffer(e.gl,{colors:[this.lightBuffer.texture],depth:r?r.texture:null}),this.program=[];for(var a=0;a<4;++a){var s=e.shaderManager.get("VS_DirectionalLightShadow","FS_DirectionalLightShadow",["a_position"],{clipByFarPlane:0!=(1&a),clipByNearPlane:0!=(2&a)});this.program.push({program:s,uniforms:s.getUniforms(["u_linearDepth","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_shadowMap","u_shadowMapMatrix","u_depthValue","u_farPlane","u_nearPlane","u_shadowMapZScale"]),attributes:s.getAttributes(["a_position"])})}}return e.prototype.dispose=function(){this.fb.dispose()},e.prototype.reset=function(){var e=this;if(this.infoMap.forEach(function(t,r){t.used?t.used=!1:e.infoMap["delete"](r)}),!(this.core.currentCamera instanceof n.PerspectiveCamera))throw new Error("Non-perspective camera is not supported by DirectionalLightShadowRenderer.");this.viewVec=a.computeViewVectorCoefFromProjectionMatrix(this.core.currentCamera.projectionMatrix)},e.prototype.prepare=function(e){var t=this.infoMap.get(e);null==t&&(t={used:!0,splits:[],dir:new n.Vector3},this.infoMap.set(e,t)),t.dir.copy(e.position),t.dir.normalize();for(var r=e.shadowCascadeCount||2,o=t.splits;o.length<r+1;)o.push(0);for(var a=this.core.currentCamera,u=o[0]=a.near,l=o[o.length-1]=a.far,f=(l-u)/r,h=Math.log(u),c=Math.log(l),p=(c-h)/r,d=1;d<o.length-1;++d){var m=u+f*d,g=Math.exp(h+p*d);o[d]=.5*(m+g)}var v=e.shadowCamera;for(null!=v&&v instanceof Array||(e.shadowCamera=v=[]);v.length<r;)v.push(new n.OrthographicCamera(0,0,0,0));v.length=r;for(var _=[],x=a.matrixWorld,d=0;d<8;++d){var T=i.Vector3Pool.alloc();_.push(T)}var b=i.Vector3Pool.alloc();b.set(0,0,-1),b.applyMatrix4(x);Math.abs(t.dir.dot(b));i.Vector3Pool.free(b);for(var d=0;d<r;++d){for(var y=v[d],w=o[d],R=o[d+1],E=0;E<8;++E){var T=_[E];T.set(this.viewVec.offset.x,this.viewVec.offset.y,-1),1&E?(T.x+=this.viewVec.coefX.x,T.y+=this.viewVec.coefX.y):(T.x-=this.viewVec.coefX.x,T.y-=this.viewVec.coefX.y),2&E?(T.x+=this.viewVec.coefY.x,T.y+=this.viewVec.coefY.y):(T.x-=this.viewVec.coefY.x,T.y-=this.viewVec.coefY.y),T.multiplyScalar(4&E?R:w),T.applyMatrix4(x)}this.setupShadowMapCamera(y,t,_),this.shadowMapService.prepareShadowMap(y,s.ShadowMapType.Normal)}for(var M=0,D=_;M<D.length;M++){var S=D[M];i.Vector3Pool.free(S)}},e.prototype.render=function(e){var t=this.infoMap.get(e),r=e.shadowCamera,n=this.core.gl,o=this.core.profiler;o.begin("Light Buffer Generation");for(var a=this.core.currentCamera,u=a.projectionMatrix,l=e.shadowCascadeCount||2,f=l;f>0;){--f;var h=r[f];this.shadowMapService.renderShadowMap(h,s.ShadowMapType.Normal);var c=0;f<l-1&&(c|=1),this.fb.bind(),0==f?this.core.state.flags=2:null==this.inDepth?(c|=2,this.core.state.flags=2):this.core.state.flags=3,n.viewport(0,0,this.width,this.height),f==l-1&&this.core.invalidateFramebuffer(n.COLOR_ATTACHMENT0),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,this.inLinearDepth.texture),n.activeTexture(n.TEXTURE1),n.bindTexture(n.TEXTURE_2D,this.shadowMapService.currentShadowMapDepth);var p=this.program[c];p.program.use(),n.uniform1i(p.uniforms.u_linearDepth,0),n.uniform1i(p.uniforms.u_shadowMap,1),n.uniform2f(p.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),n.uniform2f(p.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),n.uniform2f(p.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y);var d=i.Matrix4Pool.alloc(),m=i.Matrix4Pool.alloc(),g=i.Matrix4Pool.alloc();m.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse),d.multiplyMatrices(m,a.matrixWorld),m.makeScale(.5,.5,.5).multiply(d),g.makeTranslation(.5,.5,.5).multiply(m),n.uniformMatrix4fv(p.uniforms.u_shadowMapMatrix,!1,g.elements);var v=i.Vector4Pool.alloc();v.set(e.position.x,e.position.y,e.position.z,0),v.normalize(),v.applyMatrix4(g),n.uniform1f(p.uniforms.u_shadowMapZScale,1/v.length()),i.Vector4Pool.free(v),i.Matrix4Pool.free(d),i.Matrix4Pool.free(m),i.Matrix4Pool.free(g);var _=-t.splits[f],x=(_*u.elements[10]+u.elements[14])/(_*u.elements[11]+u.elements[15]);n.uniform1f(p.uniforms.u_depthValue,x),n.uniform1f(p.uniforms.u_farPlane,t.splits[f+1]),n.uniform1f(p.uniforms.u_nearPlane,t.splits[f]),this.core.quadRenderer.render(p.attributes.a_position)}o.end()},e.prototype.computeMinZByShadowCasterBounds=function(e){var t,r=this.core.shadowCasterBounds;return t=(e.x>0?r.max.x:r.min.x)*e.x,t+=(e.y>0?r.max.y:r.min.y)*e.y,t+=(e.z>0?r.max.z:r.min.z)*e.z},e.prototype.setupShadowMapCamera=function(e,t,r){var n=i.Vector3Pool.alloc(),o=i.Vector3Pool.alloc(),a=i.Vector3Pool.alloc(),s=this.core.currentCamera,u=n,l=o,f=t.dir;u.set(0,1,0),u.applyMatrix4(s.matrixWorld),u.cross(f),u.normalize(),l.crossVectors(u,f);for(var h=1/0,c=-(1/0),p=1/0,d=-(1/0),m=1/0,g=-(1/0),v=0,_=r;v<_.length;v++){var x=_[v],T=x.dot(u),b=x.dot(l),y=x.dot(f);h=Math.min(h,T),c=Math.max(c,T),p=Math.min(p,b),d=Math.max(d,b),m=Math.min(m,y),g=Math.max(g,y)}g=Math.max(g,this.computeMinZByShadowCasterBounds(f));var w=.5*(h+c),R=.5*(p+d),E=.5*(m+g),M=a.copy(f),D=e.matrixWorldInverse;D.set(u.x,u.y,u.z,-w,l.x,l.y,l.z,-R,M.x,M.y,M.z,-E,0,0,0,1),e.matrixWorld.getInverse(D),e.projectionMatrix.set(-2/(c-h),0,0,0,0,2/(d-p),0,0,0,0,-2/(g-m),0,0,0,0,1),i.Vector3Pool.free(n),i.Vector3Pool.free(o),i.Vector3Pool.free(a)},e.prototype.setupLiSPSMCamera=function(e,t,r,n,i){},e}();Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=u},{"../core/GLFramebuffer":2,"../utils/Geometry":49,"../utils/ObjectPool":54,"./ShadowMapRenderer":43}],34:[function(e,t,r){"use strict";function n(e){var t=new o.BufferGeometry;e.addEventListener("disposed",function(){t.dispose()}),t.fromGeometry(e);var r=e.faces;if(e.skinWeights&&!t.getAttribute("skinWeights")&&e.skinWeights.length>0){for(var n=e.skinWeights,i=new Float32Array(12*r.length),a=0;a<r.length;++a){var s=r[a],u=s.a;i[12*a]=n[u].x,i[12*a+1]=n[u].y,i[12*a+2]=n[u].z,i[12*a+3]=n[u].w,u=s.b,i[12*a+4]=n[u].x,i[12*a+5]=n[u].y,i[12*a+6]=n[u].z,i[12*a+7]=n[u].w,u=s.c,i[12*a+8]=n[u].x,i[12*a+9]=n[u].y,i[12*a+10]=n[u].z,i[12*a+11]=n[u].w}var l=new o.BufferAttribute(i,4);t.addAttribute("skinWeights",l)}if(e.skinIndices&&!t.getAttribute("skinIndices")&&e.skinIndices.length>0){for(var n=e.skinIndices,i=new Float32Array(12*r.length),a=0;a<r.length;++a){var s=r[a],u=s.a;i[12*a]=n[u].x,i[12*a+1]=n[u].y,i[12*a+2]=n[u].z,i[12*a+3]=n[u].w,u=s.b,i[12*a+4]=n[u].x,i[12*a+5]=n[u].y,i[12*a+6]=n[u].z,i[12*a+7]=n[u].w,u=s.c,i[12*a+8]=n[u].x,i[12*a+9]=n[u].y,i[12*a+10]=n[u].z,i[12*a+11]=n[u].w}var l=new o.BufferAttribute(i,4);t.addAttribute("skinIndices",l)}return t}var i=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},o=window.THREE,a=e("../utils/Utils"),s=function(){function e(e){this.renderer=e,this.table={}}return e.prototype.dispose=function(){},e.prototype.get=function(e){if(e instanceof o.BufferGeometry){var t=this.table[e.id];return t||(t=new u(this,e),this.table[e.id]=t),t}if(e instanceof o.Geometry){var t=this.table[e.id];if(!t){var r=n(e);t=this.get(r),this.table[e.id]=t}return t}throw new Error("please use BufferGeometry")},e.prototype.flush=function(e){var t=this.table[e.id];t&&(delete this.table[e.id],t.dispose())},e}();r.GeometryManager=s;var u=function(e){function t(t,r){var n=this;e.call(this),this.manager=t,this.source=r,r.addEventListener("dispose",this.disposeHandler=function(){return n.onDispose()});var i=r.attributes,o=a.getKeysOfObject(i);this.attributes=[],this.indexAttribute=null,this.numFaces=0,this.numVertices=0;for(var s=0,u=o;s<u.length;s++){var f=u[s],h=i[f],c=new l(t.renderer,h,f);this.attributes.push(c),c.isIndex&&(this.indexAttribute=c,this.numFaces=h.count/3|0),"position"==f&&(this.numVertices=h.count)}null==this.indexAttribute&&(this.numFaces=this.attributes[0].numElements/this.attributes[0].itemSize/3|0),this.update()}return i(t,e),Object.defineProperty(t.prototype,"id",{get:function(){return this.source.id},enumerable:!0,configurable:!0}),t.prototype.update=function(){for(var e=0,t=this.attributes;e<t.length;e++){var r=t[e];r.update()}},t.prototype.onDispose=function(){this.manager.flush(this.source)},t.prototype.dispose=function(){for(var e=0,t=this.attributes;e<t.length;e++){var r=t[e];r.dispose()}this.attributes=null,this.dispatchEvent({type:"disposed",target:this})},t}(o.EventDispatcher);r.Geometry=u;var l=function(){function e(e,t,r){this.renderer=e,this.source=t,this.name=r,this.buffer=null,this.isIndex="index"==r,this.isDynamic=t.dynamic,this.typedArray=null,t.array instanceof Array?(this.typedArray=new Float32Array(t.array.length),this.typedArrayValid=!1):(this.typedArray=t.array,this.typedArrayValid=!0)}return e.prototype.updateTypedArray=function(){var e=this.source.array,t=this.typedArray;if(this.source.needsUpdate||!this.typedArrayValid){if(e!=t)for(var r=0;r<e.length;++r)t[r]=e[r];this.typedArrayValid=!0}},e.prototype.update=function(){var e=this.renderer.gl,t=this.isIndex?e.ELEMENT_ARRAY_BUFFER:e.ARRAY_BUFFER;this.updateTypedArray(),this.buffer?this.source.needsUpdate&&(e.bindBuffer(t,this.buffer),e.bufferSubData(t,0,this.typedArray),this.source.needsUpdate=!1):(this.buffer=e.createBuffer(),e.bindBuffer(t,this.buffer),e.bufferData(t,this.typedArray,this.isDynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW))},e.prototype.drawElements=function(e){var t=this.renderer.gl;t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer),t.drawElements(e,this.source.array.length,t.UNSIGNED_SHORT,0)},e.prototype.setupVertexAttrib=function(e){if(this.isIndex)throw new Error;var t=this.renderer.gl,r=this.source;t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.vertexAttribPointer(e,r.itemSize,t.FLOAT,!1,0,0)},Object.defineProperty(e.prototype,"itemSize",{get:function(){return this.source.itemSize},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"numElements",{get:function(){return this.source.array.length},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){this.buffer&&(this.renderer.gl.deleteBuffer(this.buffer),this.buffer=null)},e}();r.GeometryAttribute=l},{"../utils/Utils":57}],35:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=e("../core/TypedRenderBuffers"),o=e("../core/RenderBuffers"),a=e("./BaseGeometryPassRenderer"),s=e("../core/GLFramebuffer"),u=function(){function e(e){this.renderer=e,this.gpMaterials=new f(e)}return e.prototype.dispose=function(){this.gpMaterials.dispose()},e.prototype.setupShadowPass=function(e){},e.prototype.setupGeometryPass=function(e,t,r){var n=this,a=this.renderer.useFullResolutionGBuffer&&!this.renderer.supportsMRT,s=new i.GBufferMosaicTextureRenderBufferInfo("Mosaicked G-Buffer",a?2*e:e,a?2*t:t,o.TextureRenderBufferFormat.RGBA8),u=new i.DepthTextureRenderBufferInfo("Raw Depth",a?2*e:e,a?2*t:t,o.TextureRenderBufferFormat.Depth),l={g0:new i.GBuffer0TextureRenderBufferInfo("G0",e,t,this.renderer.supportsSRGB?o.TextureRenderBufferFormat.SRGBA8:o.TextureRenderBufferFormat.RGBA8),g1:new i.GBuffer1TextureRenderBufferInfo("G1",e,t,o.TextureRenderBufferFormat.RGBA8),g2:new i.GBuffer2TextureRenderBufferInfo("G2",e,t,o.TextureRenderBufferFormat.RGBA8),g3:new i.GBuffer3TextureRenderBufferInfo("G3",e,t,this.renderer.supportsSRGB?o.TextureRenderBufferFormat.SRGBA8:o.TextureRenderBufferFormat.RGBA8),linearDepth:new i.LinearDepthTextureRenderBufferInfo("Depth",e,t,o.TextureRenderBufferFormat.RGBA8),depth:u},f=this.renderer.ext.get("WEBGL_draw_buffers"),p=f?this.renderer.gl.getParameter(f.MAX_DRAW_BUFFERS_WEBGL):1;return this.renderer.supportsMRT?r.push({inputs:{},outputs:{g0:l.g0,g1:l.g1,g2:l.g2,g3:l.g3,depth:u,linearDepth:p>=5?l.linearDepth:null},bindings:[],optionalOutputs:[],name:"Geometry Pass",factory:function(e){return new h(n,null,[e.outputs.g0,e.outputs.g1,e.outputs.g2,e.outputs.g3,p>=5?e.outputs.linearDepth:null],e.outputs.depth)}}):r.push({inputs:{},outputs:{mosaic:s,depth:u},bindings:[],optionalOutputs:[],name:"Geometry Pass",factory:function(e){return new h(n,e.outputs.mosaic,null,e.outputs.depth)}}),(!this.renderer.supportsMRT||p<5)&&r.push({inputs:{mosaic:this.renderer.supportsMRT?null:s,depth:u},outputs:{g0:this.renderer.supportsMRT?null:l.g0,g1:this.renderer.supportsMRT?null:l.g1,g2:this.renderer.supportsMRT?null:l.g2,g3:this.renderer.supportsMRT?null:l.g3,depth:l.linearDepth},bindings:[],optionalOutputs:["g0","g1","g2","g3","depth"],name:"Demosaick G-Buffer",factory:function(e){return new c(n,n.renderer.supportsMRT?null:e.inputs.mosaic,e.inputs.depth,[n.renderer.supportsMRT?null:e.outputs.g0,n.renderer.supportsMRT?null:e.outputs.g1,n.renderer.supportsMRT?null:e.outputs.g2,n.renderer.supportsMRT?null:e.outputs.g3,e.outputs.depth])}}),l},e}();r.GeometryRenderer=u;var l=function(e){function t(t,r,n){e.call(this,t,r,n),this.manager=t,this.source=r,this.geoUniforms=this.glProgram.getUniforms(["u_screenVelOffset"])}return n(t,e),t}(a.BaseGeometryPassShader),f=function(e){function t(t){e.call(this,t,"VS_Geometry",t.supportsMRT?"FS_GeometryMRT":"FS_GeometryNoMRT")}return n(t,e),t.prototype.createShader=function(e,t){return new l(this,e,4|t)},t}(a.BaseGeometryPassMaterialManager),h=function(e){function t(t,r,n,i){e.call(this,t.renderer,t.gpMaterials,!0),this.parent=t,this.outMosaic=r,this.outBuffers=n,this.outDepth=i,n?(null==n[4]&&n.pop(),this.fb=s.GLFramebuffer.createFramebuffer(t.renderer.gl,{depth:i.texture,colors:n.map(function(e){return e.texture})})):this.fb=s.GLFramebuffer.createFramebuffer(t.renderer.gl,{depth:i.texture,colors:[r.texture]}),this.pointSizeMatrix=new Float32Array(9)}return n(t,e),t.prototype.setupAdditionalUniforms=function(e,t){var r=t,n=this.parent.renderer.gl,i=this.parent.renderer.ctrler;n.uniform2f(r.geoUniforms.u_screenVelOffset,i.screenVelOffX,i.screenVelOffY)},t.prototype.beforeRender=function(){},t.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.outDepth.width,this.outDepth.height),e.clearColor(.5,.5,.5,.5),this.outBuffers&&this.outBuffers.length>=5?this.parent.renderer.state.flags=30721:this.outBuffers?this.parent.renderer.state.flags=14337:this.parent.renderer.state.flags=1,e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),this.renderGeometry(this.parent.renderer.currentCamera.matrixWorldInverse,this.parent.renderer.ctrler.jitteredProjectiveMatrix)},t.prototype.afterRender=function(){},t.prototype.dispose=function(){this.fb.dispose(),a.BaseGeometryPassRenderer.prototype.dispose.call(this)},t}(a.BaseGeometryPassRenderer),c=function(){function e(e,t,r,n){this.parent=e,this.inMosaic=t,this.inDepth=r,this.outG=n,this.programs=[],this.fbs=[],this.uniforms=[],this.attributes=[],this.outWidth=1,this.outHeight=1;for(var i=0;i<n.length;++i){var o=n[i];o&&(this.programs.push(this.parent.renderer.shaderManager.get("VS_GBufferDemosaic","FS_GBufferDemosaic",["a_position"],{gBufferIndex:i})),this.fbs.push(s.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[o.texture]})),this.outWidth=o.width,this.outHeight=o.height)}for(var a=0,u=this.programs;a<u.length;a++){var l=u[a];this.uniforms.push(l.getUniforms(["u_uvScale","u_mosaic","u_depth","u_depthLinearizeCoef"])),this.attributes.push(l.getAttributes(["a_position"]))}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){var e=this.programs,t=this.uniforms,r=this.attributes,n=this.fbs,i=this.parent.renderer.quadRenderer,o=this.parent.renderer.gl;this.parent.renderer.state.flags=0,o.activeTexture(o.TEXTURE0),o.bindTexture(o.TEXTURE_2D,this.inMosaic.texture),o.activeTexture(o.TEXTURE1),o.bindTexture(o.TEXTURE_2D,this.inDepth.texture),o.viewport(0,0,this.outWidth,this.outHeight);for(var a=this.parent.renderer.currentCamera.projectionMatrix,s=0;s<n.length;++s){var u=t[s];n[s].bind(),e[s].use(),this.parent.renderer.invalidateFramebuffer(o.COLOR_ATTACHMENT0,o.DEPTH_ATTACHMENT),o.uniform1i(u.u_mosaic,0),o.uniform1i(u.u_depth,1),o.uniform4f(u.u_uvScale,.5,.5,.5,.5),o.uniform4f(u.u_depthLinearizeCoef,a.elements[15],-a.elements[14],a.elements[11],-a.elements[10]),i.render(r[s].a_position)}},e.prototype.afterRender=function(){},e.prototype.dispose=function(){for(var e=0,t=this.fbs;e<t.length;e++){var r=t[e];r.dispose()}},e}()},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../core/TypedRenderBuffers":14,"./BaseGeometryPassRenderer":32}],36:[function(e,t,r){"use strict";var n=e("../core/TypedRenderBuffers"),i=e("../core/GLFramebuffer"),o=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupFilter=function(e,t,r){var i=this,o=e.width,u=e.height;t.halfSized&&(o>>=1,u>>=1);var l=new n.LogRGBTextureRenderBufferInfo("LogRGB",o,u,e.format),f=new n.LogRGBTextureRenderBufferInfo("LogRGB",o,u,e.format);return r.push({inputs:{input:e},outputs:{output:l},bindings:[],optionalOutputs:[],name:"HDR Demosaic",factory:function(e){return new a(i,e.inputs.input,e.outputs.output,t)}}),r.push({inputs:{input:l},outputs:{output:f},bindings:[],optionalOutputs:[],name:"Smoothen Demosaic Result",factory:function(e){return new s(i,e.inputs.input,e.outputs.output)}}),f},e}();r.HdrDemosaicFilterRenderer=o;var a=function(){function e(e,t,r,n){this.parent=e,this.input=t,this.out=r,this.params=n,this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var o=e.renderer.shaderManager.get("VS_HdrDemosaic","FS_HdrDemosaic",["a_position"]);this.program={program:o,uniforms:o.getUniforms(["u_mosaic"]),attributes:o.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_mosaic,0);var r=this.parent.renderer.quadRenderer;r.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}(),s=function(){function e(e,t,r){this.parent=e,this.input=t,this.out=r,this.fb=i.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var n=e.renderer.shaderManager.get("VS_Blur","FS_Blur",["a_position"]);this.program={program:n,uniforms:n.getUniforms(["u_texture"]),attributes:n.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_texture,0);var r=this.parent.renderer.quadRenderer;r.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/TypedRenderBuffers":14}],37:[function(e,t,r){"use strict";var n=window.THREE,i=e("../core/TypedRenderBuffers"),o=e("../core/RenderBuffers"),a=e("../core/RendererCore"),s=e("../core/GLFramebuffer"),u=e("../utils/Geometry"),l=e("../utils/ObjectPool"),f=e("../public/Lights"),h=e("./ShadowMapRenderer"),c=e("./DirectionalLightShadowRenderer"),p=e("./ScreenSpaceSoftShadowFilter"),d=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupNativeHdrLightPass=function(e,t){var r=this,n=e.g0.width,s=e.g0.height,u=new i.HdrMosaicTextureRenderBufferInfo("Emissive Color Mosaicked",n,s,o.TextureRenderBufferFormat.RGBAF16),l=new i.LinearRGBTextureRenderBufferInfo("Lit Color",n,s,o.TextureRenderBufferFormat.RGBAF16),f=new i.HdrMosaicTextureRenderBufferInfo("Light Buffer",n,s,o.TextureRenderBufferFormat.R8),h=new i.HdrMosaicTextureRenderBufferInfo("Light Temporary Buffer",n,s,o.TextureRenderBufferFormat.R8),c=e.depth.width==n&&e.depth.height==s&&e.depth.isDepthBuffer;return t.push({inputs:{g3:e.g3},outputs:{lit:u},bindings:[],optionalOutputs:[],name:"Emissive Term",factory:function(e){return new m(r,e.inputs.g3,e.outputs.lit,a.HdrMode.NativeHdr)}}),t.push({inputs:{g0:e.g0,g1:e.g1,g2:e.g2,g3:e.g3,linearDepth:e.linearDepth,depth:c?e.depth:null,shadowMaps:e.shadowMaps,ssao:e.ssao,lit:u},outputs:{lit:l,light:f,light2:h},bindings:[],optionalOutputs:[],name:"Light Pass",factory:function(e){return new g(r,e.inputs.g0,e.inputs.g1,e.inputs.g2,e.inputs.g3,e.inputs.linearDepth,e.inputs.depth,e.inputs.ssao,e.inputs.shadowMaps.service,e.inputs.lit,e.outputs.lit,e.outputs.light,e.outputs.light2,a.HdrMode.NativeHdr)}}),l},e.prototype.setupMobileHdrLightPass=function(e,t){var r=this,n=e.g0.width,s=e.g0.height,u=new i.HdrMosaicTextureRenderBufferInfo("Emissive Color Mosaicked",n,s,this.renderer.supportsSRGB?o.TextureRenderBufferFormat.SRGBA8:o.TextureRenderBufferFormat.RGBA8),l=new i.HdrMosaicTextureRenderBufferInfo("Lit Color Mosaicked",n,s,this.renderer.supportsSRGB?o.TextureRenderBufferFormat.SRGBA8:o.TextureRenderBufferFormat.RGBA8),f=new i.HdrMosaicTextureRenderBufferInfo("Light Buffer",n,s,o.TextureRenderBufferFormat.R8),h=new i.HdrMosaicTextureRenderBufferInfo("Light Temporary Buffer",n,s,o.TextureRenderBufferFormat.R8),c=e.depth.width==n&&e.depth.height==s&&e.depth.isDepthBuffer;return t.push({inputs:{g3:e.g3},outputs:{lit:u},bindings:[],optionalOutputs:[],name:"Emissive Term",factory:function(e){return new m(r,e.inputs.g3,e.outputs.lit,a.HdrMode.MobileHdr)}}),t.push({inputs:{g0:e.g0,g1:e.g1,g2:e.g2,g3:e.g3,linearDepth:e.linearDepth,depth:c?e.depth:null,shadowMaps:e.shadowMaps,ssao:e.ssao,lit:u},outputs:{lit:l,light:f,light2:h},bindings:[],optionalOutputs:[],name:"Light Pass",factory:function(e){return new g(r,e.inputs.g0,e.inputs.g1,e.inputs.g2,e.inputs.g3,e.inputs.linearDepth,e.inputs.depth,e.inputs.ssao,e.inputs.shadowMaps.service,e.inputs.lit,e.outputs.lit,e.outputs.light,e.outputs.light2,a.HdrMode.MobileHdr)}}),l},e}();r.LightRenderer=d;var m=function(){function e(e,t,r,n){this.parent=e,this.inG3=t,this.outLit=r,this.hdrMode=n,this.fb=s.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[r.texture]});var i=e.renderer.shaderManager.get("VS_DeferredUnlit","FS_DeferredUnlit",["a_position"],{useHdrMosaic:n==a.HdrMode.MobileHdr});this.program={program:i,uniforms:i.getUniforms(["u_g3","u_ssao","u_dither","u_ditherScale"]),attributes:i.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){var e=this.parent.renderer.gl;this.fb.bind(),this.parent.renderer.state.flags=2,e.viewport(0,0,this.outLit.width,this.outLit.height),this.parent.renderer.invalidateFramebuffer(e.COLOR_ATTACHMENT0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG3.texture);var t=this.parent.renderer.uniformJitter;e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t.texture);var r=this.program;r.program.use(),e.uniform1i(r.uniforms.u_g3,0),e.uniform1i(r.uniforms.u_dither,1),e.uniform2f(r.uniforms.u_ditherScale,this.outLit.width/t.size/4,this.outLit.height/t.size/4);var n=this.parent.renderer.quadRenderer;n.render(r.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}(),g=function(){function e(e,t,r,i,o,u,l,f,h,d,m,g,v,_){this.parent=e,this.inG0=t,this.inG1=r,this.inG2=i,this.inG3=o,this.inLinearDepth=u,this.inDepth=l,this.inSSAO=f,this.inShadowMaps=h,this.inLit=d,this.outLit=m,this.tmpLight=g,this.tmpLight2=v,this.hdrMode=_,this.fb=s.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:l?l.texture:null,colors:[m.texture]}),this.tmpMat=new n.Matrix4,this.projectionViewMat=new n.Matrix4,this.viewMat=null,this.viewVec=null,this.totalAmbient={r:0,g:0,b:0},this.directionalLightProgram=[],this.pointLightProgram=[],this.frustumCorners=[];for(var x=0;x<5;++x)this.frustumCorners.push(new n.Vector3);this.directionalLightShadowRenderer=new c["default"](e.renderer,g,l,u,h),this.ssssRenderer1=new p.ScreenSpaceSoftShadowRendererInstance(e.renderer,g,u,v,0),this.ssssRenderer2=new p.ScreenSpaceSoftShadowRendererInstance(e.renderer,v,u,g,1);for(var x=0;x<4;++x){var T=e.renderer.shaderManager.get("VS_DeferredPointLight","FS_DeferredPointLight",["a_position"],{hasShadowMap:0!=(1&x),isFullScreen:0!=(2&x),useHdrMosaic:_==a.HdrMode.MobileHdr});this.pointLightProgram.push({program:T,uniforms:T.getUniforms(["u_g0","u_g1","u_g2","u_linearDepth","u_lightColor","u_lightStrength","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_shadowMap","u_shadowMapMatrix","u_jitter","u_jitterScale","u_jitterAmount","u_dither","u_ditherScale","u_lightPos","u_lightInfluenceRadius","u_lightInvInfluenceRadiusSquared","u_minimumDistance","u_invDistanceToJitter","u_lightRadius","u_lightLength","u_lightDir"]),attributes:T.getAttributes(["a_position"])})}for(var x=0;x<2;++x){var T=e.renderer.shaderManager.get("VS_DeferredDirectionalLight","FS_DeferredDirectionalLight",["a_position"],{hasShadow:0!=(1&x),useHdrMosaic:_==a.HdrMode.MobileHdr});this.directionalLightProgram.push({program:T,uniforms:T.getUniforms(["u_g0","u_g1","u_g2","u_linearDepth","u_lightDir","u_lightColor","u_lightStrength","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_shadow","u_dither","u_ditherScale"]),attributes:T.getAttributes(["a_position"])})}var T=e.renderer.shaderManager.get("VS_DeferredAmbientLight","FS_DeferredAmbientLight",["a_position"],{useHdrMosaic:_==a.HdrMode.MobileHdr});this.ambientLightProgram={program:T,uniforms:T.getUniforms(["u_g0","u_g1","u_g2","u_linearDepth","u_ssao","u_lightColor","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_dither","u_ditherScale"]),attributes:T.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){var e=this.parent.renderer.currentScene,t=this.parent.renderer.currentCamera;this.viewMat=t.matrixWorldInverse,this.projectionViewMat.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this.viewVec=u.computeViewVectorCoefFromProjectionMatrix(t.projectionMatrix,this.viewVec),this.totalAmbient.r=0,this.totalAmbient.g=0,this.totalAmbient.b=0;var r=t.matrixWorld,n=u.computeFarDepthFromProjectionMatrix(t.projectionMatrix);t.getWorldPosition(this.frustumCorners[4]);for(var i=0;i<4;++i){var o=this.frustumCorners[i];o.set(this.viewVec.offset.x,this.viewVec.offset.y,-1),1&i?(o.x+=this.viewVec.coefX.x,o.y+=this.viewVec.coefX.y):(o.x-=this.viewVec.coefX.x,o.y-=this.viewVec.coefX.y),2&i?(o.x+=this.viewVec.coefY.x,o.y+=this.viewVec.coefY.y):(o.x-=this.viewVec.coefY.x,o.y-=this.viewVec.coefY.y),o.multiplyScalar(n),o.applyMatrix4(r)}this.directionalLightShadowRenderer.reset(),this.prepareTree(e),this.ssssRenderer1.beforeRender(),this.ssssRenderer2.beforeRender()},e.prototype.setState=function(){var e=this.parent.renderer.gl;this.fb.bind(),this.parent.renderer.state.flags=11,e.blendFunc(e.ONE,e.ONE),e.viewport(0,0,this.outLit.width,this.outLit.height),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG0.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inG1.texture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.inG2.texture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.parent.renderer.uniformJitter.texture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture)},e.prototype.perform=function(){var e=this.parent.renderer.currentScene,t=this.parent.renderer.gl,r=this.parent.renderer.profiler;this.fb.bind(),t.viewport(0,0,this.outLit.width,this.outLit.height),this.outLit!=this.inLit&&(this.parent.renderer.invalidateFramebuffer(t.COLOR_ATTACHMENT0),this.parent.renderer.state.flags=2,t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.inLit.texture),this.parent.renderer.passthroughRenderer.render()),this.setState();for(var n=this.parent.renderer.gaussianJitter,i=this.projectionViewMat,o=this.parent.renderer.hdrMode==a.HdrMode.MobileHdr?.25:.5,s=0,u=this.pointLightProgram;s<u.length;s++){
var l=u[s];l.program.use(),t.uniform1i(l.uniforms.u_g0,0),t.uniform1i(l.uniforms.u_g1,1),t.uniform1i(l.uniforms.u_g2,2),t.uniform1i(l.uniforms.u_dither,3),t.uniform2f(l.uniforms.u_ditherScale,this.outLit.width/n.size*o,this.outLit.height/n.size*o),t.uniform1i(l.uniforms.u_linearDepth,4),t.uniform1i(l.uniforms.u_jitter,5),t.uniform1i(l.uniforms.u_shadowMap,6),t.uniform2f(l.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),t.uniform2f(l.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),t.uniform2f(l.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y),t.uniformMatrix4fv(l.uniforms.u_viewProjectionMatrix,!1,i.elements)}for(var f=0,h=this.directionalLightProgram;f<h.length;f++){var l=h[f];l.program.use(),t.uniform1i(l.uniforms.u_g0,0),t.uniform1i(l.uniforms.u_g1,1),t.uniform1i(l.uniforms.u_g2,2),t.uniform1i(l.uniforms.u_dither,3),t.uniform2f(l.uniforms.u_ditherScale,this.outLit.width/n.size*o,this.outLit.height/n.size*o),t.uniform1i(l.uniforms.u_linearDepth,4),t.uniform1i(l.uniforms.u_shadow,6),t.uniform2f(l.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),t.uniform2f(l.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),t.uniform2f(l.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y)}var l=this.ambientLightProgram;l.program.use(),t.uniform1i(l.uniforms.u_g0,0),t.uniform1i(l.uniforms.u_g1,1),t.uniform1i(l.uniforms.u_g2,2),t.uniform1i(l.uniforms.u_dither,3),t.uniform2f(l.uniforms.u_ditherScale,this.outLit.width/n.size*o,this.outLit.height/n.size*o),t.uniform1i(l.uniforms.u_linearDepth,4),t.uniform1i(l.uniforms.u_ssao,5),t.uniform2f(l.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),t.uniform2f(l.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),t.uniform2f(l.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y),this.renderTree(e);var c=this.totalAmbient;if(c.r>0||c.g>0||c.b>0){r.begin("Ambient");var l=this.ambientLightProgram;l.program.use(),t.activeTexture(t.TEXTURE5),t.bindTexture(t.TEXTURE_2D,this.inSSAO.texture),t.uniform3f(l.uniforms.u_lightColor,c.r,c.g,c.b);var p=this.parent.renderer.quadRenderer;t.depthFunc(t.GREATER),p.render(l.attributes.a_position),t.depthFunc(t.LESS),r.end()}},e.prototype.prepareTree=function(e){e instanceof n.Light&&this.prepareLight(e);for(var t=0,r=e.children;t<r.length;t++){var i=r[t];this.prepareTree(i)}},e.prototype.prepareLight=function(e){var t=l.Vector3Pool.alloc(),r=l.Vector3Pool.alloc(),i=l.Vector3Pool.alloc();if(e instanceof n.DirectionalLight&&e.castShadow&&this.directionalLightShadowRenderer.prepare(e),e instanceof n.PointLight&&e.castShadow){var o=.1;e instanceof f.PointLight&&(o=e.shadowCameraNear);var a=e.shadowCamera=e.shadowCamera||new n.CubeCamera(o,e.distance,1024);a.position.copy(e.getWorldPosition(t)),a.updateMatrixWorld(!0);var s=this.inShadowMaps;s.prepareShadowMap(e.shadowCamera,h.ShadowMapType.Normal)}l.Vector3Pool.free(t),l.Vector3Pool.free(r),l.Vector3Pool.free(i)},e.prototype.renderTree=function(e){e instanceof n.Light&&this.renderLight(e);for(var t=0,r=e.children;t<r.length;t++){var i=r[t];this.renderTree(i)}},e.prototype.renderLight=function(e){var t=this.parent.renderer.gl,r=this.parent.renderer.profiler,i=e.color.r,o=e.color.g,a=e.color.b,s=l.Vector3Pool.alloc(),u=l.Vector3Pool.alloc(),c=l.Vector3Pool.alloc();if(e instanceof n.DirectionalLight){r.begin("Directional");var p=e.castShadow;if(p){var d=this.directionalLightShadowRenderer;d.render(e),this.ssssRenderer1.light=e,this.ssssRenderer2.light=e,r.begin("Screen-space Soft Shadow"),this.ssssRenderer1.perform(),r.end(),r.begin("Screen-space Soft Shadow"),this.ssssRenderer2.perform(),r.end(),this.setState(),t.activeTexture(t.TEXTURE6),t.bindTexture(t.TEXTURE_2D,d.lightBuffer.texture)}var m=0;p&&(m|=1);var g=this.directionalLightProgram[m];g.program.use();var v=e.position,_=l.Vector4Pool.alloc().set(v.x,v.y,v.z,0);_.set(v.x,v.y,v.z,0),_.applyMatrix4(this.parent.renderer.currentCamera.matrixWorldInverse),_.normalize(),t.uniform3f(g.uniforms.u_lightDir,_.x,_.y,_.z),l.Vector4Pool.free(_),t.uniform3f(g.uniforms.u_lightColor,i,o,a),t.uniform1f(g.uniforms.u_lightStrength,e.intensity);var x=this.parent.renderer.quadRenderer;t.depthFunc(t.GREATER),x.render(g.attributes.a_position),t.depthFunc(t.LESS),r.end()}if(e instanceof n.PointLight){r.begin("Point");var T=e.distance;0==T&&(T=1/0);var b=!0,y=e.castShadow,w=e.shadowCamera;if(y&&w){var d=this.inShadowMaps;d.renderShadowMap(w,h.ShadowMapType.Normal),this.setState(),t.activeTexture(t.TEXTURE6),t.bindTexture(t.TEXTURE_CUBE_MAP,d.currentCubeShadowDistanceMap)}else y=!1;var R=e.getWorldPosition(u);R.applyMatrix4(this.viewMat);var m=0;b&&(m|=2),y&&(m|=1);var g=this.pointLightProgram[m];if(g.program.use(),e instanceof f.PointLight?(t.uniform1f(g.uniforms.u_lightRadius,e.radius),t.uniform1f(g.uniforms.u_lightLength,.5*e.length),t.uniform1f(g.uniforms.u_invDistanceToJitter,1/e.radius),e.length>0?(s.set(0,0,1).transformDirection(e.matrixWorld).normalize(),t.uniform3f(g.uniforms.u_lightDir,s.x,s.y,s.z),s.multiplyScalar(.5*e.length),R.sub(s)):t.uniform3f(g.uniforms.u_lightDir,0,0,0)):(t.uniform1f(g.uniforms.u_lightRadius,0),t.uniform1f(g.uniforms.u_lightLength,0),t.uniform3f(g.uniforms.u_lightDir,0,0,0),t.uniform1f(g.uniforms.u_invDistanceToJitter,0)),t.uniform3f(g.uniforms.u_lightPos,R.x,R.y,R.z),t.uniform1f(g.uniforms.u_lightInfluenceRadius,T),t.uniform1f(g.uniforms.u_lightInvInfluenceRadiusSquared,1/(T*T)),t.uniform1f(g.uniforms.u_minimumDistance,.01*e.intensity),t.uniform3f(g.uniforms.u_lightColor,i,o,a),t.uniform1f(g.uniforms.u_lightStrength,e.intensity),y){var d=this.inShadowMaps,E=1/e.distance,M=l.Matrix4Pool.alloc(),D=l.Matrix4Pool.alloc(),S=l.Matrix4Pool.alloc();D.getInverse(w.matrixWorld),M.multiplyMatrices(D,this.parent.renderer.currentCamera.matrixWorld),S.makeScale(E,E,E).multiply(M),t.uniformMatrix4fv(g.uniforms.u_shadowMapMatrix,!1,S.elements),l.Matrix4Pool.free(M),l.Matrix4Pool.free(D),l.Matrix4Pool.free(S),t.activeTexture(t.TEXTURE5),t.bindTexture(t.TEXTURE_2D,this.parent.renderer.gaussianJitter.texture),t.uniform2f(g.uniforms.u_jitterAmount,16/d.cubeShadowDistanceMapSize,16/d.cubeShadowDistanceMapSize)}if(t.depthFunc(t.GREATER),b){var x=this.parent.renderer.quadRenderer;x.render(g.attributes.a_position)}t.depthFunc(t.LESS),r.end()}if(e instanceof n.SpotLight,e instanceof n.AmbientLight){var C=this.totalAmbient;C.r+=i,C.g+=o,C.b+=a}l.Vector3Pool.free(s),l.Vector3Pool.free(u),l.Vector3Pool.free(c)},e.prototype.afterRender=function(){this.ssssRenderer1.afterRender(),this.ssssRenderer2.afterRender()},e.prototype.dispose=function(){this.fb.dispose(),this.ssssRenderer1.dispose(),this.ssssRenderer2.dispose(),this.directionalLightShadowRenderer.dispose()},e}()},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../core/RendererCore":10,"../core/TypedRenderBuffers":14,"../public/Lights":27,"../utils/Geometry":49,"../utils/ObjectPool":54,"./DirectionalLightShadowRenderer":33,"./ScreenSpaceSoftShadowFilter":42,"./ShadowMapRenderer":43}],38:[function(require,module,exports){"use strict";function getStandardMaterial(e){var t=0;e.hasMap&&(t|=1),e.hasNormalMap&&(t|=2),e.hasSpecularMap&&(t|=4),e.hasAlphaMap&&(t|=8),e.lit&&(t|=16);var r=standardMaterials[t];if(!r){var n=[],i=[],o={color:{type:Materials_1.MaterialParameterType.Float3,"default":[1,1,1]},emissive:{type:Materials_1.MaterialParameterType.Float3,"default":[1,1,1]},specular:{type:Materials_1.MaterialParameterType.Float,"default":[1]},metal:{type:Materials_1.MaterialParameterType.Float,"default":[0]},roughness:{type:Materials_1.MaterialParameterType.Float,"default":[.5]}};e.hasAlphaMap&&(o.alphaMap={type:Materials_1.MaterialParameterType.Texture2D},n.push("float alphaMap = texture2D(p_alphaMap, v_uv.xy).y;"),n.push("if (alphaMap < 0.5) discard;")),n.push("m_albedo = p_color;"),n.push("m_roughness = p_roughness;"),n.push("m_metallic = p_metal;"),n.push("m_specular = p_specular;"),n.push("m_emissive = p_emissive;"),e.hasMap&&(o.map={type:Materials_1.MaterialParameterType.Texture2D},n.push((e.lit?"m_albedo":"m_emissive")+" *= texture2D(p_map, v_uv.xy).xyz;")),e.hasNormalMap&&(o.normalMap={type:Materials_1.MaterialParameterType.Texture2D},n.push("m_normal = texture2D(p_normalMap, v_uv.xy).xyz;")),e.hasSpecularMap&&(o.specularMap={type:Materials_1.MaterialParameterType.Texture2D},n.push("float specularMap = texture2D(p_specularMap, v_uv.xy).y;"),n.push("m_roughness = mix(1., m_roughness, specularMap);")),(e.hasAlphaMap||e.hasMap||e.hasNormalMap||e.hasSpecularMap)&&i.push("uv"),r=new Materials_1.Material({shadingModel:e.lit?Materials_1.MaterialShadingModel.Opaque:Materials_1.MaterialShadingModel.Unlit,shader:n.join("\n"),parameters:o,requiredVertexAttributes:i}),standardMaterials[t]=r}return r}function getPointsMaterial(e){var t=0;e.hasMap&&(t|=1);var r=pointsMaterials[t];if(!r){var n=[],i=[],o={color:{type:Materials_1.MaterialParameterType.Float3,"default":[1,1,1]},pointSize:{type:Materials_1.MaterialParameterType.Float,"default":1}};n.push("m_emissive = p_color;"),e.hasMap&&(o.map={type:Materials_1.MaterialParameterType.Texture2D},n.push("vec4 texValue = texture2D(p_map, v_pointCoord.xy);"),n.push("if (texValue.w < 0.5) discard;"),n.push("m_emissive *= texValue.xyz;")),r=new Materials_1.Material({shadingModel:Materials_1.MaterialShadingModel.Unlit,shader:n.join("\n"),parameters:o,requiredVertexAttributes:i,vertexShader:"\n                m_pointSize = p_pointSize;\n            "}),pointsMaterials[t]=r}return r}function getUniformDeclarationsForMaterial(e){var t=[];for(var r in e.parameters){var n=e.parameters[r];switch(n.type){case Materials_1.MaterialParameterType.Float:t.push("uniform mediump float p_"+r+";");break;case Materials_1.MaterialParameterType.Float2:t.push("uniform mediump vec2 p_"+r+";");break;case Materials_1.MaterialParameterType.Float3:t.push("uniform mediump vec3 p_"+r+";");break;case Materials_1.MaterialParameterType.Float4:t.push("uniform mediump vec4 p_"+r+";");break;case Materials_1.MaterialParameterType.Texture2D:t.push("uniform sampler2D p_"+r+";");break;case Materials_1.MaterialParameterType.TextureCube:t.push("uniform samplerCube p_"+r+";");break;default:throw new Error("unknown param type: "+n.type)}}return t.join("\n")}function importThreeJsMaterial(e){function t(e){return[e.r*e.r,e.g*e.g,e.b*e.b]}var r=importedMaterialsCache.get(e);if(r)return r;if(e instanceof three.MeshPhongMaterial){var n=getStandardMaterial({hasMap:null!=e.map,hasAlphaMap:null!=e.alphaMap,hasNormalMap:null!=e.normalMap,hasSpecularMap:null!=e.specularMap,lit:!0});return r=new ImportedMaterialInstance(n,e),r.parameters.color=t(e.color),r.parameters.emissive=t(e.emissive),r.parameters.specular=Math.max(e.specular.r,e.specular.g,e.specular.b),r.parameters.metal=e.metal?1:0,r.parameters.roughness=Math.pow(2/(e.shininess+2),.25),e.map&&(r.parameters.map=e.map),e.alphaMap&&(r.parameters.alphaMap=e.alphaMap),e.normalMap&&(r.parameters.normalMap=e.normalMap),e.specularMap&&(r.parameters.specularMap=e.specularMap),importedMaterialsCache.set(e,r),r}if(e instanceof three.MeshBasicMaterial){var n=getStandardMaterial({hasMap:null!=e.map,hasAlphaMap:null!=e.alphaMap,hasNormalMap:!1,hasSpecularMap:!1,lit:!1});return r=new ImportedMaterialInstance(n,e),r.parameters.emissive=t(e.color),e.map&&(r.parameters.map=e.map),e.alphaMap&&(r.parameters.alphaMap=e.alphaMap),importedMaterialsCache.set(e,r),r}if(e instanceof three.PointsMaterial){var n=getPointsMaterial({hasMap:null!=e.map});return r=new ImportedMaterialInstance(n,e),r.parameters.color=t(e.color),e.map&&(r.parameters.map=e.map),r.parameters.pointSize=e.size,importedMaterialsCache.set(e,r),r}if(e instanceof Materials_1.MaterialInstance)return e;throw new Error("\n＿人人人人人人人人人人人人人人人人人人人人人人人人＿\n＞splatted by an unknown type of material!＜\n￣Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^￣\n\n　　⊂⊃\n　　⏜\n　／　＼\n) X X (\nധധധ\n　 　㇎\n　　　㇉\n")}var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},three=window.THREE,IntegerMap_1=require("../utils/IntegerMap"),IdWeakMap_1=require("../utils/IdWeakMap"),BitArray_1=require("../utils/BitArray"),Materials_1=require("../public/Materials"),MaterialManager=function(){function e(e){this.core=e,this.shaderTable=new IntegerMap_1.IntegerMap}return e.prototype.createShader=function(e,t){return new Shader(this,e)},e.prototype.get=function(e,t){var r=this;null==t&&(t=0);var n,i=this.shaderTable.get(e.material.id);if(i||(i=new ShaderGroup(this,e.material),i.addEventListener("disposed",function(){r.shaderTable.remove(e.material.id)}),this.shaderTable.set(e.material.id,i)),n=i.get(t),n.source!=e.material)throw new Error;return n.getInstance(e)},e.prototype.dispose=function(){this.shaderTable.forEach(function(e,t){t.dispose()})},e}();exports.MaterialManager=MaterialManager;var ShaderGroup=function(e){function t(t,r){e.call(this),this.manager=t,this.source=r,this.shaders=new IntegerMap_1.IntegerMap}return __extends(t,e),t.prototype.dispose=function(){var e=this;return this.shaders.isEmpty?void this.dispatchEvent({type:"disposed",target:void 0}):void this.shaders.forEach(function(t,r){e.deleteShader(t)})},t.prototype.deleteShader=function(e){this.shaders.remove(e),this.shaders.isEmpty&&this.dispose()},t.prototype.get=function(e){var t=this,r=this.shaders.get(e);return null==r&&(r=this.manager.createShader(this.source,e),r.addEventListener("disposed",function(){t.deleteShader(e)}),this.shaders.set(e,r)),r},t}(three.EventDispatcher),Shader=function(_super){function Shader(e,t){_super.call(this),this.manager=e,this.source=t,this.insts=new IntegerMap_1.IntegerMap,this.parameterUniformSetter_=null,this.parameterTextureStages=[];var r=t.parameters;for(var n in r){var i=r[n];i.type!=Materials_1.MaterialParameterType.Texture2D&&i.type!=Materials_1.MaterialParameterType.TextureCube||this.parameterTextureStages.push(n)}this.numTextureStages=this.parameterTextureStages.length,this.geometryBindings=new IdWeakMap_1.IdWeakMapWithDisposable}return __extends(Shader,_super),Shader.prototype.dispose=function(){var e=this;return this.insts.isEmpty?void this.dispatchEvent({type:"disposed",target:void 0}):void this.insts.forEach(function(t,r){e.deleteInstance(t)})},Object.defineProperty(Shader.prototype,"glProgram",{get:function(){throw new Error("must be overriden")},enumerable:!0,configurable:!0}),Shader.prototype.getGeometryBinding=function(e){var t=this.geometryBindings.get(e);return null==t&&(t=new ShaderGeometryBindings(this,e),this.geometryBindings.set(e,t)),t},Shader.prototype.getVertexAttributesUsedInShader=function(e,t){for(var r=[],n={},i=0,o=e;i<o.length;i++){var a=o[i],s="a_"+a;n[s]||(t&&r.push(s),n[s]=!0)}for(var u=0,l=this.source.requiredVertexAttributes;u<l.length;u++){var a=l[u],s="a_"+a;n[s]||(r.push(s),n[s]=!0)}return r},Object.defineProperty(Shader.prototype,"parameterUniformSetter",{get:function(){if(!this.parameterUniformSetter_){var unifNames=[],gl=this.manager.core.gl,params=this.source.parameters;for(var name_2 in params)unifNames.push("p_"+name_2);var texStages=this.parameterTextureStages,unifMap=this.glProgram.getUniforms(unifNames),parts=[];parts.push("(function (s, gl, tm, tcm) { return function (matInst) {"),parts.push("var params = matInst.parameters;");var i=0;for(var name_3 in params){var param=params[name_3],unifName="p_"+name_3,v="value"+ ++i;switch(parts.push("var "+v+' = params["'+name_3+'"];'),param.type){case Materials_1.MaterialParameterType.Float:parts.push("gl.uniform1f(s."+unifName+", "+v+");");break;case Materials_1.MaterialParameterType.Float2:parts.push("gl.uniform2f(s."+unifName+", "+v+"[0], "+v+"[1]);");break;case Materials_1.MaterialParameterType.Float3:parts.push("gl.uniform3f(s."+unifName+", "+v+"[0], "+v+"[1], "+v+"[2]);");break;case Materials_1.MaterialParameterType.Float4:parts.push("gl.uniform4f(s."+unifName+", "+v+"[0], "+v+"[1], "+v+"[2], "+v+"[3]);");break;case Materials_1.MaterialParameterType.Texture2D:var texStage=texStages.indexOf(name_3);parts.push("gl.uniform1i(s."+unifName+", "+texStage+");"),parts.push("gl.activeTexture(gl.TEXTURE0 + "+texStage+");"),parts.push("tm.get("+v+").bind();");break;case Materials_1.MaterialParameterType.TextureCube:var texStage=texStages.indexOf(name_3);parts.push("gl.uniform1i(s."+unifName+", "+texStage+");"),parts.push("gl.activeTexture(gl.TEXTURE0 + "+texStage+");"),parts.push("tcm.get("+v+").bind();");break;default:throw new Error}}return parts.push("}; })"),this.parameterUniformSetter_=eval(parts.join("\n"))(unifMap,gl,this.manager.core.textures,this.manager.core.textureCubes)}return this.parameterUniformSetter_},enumerable:!0,configurable:!0}),Shader.prototype.getInstance=function(e){var t=this.insts.get(e.id);return t?t:this.insts.set(e.id,new ShaderInstance(this,e))},Shader.prototype.deleteInstance=function(e){var t=this.insts.get(e);t&&(t.dispose(),this.insts.remove(e)),this.insts.isEmpty&&this.dispose()},Shader}(three.EventDispatcher);exports.Shader=Shader;var ShaderInstance=function(){function e(e,t){this.shader=e,this.source=t,t.addEventListener("disposed",this.disposeHandler=function(){e.deleteInstance(t.id)})}return e.prototype.updateParameterUniforms=function(){this.shader.parameterUniformSetter(this.source)},e.prototype.dispose=function(){},e}();exports.ShaderInstance=ShaderInstance;var ShaderGeometryBindings=function(){function e(e,t){this.shader=e;var r=t.attributes,n=e.glProgram.getAttributes(r.map(function(e){return"a_"+e.name}));this.bindings=[],this.vertexAttribMap=new BitArray_1.BitArray;for(var i=0;i<r.length;++i){var o=r[i];null!=n["a_"+o.name]&&(this.bindings.push({index:n["a_"+o.name],attr:o}),this.vertexAttribMap.toggleOne(n["a_"+o.name],!0))}if(0==this.bindings.length)throw new Error}return e.prototype.setupVertexAttribs=function(){var e=this.shader.manager.core;e.vertexAttribs.toggleAllWithArray(this.vertexAttribMap);for(var t=this.bindings,r=0,n=t;r<n.length;r++){var i=n[r];i.attr.setupVertexAttrib(i.index)}},e.prototype.dispose=function(){},e}();exports.ShaderGeometryBindings=ShaderGeometryBindings;var standardMaterials=[],pointsMaterials=[];exports.getUniformDeclarationsForMaterial=getUniformDeclarationsForMaterial;var ImportedMaterialInstance=function(e){function t(t,r){var n=this;e.call(this,t),this.source=r,r.addEventListener("disposed",this.disposeHandler=function(){return n.onSourceDisposed()})}return __extends(t,e),t.prototype.onSourceDisposed=function(){this.dispose()},t.prototype.dispose=function(){this.source.removeEventListener("disposed",this.disposeHandler),this.source=null,Materials_1.MaterialInstance.prototype.dispose.call(this)},t}(Materials_1.MaterialInstance),importedMaterialsCache=new IdWeakMap_1.IdWeakMapWithDisposable;exports.importThreeJsMaterial=importThreeJsMaterial},{"../public/Materials":28,"../utils/BitArray":48,"../utils/IdWeakMap":50,"../utils/IntegerMap":51}],39:[function(e,t,r){"use strict";var n=window.THREE,i=e("../core/TypedRenderBuffers"),o=e("../core/RenderBuffers"),a=e("../public/ReflectionProbe"),s=e("../utils/Geometry"),u=e("../utils/ObjectPool"),l=e("../core/GLFramebuffer"),f=function(){function e(e){this.renderer=e}return e.prototype.dispose=function(){},e.prototype.setupReflectionPass=function(e,t){var r=this,n=e.g0.width,a=e.g0.height,s=e.lit instanceof i.LinearRGBTextureRenderBufferInfo?new i.LinearRGBTextureRenderBufferInfo("Reflection Added",n,a,o.TextureRenderBufferFormat.RGBAF16):new i.HdrMosaicTextureRenderBufferInfo("Reflection Added Mosaicked",n,a,this.renderer.supportsSRGB?o.TextureRenderBufferFormat.SRGBA8:o.TextureRenderBufferFormat.RGBA8),u=e.lit instanceof i.LinearRGBTextureRenderBufferInfo?new i.LinearRGBTextureRenderBufferInfo("IBL Lit",n,a,o.TextureRenderBufferFormat.RGBAF16):new i.HdrMosaicTextureRenderBufferInfo("IBL Lit Mosaicked",n,a,this.renderer.supportsSRGB?o.TextureRenderBufferFormat.SRGBA8:o.TextureRenderBufferFormat.RGBA8),l=e.lit instanceof i.LinearRGBTextureRenderBufferInfo?e.lit:this.renderer.hdrDemosaic.setupFilter(e.lit,{halfSized:!1},t),f=e.depth.width==n&&e.depth.height==a&&e.depth.isDepthBuffer;return t.push({inputs:{g0:e.g0,g1:e.g1,g2:e.g2,g3:e.g3,linearDepth:e.linearDepth,depth:f?e.depth:null,ssao:e.ssao},outputs:{lit:u},bindings:["lit","lit"],optionalOutputs:[],name:"IBL Pass",factory:function(t){return new h(r,t.inputs.g0,t.inputs.g1,t.inputs.g2,t.inputs.g3,t.inputs.linearDepth,t.inputs.depth,t.inputs.ssao,t.outputs.lit,e.lit instanceof i.HdrMosaicTextureRenderBufferInfo)}}),t.push({inputs:{g0:e.g0,g1:e.g1,g2:e.g2,reflections:u,linearDepth:e.linearDepth,color:l,lit:e.lit},outputs:{lit:s},bindings:["lit","lit"],optionalOutputs:[],name:"Screen-space Reflections",factory:function(t){return new c(r,t.inputs.g0,t.inputs.g1,t.inputs.g2,t.inputs.reflections,t.inputs.color,t.inputs.linearDepth,t.inputs.lit,t.outputs.lit,e.lit instanceof i.HdrMosaicTextureRenderBufferInfo,l instanceof i.LogRGBTextureRenderBufferInfo)}}),s},e}();r.ReflectionRenderer=f;var h=function(){function e(e,t,r,i,o,a,s,u,f,h){this.parent=e,this.inG0=t,this.inG1=r,this.inG2=i,this.inG3=o,this.inLinearDepth=a,this.inDepth=s,this.inSSAO=u,this.outLit=f,this.useHdrMosaic=h,this.fb=l.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:s?s.texture:null,colors:[f.texture]}),this.tmpMat=new n.Matrix4,this.projectionViewMat=new n.Matrix4,this.viewMat=null,this.viewVec=null,this.probes=[],this.ambientProgram=[];for(var c=0;c<2;++c)if(h||0!=(1&c)){var p=e.renderer.shaderManager.get("VS_DeferredAmbientIBL","FS_DeferredAmbientIBL",["a_position"],{isBlendPass:0!=(1&c),useHdrMosaic:h});this.ambientProgram.push({program:p,uniforms:p.getUniforms(["u_g0","u_g1","u_g2","u_linearDepth","u_ssao","u_reflection","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_reflectionMatrix","u_reflectionLodBias","u_reflectionSize","u_dither","u_ditherScale"]),attributes:p.getAttributes(["a_position"])})}else this.ambientProgram.push(null)}return e.prototype.beforeRender=function(){var e=this.parent.renderer.currentCamera;this.viewMat=e.matrixWorldInverse,this.invViewMat=e.matrixWorld,this.projectionViewMat.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this.viewVec=s.computeViewVectorCoefFromProjectionMatrix(e.projectionMatrix,this.viewVec)},e.prototype.perform=function(){var e=this.parent.renderer.currentScene,t=this.parent.renderer.gl;this.fb.bind(),t.viewport(0,0,this.outLit.width,this.outLit.height),this.parent.renderer.state.flags=3,t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT);var r=this.parent.renderer.uniformJitter;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.inG0.texture),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,this.inG1.texture),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,this.inG2.texture),t.activeTexture(t.TEXTURE3),t.bindTexture(t.TEXTURE_2D,r.texture),t.activeTexture(t.TEXTURE4),t.bindTexture(t.TEXTURE_2D,this.inLinearDepth.texture),t.activeTexture(t.TEXTURE5),t.bindTexture(t.TEXTURE_2D,this.inSSAO.texture);for(var n=0,i=this.ambientProgram;n<i.length;n++){var o=i[n];o&&(o.program.use(),t.uniform1i(o.uniforms.u_g0,0),t.uniform1i(o.uniforms.u_g1,1),t.uniform1i(o.uniforms.u_g2,2),t.uniform1i(o.uniforms.u_dither,3),t.uniform1i(o.uniforms.u_linearDepth,4),t.uniform1i(o.uniforms.u_ssao,5),t.uniform1i(o.uniforms.u_reflection,6),t.uniform2f(o.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),t.uniform2f(o.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),t.uniform2f(o.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y),t.uniform2f(o.uniforms.u_ditherScale,this.outLit.width/r.size/4,this.outLit.height/r.size/4))}this.probes.length=0,this.renderTree(e),this.probes.sort(function(e,t){return e.priority-t.priority}),this.parent.renderer.state.flags=139,t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA);for(var a=0,s=this.probes;a<s.length;a++){var o=s[a];this.renderProbe(o,!0)}if(this.useHdrMosaic){this.parent.renderer.state.flags=123,t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA);var u=this.parent.renderer.ext.get("EXT_blend_minmax");u&&t.blendEquation(u.MAX_EXT);for(var l=0,f=this.probes;l<f.length;l++){var o=f[l];this.renderProbe(o,!1)}u&&t.blendEquation(t.FUNC_ADD)}},e.prototype.renderTree=function(e){e instanceof a.ReflectionProbe&&this.probes.push(e);for(var t=0,r=e.children;t<r.length;t++){var n=r[t];this.renderTree(n)}},e.prototype.computeReflectionLodBias=function(e){return e.log2Size-20},e.prototype.renderProbe=function(e,t){var r=this.parent.renderer.gl,n=!isFinite(e.distance),i=this.parent.renderer.reflectionTextures.get(e.texture),o=0;t&&(o|=1);var a=this.tmpMat;if(a.getInverse(e.matrixWorld),a.multiply(this.invViewMat),n){var s=this.ambientProgram[o];s.program.use(),r.uniformMatrix4fv(s.uniforms.u_reflectionMatrix,!1,a.elements),r.uniform1f(s.uniforms.u_reflectionLodBias,this.computeReflectionLodBias(i)),r.uniform1f(s.uniforms.u_reflectionSize,1<<i.log2Size),r.activeTexture(r.TEXTURE6),i.bind();var u=this.parent.renderer.quadRenderer;r.depthFunc(r.GREATER),u.render(s.attributes.a_position),r.depthFunc(r.LESS)}},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}(),c=function(){function e(e,t,r,i,o,a,s,u,f,h,c){this.parent=e,this.inG0=t,this.inG1=r,this.inG2=i,this.inReflections=o,this.inColor=a,this.inLinearDepth=s,this.inLit=u,this.out=f,this.useHdrMosaic=h,this.fb=l.GLFramebuffer.createFramebuffer(e.renderer.gl,{depth:null,colors:[f.texture]}),this.tmpMat=new n.Matrix4,this.viewMat=null,this.viewVec=null;var p=e.renderer.shaderManager.get("VS_SSR","FS_SSR",["a_position"],{useHdrMosaic:h,colorIsLogRGB:c});this.program={program:p,uniforms:p.getUniforms(["u_linearDepth","u_g0","u_g1","u_g2","u_color","u_reflections","u_viewDirCoefX","u_viewDirCoefY","u_viewDirOffset","u_projectionMatrix","u_stride","u_jitter","u_jitterCoordScale"]),attributes:p.getAttributes(["a_position"])}}return e.prototype.beforeRender=function(){this.viewMat=this.parent.renderer.currentCamera.matrixWorldInverse,this.viewVec=s.computeViewVectorCoefFromProjectionMatrix(this.parent.renderer.currentCamera.projectionMatrix,this.viewVec)},e.prototype.perform=function(){this.fb.bind();var e=this.parent.renderer.gl;e.viewport(0,0,this.out.width,this.out.height),this.parent.renderer.state.flags=2,this.inLit!==this.out&&(this.parent.renderer.invalidateFramebuffer(),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inLit.texture),this.parent.renderer.passthroughRenderer.render()),this.parent.renderer.state.flags=10,e.blendFunc(e.ONE,e.ONE),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.inG0.texture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inG1.texture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.inG2.texture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.inColor.texture),e.activeTexture(e.TEXTURE5),e.bindTexture(e.TEXTURE_2D,this.inReflections.texture),e.activeTexture(e.TEXTURE6),e.bindTexture(e.TEXTURE_2D,this.parent.renderer.uniformDitherJitter.texture);var t=this.program;t.program.use(),e.uniform1i(t.uniforms.u_g0,0),e.uniform1i(t.uniforms.u_g1,1),e.uniform1i(t.uniforms.u_g2,2),e.uniform1i(t.uniforms.u_linearDepth,3),e.uniform1i(t.uniforms.u_color,4),e.uniform1i(t.uniforms.u_reflections,5),e.uniform1i(t.uniforms.u_jitter,6),e.uniform2f(t.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),e.uniform2f(t.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),e.uniform2f(t.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y),e.uniform1f(t.uniforms.u_stride,Math.ceil(this.inLinearDepth.height/20)),e.uniform2f(t.uniforms.u_jitterCoordScale,this.inLinearDepth.width/this.parent.renderer.uniformDitherJitter.size*(this.useHdrMosaic?.5:1),this.inLinearDepth.height/this.parent.renderer.uniformDitherJitter.size*(this.useHdrMosaic?.5:1));var r=u.Matrix4Pool.alloc(),n=u.Matrix4Pool.alloc();r.makeTranslation(1,1,1).multiply(this.parent.renderer.currentCamera.projectionMatrix),n.makeScale(this.inLinearDepth.width/2,this.inLinearDepth.height/2,.5).multiply(r),e.uniformMatrix4fv(t.uniforms.u_projectionMatrix,!1,n.elements),u.Matrix4Pool.free(r),u.Matrix4Pool.free(n);var i=this.parent.renderer.quadRenderer;i.render(t.attributes.a_position)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}();r.SSRRenderer=c},{"../core/GLFramebuffer":2,"../core/RenderBuffers":8,"../core/TypedRenderBuffers":14,"../public/ReflectionProbe":29,"../utils/Geometry":49,"../utils/ObjectPool":54}],40:[function(e,t,r){"use strict";function n(e,t){var r=t+20-e,n=Math.max(Math.min(r/17.1,1),0);return n*n*(n*n)}function i(e,t,r){var i=e.shaderManager.get("VS_PrefilterCubemap","FS_PrefilterCubemap",["a_position"],{seamless:!0}),o=i.getUniforms(["u_axisMajor","u_axisU","u_axisV","u_texture","u_textureLod","u_roughness","u_textureSize","u_sampleRange","u_borderCoord","u_axisIsMinor","u_jitter","u_jitterScale"]),s=i.getAttributes(["a_position"]),u=e.gl,f=Math.min(a.ulog2(r),8),h=u.createTexture();u.bindTexture(u.TEXTURE_2D,h),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texImage2D(u.TEXTURE_2D,0,u.RGBA,4<<f,2<<f,0,u.RGBA,u.UNSIGNED_BYTE,null);var c=u.createFramebuffer();u.bindFramebuffer(u.FRAMEBUFFER,c),u.framebufferTexture2D(u.FRAMEBUFFER,u.COLOR_ATTACHMENT0,u.TEXTURE_2D,h,0),e.state.flags=0,i.use(),u.activeTexture(u.TEXTURE0),u.bindTexture(u.TEXTURE_CUBE_MAP,t),u.uniform1i(o.u_texture,0),u.uniform1f(o.u_textureSize,r);var p=e.uniformJitter;u.activeTexture(u.TEXTURE1),u.bindTexture(u.TEXTURE_2D,p.texture),u.uniform1i(o.u_jitter,1);for(var d=0;d<=f;++d){var m=1<<f-d;u.uniform1f(o.u_borderCoord,1-1/Math.max(2,m)),u.uniform1f(o.u_sampleRange,Math.min(16/m,.7)),u.uniform1f(o.u_textureLod,d+2),u.uniform1f(o.u_roughness,n(f,d)),u.uniform1f(o.u_jitterScale,.5*m/p.size);for(var g=0,v=l;g<v.length;g++){var _=v[g];u.viewport(_.x*m,_.y*m,m,m),u.uniform3i(o.u_axisIsMinor,0==_.dir.x?1:0,0==_.dir.y?1:0,0==_.dir.z?1:0),u.uniform3f(o.u_axisMajor,_.dir.x,_.dir.y,_.dir.z),u.uniform3f(o.u_axisU,_.u.x,_.u.y,_.u.z),u.uniform3f(o.u_axisV,_.v.x,_.v.y,_.v.z),e.quadRenderer.render(s.a_position)}}var x=new ArrayBuffer(32<<2*f),T=new Uint8Array(x),b=new Uint32Array(x);u.readPixels(0,0,4<<f,2<<f,u.RGBA,u.UNSIGNED_BYTE,T),u.bindFramebuffer(u.FRAMEBUFFER,null),u.deleteFramebuffer(c),u.deleteTexture(h);for(var y=[],w=4<<f,d=0;d<=f;++d)for(var m=1<<f-d,R=0,E=l;R<E.length;R++){var _=E[R],M=new ArrayBuffer(m*m*4),D=new Uint32Array(M),S=_.x*m+_.y*m*w;d==f&&(S=2);for(var C=0,B=0;B<m;++B){for(var P=0;P<m;++P)D[C++]=b[S++];S+=w-m}y.push(new Uint8Array(M))}return y}var o=window.THREE,a=e("../utils/Utils"),s=function(){function e(e){this.core=e}return e.prototype.create=function(e,t){if(t instanceof o.CubeTexture)return new u(e,this.core,t);throw new Error("Should be CubeTexture")},e}();r.ReflectionTextureCubeProvider=s;var u=function(){function e(e,t,r){this.manager=e,this.core=t,this.textureCube=t.textureCubes.get(r),this.setupDone=!1,this.textureHandle=e.gl.createTexture(),this.log2Size=0}return e.prototype.setup=function(){if(this.setupDone)return!0;if(!this.textureCube.setup())return!1;var e=i(this.core,this.textureCube.textureHandle,this.textureCube.size),t=this.manager.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this.textureHandle),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,t.LINEAR_MIPMAP_NEAREST),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_NEAREST),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);var r=e.length/6;this.log2Size=r-1;for(var n=0;n<r;++n)for(var o=1<<r-n-1,a=0;a<6;++a)t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+a,n,t.RGBA,o,o,0,t.RGBA,t.UNSIGNED_BYTE,e[a+6*n]);
return this.setupDone=!0,!0},e.prototype.dispose=function(){this.manager.gl.deleteTexture(this.textureHandle),this.textureHandle=null},e.prototype.bind=function(){var e=this.manager.gl;!this.setup(),e.bindTexture(e.TEXTURE_CUBE_MAP,this.textureHandle)},e}();r.ReflectionTextureCube=u;var l=[{x:0,y:1,dir:new o.Vector3(1,0,0),u:new o.Vector3(0,0,(-1)),v:new o.Vector3(0,(-1),0)},{x:1,y:1,dir:new o.Vector3((-1),0,0),u:new o.Vector3(0,0,1),v:new o.Vector3(0,(-1),0)},{x:2,y:1,dir:new o.Vector3(0,1,0),u:new o.Vector3(1,0,0),v:new o.Vector3(0,0,1)},{x:3,y:1,dir:new o.Vector3(0,(-1),0),u:new o.Vector3(1,0,0),v:new o.Vector3(0,0,(-1))},{x:2,y:0,dir:new o.Vector3(0,0,1),u:new o.Vector3(1,0,0),v:new o.Vector3(0,(-1),0)},{x:3,y:0,dir:new o.Vector3(0,0,(-1)),u:new o.Vector3((-1),0,0),v:new o.Vector3(0,(-1),0)}]},{"../utils/Utils":57}],41:[function(e,t,r){"use strict";var n=window.THREE,i=e("../utils/PoissonDiskSampler"),o=function(){function e(e){this.core=e,this.lastJitX=this.lastJitY=0,this.screenVelOffX=this.screenVelOffY=0,this.jitGen=new i.CenteredNoise,this.jitteredProjectiveMatrix=new n.Matrix4}return e.prototype.beforeRender=function(){var e=this.jitteredProjectiveMatrix;e.copy(this.core.currentCamera.projectionMatrix);for(var t=1.5*(this.core.useWiderTemporalAA?2:1),r=this.jitGen.sample(),n=r.x/this.core.renderWidth*t,i=r.y/this.core.renderHeight*t,o=0;o<4;++o)e.elements[o<<2]+=e.elements[(o<<2)+3]*n,e.elements[(o<<2)+1]+=e.elements[(o<<2)+3]*i;this.screenVelOffX=this.lastJitX-n,this.screenVelOffY=this.lastJitY-i,this.lastJitX=n,this.lastJitY=i},e.prototype.dispose=function(){},e}();r.RenderingController=o},{"../utils/PoissonDiskSampler":56}],42:[function(e,t,r){"use strict";var n=window.THREE,i=e("../core/GLFramebuffer"),o=e("../utils/Geometry"),a=e("../utils/ObjectPool"),s=function(){function e(e,t,r,n,o){this.core=e,this.input=t,this.inLinearDepth=r,this.out=n,this.dir=o,this.fb=i.GLFramebuffer.createFramebuffer(e.gl,{depth:null,colors:[n.texture]}),this.light=null,this.program=[];for(var a=0;a<2;++a){var s=e.shaderManager.get("VS_ScreenSpaceSoftShadow","FS_ScreenSpaceSoftShadow",["a_position"],{isPositionalLight:0!=(1&a),direction:1==o?1:0,numSamples:8});this.program.push({program:s,uniforms:s.getUniforms(["u_input","u_linearDepth","u_maxBlur","u_viewDirOffset","u_viewDirCoefX","u_viewDirCoefY","u_covSScale","u_lightU","u_lightV","u_lightDir","u_jitter","u_jitterScale"]),attributes:s.getAttributes(["a_position"])})}this.viewVec=null}return e.prototype.beforeRender=function(){this.viewVec=o.computeViewVectorCoefFromProjectionMatrix(this.core.currentCamera.projectionMatrix,this.viewVec)},e.prototype.perform=function(){this.fb.bind();var e=this.core.gl;e.viewport(0,0,this.out.width,this.out.height),this.core.invalidateFramebuffer(e.COLOR_ATTACHMENT0),this.core.state.flags=2;var t=this.core.uniformJitter;e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.inLinearDepth.texture),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.input.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,t.texture);var r=this.light,i=0;r instanceof n.DirectionalLight||(i|=1);var o=this.program[i];o.program.use(),e.uniform1i(o.uniforms.u_input,0),e.uniform1i(o.uniforms.u_linearDepth,1),e.uniform1i(o.uniforms.u_jitter,2),e.uniform2f(o.uniforms.u_viewDirOffset,this.viewVec.offset.x,this.viewVec.offset.y),e.uniform2f(o.uniforms.u_viewDirCoefX,this.viewVec.coefX.x,this.viewVec.coefX.y),e.uniform2f(o.uniforms.u_viewDirCoefY,this.viewVec.coefY.x,this.viewVec.coefY.y);var s=1/this.viewVec.coefX.x,u=1/this.viewVec.coefY.y;if(e.uniform3f(o.uniforms.u_covSScale,s*s,u*u,-s*u),e.uniform2f(o.uniforms.u_jitterScale,this.out.width/t.size,this.out.height/t.size),r instanceof n.DirectionalLight){var l=a.Vector4Pool.alloc();l.set(r.position.x,r.position.y,r.position.z,0),l.applyMatrix4(this.core.currentCamera.matrixWorldInverse),l.normalize();var f=a.Vector3Pool.alloc(),h=a.Vector3Pool.alloc();f.set(l.x,l.y,l.z),e.uniform3f(o.uniforms.u_lightDir,f.x,f.y,f.z),Math.abs(f.z)>.5?h.set(1,0,0):h.set(0,0,1),f.cross(h),f.normalize(),e.uniform3f(o.uniforms.u_lightU,f.x,f.y,f.z),h.set(l.x,l.y,l.z),f.cross(h),e.uniform3f(o.uniforms.u_lightV,f.x,f.y,f.z),a.Vector3Pool.free(f),a.Vector3Pool.free(h),a.Vector4Pool.free(l)}e.uniform1f(o.uniforms.u_maxBlur,.05*.05);var c=this.core.quadRenderer;c.render(o.attributes.a_position),e.activeTexture(e.TEXTURE0),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},e.prototype.afterRender=function(){},e.prototype.dispose=function(){this.fb.dispose()},e}();r.ScreenSpaceSoftShadowRendererInstance=s},{"../core/GLFramebuffer":2,"../utils/Geometry":49,"../utils/ObjectPool":54}],43:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=window.THREE,o=e("../core/RenderPipeline"),a=e("./BaseGeometryPassRenderer"),s=e("../core/GLFramebuffer"),u=function(){function e(e){this.renderer=e,this.gpMaterials=new h(e),this.gpCubeMaterials=new p(e);var t=e.gl;this.normalShadowMapSize=2048,this.cubeShadowMapSize=512;var r=e.ext.get("WEBGL_depth_texture");if(!r)throw new Error("Depth texture not supported");this.depthShadowMapTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,this.depthShadowMapTexture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,t.DEPTH_STENCIL,this.normalShadowMapSize,this.normalShadowMapSize,0,t.DEPTH_STENCIL,r.UNSIGNED_INT_24_8_WEBGL,null),this.colorShadowMapTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,this.colorShadowMapTexture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.normalShadowMapSize,this.normalShadowMapSize,0,t.RGBA,t.UNSIGNED_BYTE,null),this.normalShadowMapFramebuffer=s.GLFramebuffer.createFramebuffer(t,{depth:this.depthShadowMapTexture,colors:[this.colorShadowMapTexture]}),this.cubeShadowMapTexture=t.createTexture(),t.bindTexture(t.TEXTURE_CUBE_MAP,this.cubeShadowMapTexture),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);for(var n=0;n<6;++n)t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,t.RGBA,this.cubeShadowMapSize,this.cubeShadowMapSize,0,t.RGBA,t.UNSIGNED_BYTE,null);this.cubeShadowMapDepthRB=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,this.cubeShadowMapDepthRB),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,this.cubeShadowMapSize,this.cubeShadowMapSize),this.cubeShadowMapFramebuffer=[];for(var n=0;n<6;++n)this.cubeShadowMapFramebuffer.push(s.GLFramebuffer.createFramebuffer(t,{depth:this.cubeShadowMapDepthRB,colors:[this.cubeShadowMapTexture]},t.TEXTURE_CUBE_MAP_POSITIVE_X+n))}return e.prototype.dispose=function(){this.gpMaterials.dispose();var e=this.renderer.gl;e.deleteTexture(this.depthShadowMapTexture),this.normalShadowMapFramebuffer.dispose(),e.deleteTexture(this.cubeShadowMapTexture),e.deleteRenderbuffer(this.cubeShadowMapDepthRB);for(var t=0,r=this.cubeShadowMapFramebuffer;t<r.length;t++){var n=r[t];n.dispose()}},e.prototype.setupShadowPass=function(e){var t=this,r={shadowMaps:new l};return e.push({inputs:{},outputs:{shadowMaps:r.shadowMaps},bindings:[],optionalOutputs:["shadowMaps"],name:"Geometry Pass",factory:function(e){return new m(t,e.outputs.shadowMaps)}}),r},e}();r.ShadowMapRenderer=u,function(e){e[e.Normal=0]="Normal"}(r.ShadowMapType||(r.ShadowMapType={}));var l=(r.ShadowMapType,function(e){function t(){e.call(this,"Shadow Maps"),this.hash=931810,this.cost=0}return n(t,e),t.prototype.canMergeWith=function(e){return e instanceof t&&this==e},t.prototype.create=function(e){return new f},Object.defineProperty(t.prototype,"physicalFormatDescription",{get:function(){return"Service"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"logicalFormatDescription",{get:function(){return"Shadow Maps Provider"},enumerable:!0,configurable:!0}),t}(o.RenderBufferInfo));r.ShadowMapRenderBufferInfo=l;var f=function(){function e(){this.service=null}return e.prototype.dispose=function(){},e}(),h=function(e){function t(t){e.call(this,t,"VS_ShadowMapGeometry","FS_ShadowMapGeometry")}return n(t,e),t.prototype.createShader=function(e,t){return new c(this,e,t)},t}(a.BaseGeometryPassMaterialManager),c=function(e){function t(t,r,n){e.call(this,t,r,n),this.manager=t,this.source=r,this.geoUniforms=this.glProgram.getUniforms(["u_halfRenderSize"])}return n(t,e),t}(a.BaseGeometryPassShader),p=function(e){function t(t){e.call(this,t,"VS_CubeShadowMapGeometry","FS_CubeShadowMapGeometry")}return n(t,e),t.prototype.createShader=function(e,t){return new d(this,e,t)},t}(a.BaseGeometryPassMaterialManager),d=function(e){function t(t,r,n){e.call(this,t,r,n),this.manager=t,this.source=r,this.geoUniforms=this.glProgram.getUniforms(["u_viewPositionScale","u_halfRenderSize"])}return n(t,e),t}(a.BaseGeometryPassShader),m=function(){function e(e,t){this.parent=e,this.outShadowMap=t,this.normalRenderer=new g(e),this.cubeRenderer=new v(e),this.outShadowMap.service=this}return e.prototype.beforeRender=function(){},e.prototype.perform=function(){},e.prototype.afterRender=function(){},Object.defineProperty(e.prototype,"currentShadowMapDepth",{get:function(){return this.parent.depthShadowMapTexture},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shadowMapWidth",{get:function(){return this.parent.normalShadowMapSize},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shadowMapHeight",{get:function(){return this.parent.normalShadowMapSize},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentCubeShadowDistanceMap",{get:function(){return this.parent.cubeShadowMapTexture},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cubeShadowDistanceMapSize",{get:function(){return this.parent.cubeShadowMapSize},enumerable:!0,configurable:!0}),e.prototype.prepareShadowMap=function(e,t){},e.prototype.renderShadowMap=function(e,t){var r=this.parent.renderer.profiler;if(e instanceof i.Camera)r.begin("Normal Shadow Maps"),this.normalRenderer.render(e),r.end();else{if(!(e instanceof i.CubeCamera))throw new Error("unknown camera type");r.begin("Cube Shadow Maps"),this.cubeRenderer.render(e),r.end()}},e.prototype.dispose=function(){a.BaseGeometryPassRenderer.prototype.dispose.call(this)},e}(),g=function(e){function t(t){e.call(this,t.renderer,t.gpMaterials,!1),this.parent=t}return n(t,e),t.prototype.skipsMesh=function(e){return!e.castShadow},t.prototype.skipsPoints=function(e){return!e.castShadow},t.prototype.render=function(e){var t=this.parent.renderer.gl;this.parent.normalShadowMapFramebuffer.bind(),t.viewport(0,0,this.parent.normalShadowMapSize,this.parent.normalShadowMapSize),this.parent.renderer.state.flags=1,t.clear(t.DEPTH_BUFFER_BIT|t.COLOR_BUFFER_BIT),this.parent.renderer.state.flags=241,t.polygonOffset(2,2),t.enable(t.POLYGON_OFFSET_FILL),this.renderGeometry(e.matrixWorldInverse,e.projectionMatrix),t.disable(t.POLYGON_OFFSET_FILL)},t.prototype.setupAdditionalUniforms=function(e,t){var r=t,n=this.parent.renderer.gl;n.uniform2f(r.geoUniforms.u_halfRenderSize,this.parent.normalShadowMapSize>>1,this.parent.normalShadowMapSize>>1)},t.prototype.dispose=function(){a.BaseGeometryPassRenderer.prototype.dispose.call(this)},t}(a.BaseGeometryPassRenderer),v=function(e){function t(t){e.call(this,t.renderer,t.gpCubeMaterials,!1),this.parent=t,this.invFar=0}return n(t,e),t.prototype.skipsMesh=function(e){return!e.castShadow},t.prototype.skipsPoints=function(e){return!e.castShadow},t.prototype.render=function(e){var t=this.parent.renderer.profiler;t.begin("Setup");var r=this.parent.renderer.gl;r.viewport(0,0,this.parent.cubeShadowMapSize,this.parent.cubeShadowMapSize),this.parent.renderer.state.flags=513,r.clearColor(1,1,1,1),t.end();for(var n=0;n<6;++n){this.parent.cubeShadowMapFramebuffer[n].bind();var o=e.children[n];if(!(o instanceof i.PerspectiveCamera))throw new Error("child of CubeCamera wasn't camera");t.begin("Face"),r.clear(r.DEPTH_BUFFER_BIT|r.COLOR_BUFFER_BIT),o.matrixWorldInverse.getInverse(o.matrixWorld),this.invFar=1/o.far,this.renderGeometry(o.matrixWorldInverse,o.projectionMatrix),t.end()}},t.prototype.setupAdditionalUniforms=function(e,t){var r=t,n=this.parent.renderer.gl;n.uniform1f(r.geoUniforms.u_viewPositionScale,this.invFar),n.uniform2f(r.geoUniforms.u_halfRenderSize,this.parent.cubeShadowMapSize>>1,this.parent.cubeShadowMapSize>>1)},t.prototype.dispose=function(){a.BaseGeometryPassRenderer.prototype.dispose.call(this)},t}(a.BaseGeometryPassRenderer)},{"../core/GLFramebuffer":2,"../core/RenderPipeline":9,"./BaseGeometryPassRenderer":32}],44:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=e("../utils/Utils"),o=e("../utils/Pack"),a=function(){function e(e,t,r,n){switch(this.core=e,this.program=t,this.needsLastPosition=r,this.mode=n,this.uniforms=t.getUniforms(["u_skinTexture","u_lastSkinTexture","u_skinTexSize","u_skinInvTexSize","u_skinInvTexSize2","u_skinBindMatrix","u_skinInvBindMatrix"]),this.numTextureStagesNeeded=0,this.textureStageIndex=-1,n){case 2:case 3:this.numTextureStagesNeeded++,r&&this.numTextureStagesNeeded++}}return e.prototype.createInstance=function(e){return new s(this.core,this.uniforms,e,this.needsLastPosition,this.mode,this)},e}();r.SkinningShader=a;var s=function(){function e(e,t,r,n,i,o){this.core=e,this.uniforms=t,this.mesh=r,this.needsLastPosition=n,this.mode=i,this.parent=o,this.texture=null,this.lastTexture=null;var a=r.skeleton.bones.length;switch(this.lastTexture=null,i){case 2:this.texture=new l(e,a),n&&(this.lastTexture=new l(e,a));break;case 3:this.texture=new f(e,a),n&&(this.lastTexture=new f(e,a))}this.firstTime=!0}return e.prototype.update=function(){var e=this.core.gl,t=this.parent;if(e.uniformMatrix4fv(this.uniforms.u_skinBindMatrix,!1,this.mesh.bindMatrix.elements),e.uniformMatrix4fv(this.uniforms.u_skinInvBindMatrix,!1,this.mesh.bindMatrixInverse.elements),e.activeTexture(e.TEXTURE0+t.textureStageIndex),this.texture.update(this.mesh),e.bindTexture(e.TEXTURE_2D,this.texture.texture),e.uniform1i(this.uniforms.u_skinTexture,t.textureStageIndex),this.needsLastPosition?(e.activeTexture(e.TEXTURE0+t.textureStageIndex+1),e.bindTexture(e.TEXTURE_2D,this.lastTexture.texture),e.uniform1i(this.uniforms.u_lastSkinTexture,t.textureStageIndex+1)):e.uniform1i(this.uniforms.u_lastSkinTexture,t.textureStageIndex),e.uniform2f(this.uniforms.u_skinTexSize,this.texture.texCols,this.texture.texRows),e.uniform2f(this.uniforms.u_skinInvTexSize,1/this.texture.texCols,1/this.texture.texRows),e.uniform4f(this.uniforms.u_skinInvTexSize2,1/this.texture.texWidth,1/this.texture.texHeight,.5/this.texture.texWidth,.5/this.texture.texHeight),this.needsLastPosition){var r=this.lastTexture;this.lastTexture=this.texture,this.texture=r}},e}();r.SkinningShaderInstance=s;var u=function(){function e(e,t){if(this.core=e,0==t)this.texCols=1,this.texRows=1;else{var r=i.ulog2(t-1),n=r>>1;this.texCols=1<<n,this.texRows=1<<r-n}this.texture=null}return e.prototype.dispose=function(){},e.prototype.update=function(e){throw new Error("not implemented")},e}(),l=function(e){function t(t,r){e.call(this,t,r),this.texWidth=4*this.texCols,this.texHeight=4*this.texRows,this.buffer=new Uint8Array(this.texWidth*this.texHeight*4);var n=t.gl;this.texture=n.createTexture(),n.bindTexture(n.TEXTURE_2D,this.texture),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,this.texWidth,this.texHeight,0,n.RGBA,n.UNSIGNED_BYTE,null)}return n(t,e),t.prototype.dispose=function(){var e=this.core.gl;e.deleteTexture(this.texture),u.prototype.dispose.call(this)},t.prototype.update=function(e){if(e.skeleton){for(var t=e.skeleton.boneMatrices,r=0,n=0,i=this.texWidth,a=this.buffer,s=0;s<t.length;s+=16){for(var u=n+(r<<2),l=0;l<4;++l){for(var f=0;f<4;++f)o.pack32FToU8(a,u+(f<<2),t[s+l+(f<<2)]);u+=i<<2}r+=4,r==i&&(r=0,n+=i<<4)}var h=this.core.gl;h.bindTexture(h.TEXTURE_2D,this.texture),h.texSubImage2D(h.TEXTURE_2D,0,0,0,this.texWidth,this.texHeight,h.RGBA,h.UNSIGNED_BYTE,a)}},t}(u),f=function(e){function t(t,r){e.call(this,t,r),this.texWidth=2*this.texCols,this.texHeight=2*this.texRows,this.buffer=new Float32Array(this.texWidth*this.texHeight*4);var n=t.gl;this.texture=n.createTexture(),n.bindTexture(n.TEXTURE_2D,this.texture),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,this.texWidth,this.texHeight,0,n.RGBA,n.FLOAT,null)}return n(t,e),t.prototype.dispose=function(){var e=this.core.gl;e.deleteTexture(this.texture),u.prototype.dispose.call(this)},t.prototype.update=function(e){if(e.skeleton){for(var t=e.skeleton.boneMatrices,r=0,n=0,i=this.texWidth,o=this.buffer,a=0;a<t.length;a+=16){for(var s=n+(r<<2),u=a,l=0;l<2;++l)o[s]=t[u],o[s+1]=t[u+1],o[s+2]=t[u+2],o[s+3]=t[u+3],o[s+4]=t[u+4],o[s+5]=t[u+5],o[s+6]=t[u+6],o[s+7]=t[u+7],s+=i<<2,u+=8;r+=2,r==i&&(r=0,n+=i<<3)}var f=this.core.gl;f.bindTexture(f.TEXTURE_2D,this.texture),f.texSubImage2D(f.TEXTURE_2D,0,0,0,this.texWidth,this.texHeight,f.RGBA,f.FLOAT,o)}},t}(u)},{"../utils/Pack":55,"../utils/Utils":57}],45:[function(e,t,r){"use strict";var n=window.THREE,i=e("../utils/IdWeakMap"),o=function(){function e(e,t){this.core=e,this.provider=t,this.gl=e.gl,this.map=new i.IdWeakMapWithDisposable}return e.prototype.dispose=function(){this.map.dispose()},e.prototype.get=function(e){if(null==e)return null;var t=this.map.get(e);return null==t&&(t=this.provider.create(this,e),this.map.set(e,t)),t},e.prototype.flush=function(e){this.map.remove(e)},e.prototype.internalFormatForTexture=function(e){switch(e.format){case n.RGBAFormat:return this.gl.RGBA;default:throw new Error("unsupported format: "+e.format)}},e.prototype.formatForTexture=function(e){switch(e.format){case n.RGBAFormat:return this.gl.RGBA;default:throw new Error("unsupported format: "+e.format)}},e.prototype.typeForTexture=function(e){switch(e.type){case n.UnsignedByteType:return this.gl.UNSIGNED_BYTE;default:throw new Error("unsupported type: "+e.type)}},e}();r.TextureManager=o},{"../utils/IdWeakMap":50}],46:[function(e,t,r){"use strict";function n(e,t,r){var n=document.createElement("canvas");n.width=t,n.height=r;var i=n.getContext("2d");return i.drawImage(e,0,0,t,r),n}var i=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},o=window.THREE,a=function(){function e(){}return e.prototype.create=function(e,t){if(t instanceof o.CubeTexture)throw new Error("Shouldn't be CubeTexture");return new l(e,t)},e}();r.Texture2DProvider=a;var s=function(){function e(){}return e.prototype.create=function(e,t){if(t instanceof o.CubeTexture)return new f(e,t);throw new Error("Should be CubeTexture")},e}();r.TextureCubeProvider=s;var u=function(){function e(e,t,r){this.manager=e,this.source=t,this.textureTarget=r,this.textureHandle=e.gl.createTexture()}return e.prototype.setupCommon=function(){var e=this.manager.gl;e.texParameteri(this.textureTarget,e.TEXTURE_MAG_FILTER,e.LINEAR_MIPMAP_LINEAR),e.texParameteri(this.textureTarget,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR)},e.prototype.dispose=function(){this.manager.gl.deleteTexture(this.textureHandle),this.textureHandle=null},e.prototype.bind=function(){throw new Error("not implemented")},e}();r.Texture=u;var l=function(e){function t(t,r){e.call(this,t,r,t.gl.TEXTURE_2D),this.setupDone=!1}return i(t,e),t.prototype.setup=function(){if(this.setupDone)return!0;var e=this.source.image;if(null==e||0==e.width)return!1;this.setupDone=!0;var t=this.manager.gl;t.bindTexture(this.textureTarget,this.textureHandle),this.setupCommon(),t.texParameteri(this.textureTarget,t.TEXTURE_WRAP_S,t.REPEAT),t.texParameteri(this.textureTarget,t.TEXTURE_WRAP_T,t.REPEAT);var r=t.getParameter(t.MAX_TEXTURE_SIZE);return(e.width>r||e.height>r)&&(e=n(e,r,r)),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.source.flipY?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.source.premultiplyAlpha?1:0),t.pixelStorei(t.UNPACK_ALIGNMENT,this.source.unpackAlignment),t.texImage2D(this.textureTarget,0,this.manager.internalFormatForTexture(this.source),this.manager.formatForTexture(this.source),this.manager.typeForTexture(this.source),e),this.source.generateMipmaps&&t.generateMipmap(this.textureTarget),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,0),t.pixelStorei(t.UNPACK_ALIGNMENT,4),!0},t.prototype.bind=function(){var e=this.manager.gl;!this.setup(),e.bindTexture(this.textureTarget,this.textureHandle)},t}(u);r.Texture2D=l;var f=function(e){function t(t,r){e.call(this,t,r,t.gl.TEXTURE_CUBE_MAP),this.setupDone=!1,this.size=0}return i(t,e),t.prototype.setup=function(){if(this.setupDone)return!0;for(var e=this.source.image,t=0;t<6;++t){var r=e[t];if(null==r||0==r.width)return!1}this.setupDone=!0;var i=this.manager.gl;i.bindTexture(this.textureTarget,this.textureHandle),this.setupCommon(),i.texParameteri(this.textureTarget,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(this.textureTarget,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);var o=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE);if(e[0].width>o||e[0].height>o)for(var t=0;t<6;++t)e[t]=n(e[t],o,o);for(var t=0;t<6;++t){var r=e[t];i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,this.manager.internalFormatForTexture(this.source),this.manager.formatForTexture(this.source),this.manager.typeForTexture(this.source),r)}return this.size=e[0].width,this.source.generateMipmaps&&i.generateMipmap(this.textureTarget),!0},t.prototype.bind=function(){var e=this.manager.gl;!this.setup(),e.bindTexture(this.textureTarget,this.textureHandle)},t}(u);r.TextureCube=f},{}],47:[function(e,t,r){"use strict";r.shaderChunks={FS_Constant:{requires:[],parameters:[],attributes:[],source:"uniform mediump vec4 u_constantColor;\nvoid main()\n{\n    gl_FragColor = u_constantColor;\n}"},FS_Passthrough:{requires:[],parameters:[],attributes:[],source:"uniform sampler2D u_texture;\nvarying highp vec2 v_texCoord;\nvoid main()\n{\n    gl_FragColor = texture2D(u_texture, v_texCoord);\n}\n"},FS_PassthroughModulated:{requires:[],parameters:[],attributes:[],source:"uniform sampler2D u_texture;\nvarying highp vec2 v_texCoord;\nuniform vec4 u_modulation;\nvoid main()\n{\n    gl_FragColor = texture2D(u_texture, v_texCoord) * u_modulation;\n}\n"},VS_Passthrough:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nuniform vec4 u_uvScale;\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * u_uvScale.xy + u_uvScale.zw;\n}\n"},FS_BaseIBL:{requires:["GBuffer","ShadingModel","HdrMosaic","DepthFetch","TextureLod"],parameters:["isBlendPass","useHdrMosaic"],attributes:[],source:"// this shader is abstract; must be imported and function implementations must be provided\n\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_g2;\nuniform sampler2D u_linearDepth;\nuniform sampler2D u_ssao;\n\nvarying highp vec2 v_texCoord;\nvarying mediump vec2 v_viewDir;\n\nuniform samplerCube u_reflection;\nuniform float u_reflectionSize;\n\nuniform mat4 u_reflectionMatrix;\nuniform float u_reflectionLodBias;\n\nuniform sampler2D u_dither;\nvarying highp vec2 v_ditherCoord;\n\n// to be provided by derived shader\nfloat evaluateWeight(vec3 viewPos);\n\nvoid emitIBLOutput(vec3 lit, float weight)\n{\n    // dither\n    vec3 dither = texture2D(u_dither, v_ditherCoord).xyz;\n\n#if c_useHdrMosaic\n    vec4 mosaicked = encodeHdrMosaicDithered(lit, dither);\n    gl_FragColor = mosaicked;\n\n#if c_isBlendPass\n    gl_FragColor.w = weight;\n#endif // c_isBlendPass\n#else // c_useHdrMosaic\n    if (lit != lit) lit *= 0.; // reject denormals\n    gl_FragColor = vec4(lit, weight);\n#endif // c_useHdrMosaic\n}\n\nvoid main()\n{\n    vec4 g0 = texture2D(u_g0, v_texCoord);\n    vec4 g1 = texture2D(u_g1, v_texCoord);\n    vec4 g2 = texture2D(u_g2, v_texCoord);\n    vec4 g3 = vec4(0.);\n\n    if (isGBufferEmpty(g0, g1, g2, g3)) {\n        discard;\n        return;\n    }\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    MaterialInfo mat = getMaterialInfoFromGBuffer(g);\n\n    highp vec3 viewDir = vec3(v_viewDir, 1.);\n    highp float depth = fetchDepth(u_linearDepth, v_texCoord);\n    highp vec3 viewPos = viewDir * depth;\n\n    float weight = evaluateWeight(viewPos);\n\n    vec3 reflVector = reflect(-(viewDir), g.normal);\n    reflVector = (u_reflectionMatrix * vec4(reflVector, 0.)).xyz;\n\n    float ssao = texture2D(u_ssao, v_texCoord).r;\n    ssao *= ssao;\n    ssao = mix(1., ssao, min(mat.roughness * 4., 1.));\n\n    // sampling from image\n    float lod = u_reflectionLodBias + 17.1 * sqrt(sqrt(mat.roughness));\n    vec3 refl = myTextureCubeLodSeamless(u_reflection, reflVector, lod, u_reflectionSize).xyz;\n    refl.xyz *= refl.xyz; // linearize\n\n    refl *= evaluateReflection(clamp(dot(g.normal, normalize(viewDir)), 0., 1.), mat).xyz;\n\n    if (isMaterialClearCoat(mat)) {\n        // second specular lobe\n        float lodcc = u_reflectionLodBias + 17.1 * sqrt(sqrt(mat.clearCoatRoughness));\n        vec3 reflcc = myTextureCubeLodSeamless(u_reflection, reflVector, lodcc, u_reflectionSize).xyz;\n        reflcc.xyz *= reflcc.xyz; // linearize\n\n        vec2 reflFactorCC = evaluateReflectionForClearCoat(clamp(dot(g.normal, normalize(viewDir)), 0., 1.), mat);\n        reflcc *= reflFactorCC.x;\n\n        refl *= 1. - reflFactorCC.y;\n        refl += reflcc;\n    }\n\n    // apply SSAO\n    refl *= ssao;\n\n    // lighting model\n\n    emitIBLOutput(refl.xyz, weight);\n}\n\n"},FS_DeferredAmbientIBL:{requires:["FS_BaseIBL"],parameters:[],attributes:[],source:"\n\nfloat evaluateWeight(vec3 viewPos)\n{\n    return 1.;\n}\n"},VS_DeferredAmbientIBL:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\n\nuniform vec2 u_ditherScale;\nvarying vec2 v_ditherCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 1., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n\n    v_ditherCoord.xy = u_ditherScale * a_position;\n}\n"},FS_GBufferDemosaic:{requires:["Globals","DepthFetch"],parameters:["gBufferIndex","globalSupportsSRGB","globalUseFullResolutionGBuffer"],attributes:[],source:"/** G-Buffer index.\n * 0 : G0, 1 : G1, 2 : G2, 3 : G3, 4 : Depth */\n\nuniform sampler2D u_mosaic;\nuniform highp sampler2D u_depth;\nvarying highp vec4 v_texCoords;\nvarying highp vec2 v_texCoord;\n\nuniform highp vec4 u_depthLinearizeCoef;\n\n// FIXME: better method\nhighp float wrapCoord(highp float coord)\n{\n    return fract(coord);\n}\nhighp vec2 wrapCoord2(highp vec2 coord)\n{\n    return fract(coord);\n}\n\nvoid main()\n{\n    highp float targetDepth = texture2D(u_depth, v_texCoord.xy).x;\n\n#if c_gBufferIndex == 4\n    // depth\n    targetDepth = targetDepth * 2. - 1.;\n    highp float a = dot(u_depthLinearizeCoef.xy, vec2(targetDepth, 1.));\n    highp float b = dot(u_depthLinearizeCoef.zw, vec2(targetDepth, 1.));\n\n    gl_FragColor = encodeGDepth(a / b);\n#else // c_gBufferIndex == 4\n\n    // see G-Buffer Demosaicing.ai\n\n#if c_globalUseFullResolutionGBuffer\n\n#if c_gBufferIndex == 0\n#define NumComparands 1\n    highp vec2 coord1 = v_texCoords.xy;\n#elif c_gBufferIndex == 1\n#define NumComparands 2\n    highp vec2 coord1 = v_texCoords.xy;\n    highp vec2 coord2 = v_texCoords.zw;\n    coord1.x = wrapCoord(coord1.x);\n    coord2.x = wrapCoord(coord2.x);\n#elif c_gBufferIndex == 2\n#define NumComparands 2\n    highp vec2 coord1 = v_texCoords.xy;\n    highp vec2 coord2 = v_texCoords.zw;\n    coord1.y = wrapCoord(coord1.y);\n    coord2.y = wrapCoord(coord2.y);\n#elif c_gBufferIndex == 3\n#define NumComparands 4\n    highp vec2 coord1 = v_texCoords.xy;\n    highp vec2 coord2 = v_texCoords.zy;\n    highp vec2 coord3 = v_texCoords.xw;\n    highp vec2 coord4 = v_texCoords.zw;\n    coord1 = wrapCoord2(coord1);\n    coord2 = wrapCoord2(coord2);\n    coord3 = wrapCoord2(coord3);\n    coord4 = wrapCoord2(coord4);\n#endif // c_gBufferIndex\n\n#else // c_globalUseFullResolutionGBuffer\n#define NumComparands 4\n    highp vec2 coord = gl_FragCoord.xy * .5 - 0.25;\n#if c_gBufferIndex == 1\n    coord.x -= 0.5;\n#elif c_gBufferIndex == 2\n    coord.y -= 0.5;\n#elif c_gBufferIndex == 3\n    coord.xy -= 0.5;\n#endif // c_gBufferIndex\n    highp vec2 err = fract(coord);\n    coord = floor(coord) + 0.25;\n#if c_gBufferIndex == 1\n    coord.x += .5;\n#elif c_gBufferIndex == 2\n    coord.y += .5;\n#elif c_gBufferIndex == 3\n    coord.xy += .5;\n#endif // c_gBufferIndex\n\n    coord *= u_globalDoubleInvRenderSize;\n    err *= u_globalQuadInvRenderSize;\n\n    highp vec4 coords = vec4(coord, coord + err);\n\n    coords = fract(coords);\n\n    highp vec2 coord1 = coords.xy;\n    highp vec2 coord2 = coords.zy;\n    highp vec2 coord3 = coords.xw;\n    highp vec2 coord4 = coords.zw;\n#endif // c_globalUseFullResolutionGBuffer\n\n    vec4 retValue = texture2D(u_mosaic, coord1);\n#if NumComparands > 1\n    highp float retDepth = abs(texture2D(u_depth, coord1).x - targetDepth);\n#endif // NumComparands > 1\n\n#if NumComparands >= 2\n    vec4 value2 = texture2D(u_mosaic, coord2);\n    highp float depth2 = abs(texture2D(u_depth, coord2).x - targetDepth);\n    if (depth2 < retDepth) {\n        retValue = value2;\n        retDepth = depth2;\n    }\n#endif\n\n#if NumComparands >= 3\n    vec4 value3 = texture2D(u_mosaic, coord3);\n    highp float depth3 = abs(texture2D(u_depth, coord3).x - targetDepth);\n    if (depth3 < retDepth) {\n        retValue = value3;\n        retDepth = depth3;\n    }\n#endif\n\n#if NumComparands >= 4\n    vec4 value4 = texture2D(u_mosaic, coord4);\n    highp float depth4 = abs(texture2D(u_depth, coord4).x - targetDepth);\n    if (depth4 < retDepth) {\n        retValue = value4;\n        retDepth = depth4;\n    }\n#endif\n    gl_FragColor = retValue;\n#endif // c_gBufferIndex == 4\n\n    // G0 contains color values. We should linearize them now\n    // if possible.\n#if (c_gBufferIndex == 0) && c_globalSupportsSRGB\n    // final G0 is sRGB buffer; we can rely on hardware\n    // from this point\n    // (if not, we should linearize them in every shader that reads them)\n    gl_FragColor.xyz *= gl_FragColor.xyz;\n#endif\n}\n"},FS_HdrDemosaic:{requires:["Globals","HdrMosaic","LogRGB"],parameters:[],attributes:[],source:"\nuniform sampler2D u_mosaic;\nvarying highp vec2 v_texCoord1;\nvarying highp vec2 v_texCoord2;\nvarying highp vec2 v_texCoord3;\n\nvoid main()\n{\n    vec4 mosaic1 = texture2D(u_mosaic, v_texCoord1.xy);\n    vec4 mosaic2 = texture2D(u_mosaic, vec2(v_texCoord1.x, v_texCoord2.y));\n    vec4 mosaic3 = texture2D(u_mosaic, vec2(v_texCoord1.x, v_texCoord3.y));\n    vec4 mosaic4 = texture2D(u_mosaic, vec2(v_texCoord2.x, v_texCoord1.y));\n    vec4 mosaic5 = texture2D(u_mosaic, vec2(v_texCoord3.x, v_texCoord1.y));\n    vec3 mosaicAvg = (mosaic2 + mosaic3 + mosaic4 + mosaic5).xyz * 0.25;\n\n    float overflowLevel;\n    {\n        float t1 = max(mosaic1.w, mosaic2.w);\n        float t2 = max(mosaic3.w, mosaic4.w);\n        float t3 = max(t1, mosaic5.w);\n        overflowLevel = max(t2, t3);\n    }\n    overflowLevel = max(overflowLevel * 10. - 9., 0.);\n\n    float currentPixelMode = hdrMosaicMode(gl_FragCoord.xy);\n    float mixamt = mix(1. - overflowLevel, overflowLevel, currentPixelMode);\n\n    float pat1 = hdrMosaicInvPatternForMode(currentPixelMode);\n    float pat2 = hdrMosaicInvPatternForMode(1. - currentPixelMode);\n\n    mosaic1.xyz *= pat1;\n    mosaicAvg.xyz *= pat2;\n\n    // gl_FragColor.xyz = vec3(overflowLevel); return;\n\n    vec3 demosaicedRGB = mix(mosaic1.xyz, mosaicAvg, mixamt);\n\n    gl_FragColor = encodeLogRGB(demosaicedRGB);\n}\n"
},VS_GBufferDemosaic:{requires:["Globals"],parameters:["gBufferIndex","globalUseFullResolutionGBuffer"],attributes:[],source:"\nattribute vec2 a_position;\nvarying vec4 v_texCoords; // FIXME: remove dependent texture fetch\nvarying vec2 v_texCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n\n    vec2 normCoord = a_position * 0.5 + 0.5;\n\n    v_texCoord = normCoord;\n\n    // see G-Buffer Demosaicing.ai\n#if c_globalUseFullResolutionGBuffer\n    v_texCoord = normCoord - u_globalQuarterInvRenderSize;\n    v_texCoords = v_texCoord.xyxy;\n#if c_gBufferIndex == 1\n    v_texCoords.x += u_globalHalfInvRenderSize.x;\n    v_texCoords.z -= u_globalHalfInvRenderSize.x;\n#elif c_gBufferIndex == 2\n    v_texCoords.y += u_globalHalfInvRenderSize.y;\n    v_texCoords.w -= u_globalHalfInvRenderSize.y;\n#elif c_gBufferIndex == 3\n    v_texCoords.xy += u_globalHalfInvRenderSize;\n    v_texCoords.zw -= u_globalHalfInvRenderSize;\n#endif // c_gBufferIndex\n#else // c_globalUseFullResolutionGBuffer\n// FIXME: these are used because of precision problem\n    v_texCoords = vec4(normCoord, normCoord * u_globalHalfRenderSize - 0.25);\n#if c_gBufferIndex == 1\n    v_texCoords.z += 0.5;\n#elif c_gBufferIndex == 2\n    v_texCoords.w += 0.5;\n#elif c_gBufferIndex == 3\n    v_texCoords.zw += 0.5;\n#endif // c_gBufferIndex\n#endif // c_globalUseFullResolutionGBuffer\n}\n"},VS_HdrDemosaic:{requires:["Globals"],parameters:[],attributes:[],source:"\nattribute vec2 a_position;\nvarying vec2 v_texCoord1;\nvarying vec2 v_texCoord2;\nvarying vec2 v_texCoord3;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n\n    vec2 normCoord = a_position * 0.5 + 0.5;\n\n    v_texCoord1 = normCoord;\n    v_texCoord2 = normCoord - u_globalInvRenderSize;\n    v_texCoord3 = normCoord + u_globalInvRenderSize;\n}\n"},FS_BaseGeometry:{requires:[],parameters:[],attributes:[],source:"// this shader is abstract; must be imported and main function must be provided\n\nvec3 m_albedo;\nfloat m_roughness;\nfloat m_metallic;\nfloat m_specular;\nvec3 m_normal;\nvec3 m_emissive;\nfloat m_materialId;\nfloat m_materialParam;\n\nvarying highp vec3 v_worldPosition;\n\nvec2 v_pointCoord;\n\nvoid evaluateFragmentShader();\n\nvoid evaluateMaterial()\n{\n    m_albedo = vec3(1.);\n    m_roughness = 0.2;\n    m_metallic = 0.2;\n    m_specular = 0.03;\n    m_normal = vec3(0., 0., 1.);\n    m_emissive = vec3(0.);\n    m_materialId = 0.;\n    m_materialParam = 0.;\n\n    v_pointCoord = gl_PointCoord;\n\n    evaluateFragmentShader();\n}\n"},FS_CubeShadowMapGeometry:{requires:["FS_BaseGeometry","Pack"],parameters:[],attributes:[],source:"\nvarying highp vec3 v_viewPosition;\n\nvoid main()\n{\n    evaluateMaterial(); // might discard the fragment\n\n    highp float dist = min(length(v_viewPosition), 1.);\n    gl_FragColor = vec4(pack24(dist), 1.);\n}\n"},FS_Geometry:{requires:["GBuffer","FS_BaseGeometry"],parameters:["useNormalMap"],attributes:[],source:"\n// prevent distorted reflection due to (probably) insufficient normal precision\n// FIXME: this is too much\n// --- precision highp ---\n\nvarying vec3 v_viewNormal;\n#if c_useNormalMap\nvarying vec3 v_viewTangent;\nvarying vec3 v_viewBitangent;\n#endif\n\nvarying highp vec4 v_screenPosition;\nvarying highp vec3 v_lastScreenPosition;\n\nGBufferContents evaluateGeometry()\n{\n    evaluateMaterial();\n\n    vec3 preshaded = m_emissive;\n#if c_useNormalMap\n    vec3 normal = v_viewNormal * m_normal.z;\n    normal += v_viewTangent * m_normal.x;\n    normal += v_viewBitangent * m_normal.y;\n#else\n    vec3 normal = v_viewNormal;\n#endif\n    normal = normalize(normal);\n\n    highp vec2 screenPos = v_screenPosition.xy / v_screenPosition.z;\n    highp vec2 lastScreenPos = v_lastScreenPosition.xy / v_lastScreenPosition.z;\n    vec2 screenVel = screenPos - lastScreenPos;\n\n    GBufferContents g;\n    g.albedo = m_albedo;\n    g.normal = normal;\n    g.velocity = screenVel;\n    g.roughness = m_roughness;\n    g.metallic = m_metallic;\n    g.specular = m_specular;\n    g.preshaded = preshaded;\n    g.materialId = m_materialId;\n    g.materialParam = m_materialParam;\n\n    return g;\n}\n"},FS_GeometryMRT:{requires:["FS_Geometry","DepthFetch"],parameters:["globalSupportsSRGB"],attributes:[],source:"#extension GL_EXT_draw_buffers : require\n\nvoid main()\n{\n    GBufferContents g = evaluateGeometry();\n    vec4 g0, g1, g2, g3;\n\n    encodeGBuffer(g0, g1, g2, g3, g);\n\n#if !c_globalSupportsSRGB\n    g0.xyz = sqrt(g0.xyz);\n#endif\n\n    gl_FragData[0] = g0;\n    gl_FragData[1] = g1;\n    gl_FragData[2] = g2;\n    gl_FragData[3] = g3;\n\n    if (gl_MaxDrawBuffers >= 5) {\n        // When 5 or more buffers are supported, \n        // lineer depth value can be written.\n        gl_FragData[4] = encodeGDepth(v_screenPosition.w); // contains depth value\n    }\n}"},FS_GeometryNoMRT:{requires:["FS_Geometry","GBufferMosaic"],parameters:[],attributes:[],source:"\nvoid main()\n{\n    GBufferContents g = evaluateGeometry();\n    vec4 g0, g1, g2, g3;\n\n    encodeGBuffer(g0, g1, g2, g3, g);\n\n    // mosaiced G-Buffer is not sRGB buffer, so\n    // we have to convert color to gamma space to\n    // prevent the loss of precision\n    g0.xyz = sqrt(g0.xyz);\n\n    gl_FragColor = encodeGBufferMosaic(g0, g1, g2, g3);\n}"},FS_ShadowMapGeometry:{requires:["FS_BaseGeometry"],parameters:[],attributes:[],source:"\nvoid main()\n{\n    evaluateMaterial(); // might discard the fragment\n}\n"},VS_BaseGeometry:{requires:["Pack","Globals","VS_BaseSkinning","PointSize"],parameters:["skinningMode","usePointSize"],attributes:["position","normal","tangent","skinWeights","skinIndices"],source:"// this shader is abstract; must be imported and main function must be provided\n\n\n\nattribute vec4 a_skinWeights;\nattribute vec4 a_skinIndices;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_viewProjectionMatrix;\nuniform mat4 u_viewMatrix;\n\nuniform mat4 u_modelMatrix;\nuniform mat4 u_lastModelMatrix;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec3 a_tangent;\n\nvec3 worldPosition;\nvec3 worldNormal;\nvec3 worldTangent;\n\nvec3 lastWorldPosition;\n\nvarying highp vec3 v_worldPosition;\n\nfloat m_pointSize;\n\nvoid computeExtraValues();\nvoid evaluateVertexShader();\n\n#if c_skinningMode != SkinningModeNone\n\nvoid doSkinningOne(inout mat4 mat, inout mat4 lastMat, float index, float weight)\n{\n    if (weight == 0.) {\n        return;\n    }\n\n    BoneMatrix m = getBoneMatrix(index);\n\n    mat += m.current * weight;\n    lastMat += m.last * weight;\n}\n\n#endif\n\nvoid evaluateGeometry()\n{\n    vec3 position = a_position;\n    vec3 lastPosition = a_position;\n    vec3 normal = a_normal;\n    vec3 tangent = a_tangent;\n\n#if c_skinningMode != SkinningModeNone\n\n    mat4 skinMat = mat4(0.);\n    mat4 skinLastMat = mat4(0.);\n\n    doSkinningOne(skinMat, skinLastMat, a_skinIndices.x, a_skinWeights.x);\n    doSkinningOne(skinMat, skinLastMat, a_skinIndices.y, a_skinWeights.y);\n    doSkinningOne(skinMat, skinLastMat, a_skinIndices.z, a_skinWeights.z);\n    doSkinningOne(skinMat, skinLastMat, a_skinIndices.w, a_skinWeights.w);\n\n    skinMat = u_skinInvBindMatrix * skinMat * u_skinBindMatrix;\n    skinLastMat = u_skinInvBindMatrix * skinLastMat * u_skinBindMatrix;\n\n    position = (skinMat * vec4(position, 1.)).xyz;\n    lastPosition = (skinLastMat * vec4(lastPosition, 1.)).xyz;\n    normal = (skinMat * vec4(normal, 0.)).xyz;\n    tangent = (skinMat * vec4(tangent, 0.)).xyz;\n\n#endif\n\n    worldPosition = (u_modelMatrix * vec4(position, 1.)).xyz;\n    worldNormal = (u_modelMatrix * vec4(normal, 0.)).xyz;\n    worldTangent = (u_modelMatrix * vec4(tangent, 0.)).xyz;\n\n    lastWorldPosition = (u_lastModelMatrix * vec4(lastPosition, 1.)).xyz;\n\n    computeExtraValues();\n\n    m_pointSize = 1.;\n    evaluateVertexShader();\n\n    v_worldPosition = worldPosition;\n}\n"},VS_BaseSkinning:{requires:[],parameters:["skinningMode"],attributes:[],source:'// this shader is abstract; must be imported and main function must be provided\n\n#define SkinningModeNone 0\n#define SkinningModeUniform 1\n#define SkinningModeTexture 2\n#define SkinningModeFloatTexture 3\n\n// #pragma parameter numBones\n\n#if c_skinningMode != SkinningModeNone\n\nstruct BoneMatrix\n{\n    mat4 current, last;\n};\n\nuniform mat4 u_skinBindMatrix;\nuniform mat4 u_skinInvBindMatrix;\n\n#if c_skinningMode == SkinningModeUniform\n\nuniform mat4 u_bones[c_numBones];\nuniform mat4 u_lastBones[c_numBones];\nBoneMatrix getBoneMatrix(float index)\n{\n    int intIndex = int(index);\n    return BoneMatrix(u_bones[intIndex], u_lastBones[intIndex]);\n}\n\n#elif c_skinningMode == SkinningModeTexture\n\nuniform sampler2D u_skinTexture;\nuniform sampler2D u_lastSkinTexture;\nuniform vec2 u_skinTexSize;        // "bone" indexing\nuniform vec2 u_skinInvTexSize;\nuniform vec4 u_skinInvTexSize2; // matrix element indexing [ 1/w, 1/h, 0.5/w, 0.5/h ]\nBoneMatrix getBoneMatrix(float index)\n{\n    float row = floor(index / u_skinTexSize.x);\n    float col = index - row * u_skinTexSize.x;\n    vec2 boneCoord = vec2(col, row) * u_skinInvTexSize + u_skinInvTexSize2.zw;\n    vec4 elemCoord1 = vec4(boneCoord, boneCoord + u_skinInvTexSize2.xy);\n    vec4 elemCoord2;\n    elemCoord2.xy = elemCoord1.zw + u_skinInvTexSize2.xy;\n    elemCoord2.zw = elemCoord2.xy + u_skinInvTexSize2.xy;\n\n    // left half\n    vec4 coordTL = elemCoord1;\n    vec4 coordBL = vec4(elemCoord1.x, elemCoord2.y, elemCoord1.z, elemCoord2.w);\n    vec4 col1 = vec4(\n        unpack32f(texture2D(u_skinTexture, coordTL.xy)),\n        unpack32f(texture2D(u_skinTexture, coordTL.xw)),\n        unpack32f(texture2D(u_skinTexture, coordBL.xy)),\n        unpack32f(texture2D(u_skinTexture, coordBL.xw))\n    );\n    vec4 col2 = vec4(\n        unpack32f(texture2D(u_skinTexture, coordTL.zy)),\n        unpack32f(texture2D(u_skinTexture, coordTL.zw)),\n        unpack32f(texture2D(u_skinTexture, coordBL.zy)),\n        unpack32f(texture2D(u_skinTexture, coordBL.zw))\n    );\n    vec4 lcol1 = vec4(\n        unpack32f(texture2D(u_lastSkinTexture, coordTL.xy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordTL.xw)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBL.xy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBL.xw))\n    );\n    vec4 lcol2 = vec4(\n        unpack32f(texture2D(u_lastSkinTexture, coordTL.zy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordTL.zw)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBL.zy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBL.zw))\n    );\n\n    // right half\n    vec4 coordTR = vec4(elemCoord2.x, elemCoord1.y, elemCoord2.z, elemCoord1.w);\n    vec4 coordBR = elemCoord2;\n    vec4 col3 = vec4(\n        unpack32f(texture2D(u_skinTexture, coordTR.xy)),\n        unpack32f(texture2D(u_skinTexture, coordTR.xw)),\n        unpack32f(texture2D(u_skinTexture, coordBR.xy)),\n        unpack32f(texture2D(u_skinTexture, coordBR.xw))\n    );\n    vec4 col4 = vec4(\n        unpack32f(texture2D(u_skinTexture, coordTR.zy)),\n        unpack32f(texture2D(u_skinTexture, coordTR.zw)),\n        unpack32f(texture2D(u_skinTexture, coordBR.zy)),\n        unpack32f(texture2D(u_skinTexture, coordBR.zw))\n    );\n    vec4 lcol3 = vec4(\n        unpack32f(texture2D(u_lastSkinTexture, coordTR.xy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordTR.xw)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBR.xy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBR.xw))\n    );\n    vec4 lcol4 = vec4(\n        unpack32f(texture2D(u_lastSkinTexture, coordTR.zy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordTR.zw)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBR.zy)),\n        unpack32f(texture2D(u_lastSkinTexture, coordBR.zw))\n    );\n\n    return BoneMatrix(\n        mat4(col1, col2, col3, col4),\n        mat4(lcol1, lcol2, lcol3, lcol4)\n    );\n}\n\n#elif c_skinningMode == SkinningModeFloatTexture\n\nuniform sampler2D u_skinTexture;\nuniform sampler2D u_lastSkinTexture;\nuniform vec2 u_skinTexSize;        // "bone" indexing\nuniform vec2 u_skinInvTexSize;\nuniform vec4 u_skinInvTexSize2; // matrix column indexing [ 1/w, 1/h, 0.5/w, 0.5/h ]\nBoneMatrix getBoneMatrix(float index)\n{\n    float row = floor(index / u_skinTexSize.x);\n    float col = index - row * u_skinTexSize.x;\n    vec2 boneCoord = vec2(col, row) * u_skinInvTexSize + u_skinInvTexSize2.zw;\n    vec4 colCoord = vec4(boneCoord, boneCoord + u_skinInvTexSize2.xy);\n\n    return BoneMatrix(\n        mat4(\n            texture2D(u_skinTexture, colCoord.xy),\n            texture2D(u_skinTexture, colCoord.zy),\n            texture2D(u_skinTexture, colCoord.xw),\n            texture2D(u_skinTexture, colCoord.zw)\n        ),\n        mat4(\n            texture2D(u_lastSkinTexture, colCoord.xy),\n            texture2D(u_lastSkinTexture, colCoord.zy),\n            texture2D(u_lastSkinTexture, colCoord.xw),\n            texture2D(u_lastSkinTexture, colCoord.zw)\n        )\n    );\n}\n\n#endif // c_skinningMode\n\n#endif // c_skinningMode != SkinningModeNone\n\n'},VS_CubeShadowMapGeometry:{requires:["VS_BaseGeometry"],parameters:["usePointSize"],attributes:[],source:"\nvarying vec3 v_viewPosition;\nuniform float u_viewPositionScale;\n\nuniform vec2 u_halfRenderSize;\n\nvoid main()\n{\n    evaluateGeometry();\n\n    gl_Position = u_viewProjectionMatrix * vec4(worldPosition, 1.);\n\n    v_viewPosition = (u_viewMatrix * vec4(worldPosition, 1.)).xyz * u_viewPositionScale;\n\n#if c_usePointSize\n    gl_PointSize = computeProjectedPointSize(m_pointSize, u_projectionMatrix, gl_Position, u_halfRenderSize);\n#endif\n}\n\n"},VS_Geometry:{requires:["VS_BaseGeometry"],parameters:["useNormalMap","usePointSize"],attributes:[],source:"\nvarying vec3 v_viewNormal;\n#if c_useNormalMap\nvarying vec3 v_viewTangent;\nvarying vec3 v_viewBitangent;\n#endif\n\nvarying vec4 v_screenPosition;\nvarying vec3 v_lastScreenPosition;\n\nuniform mat4 u_lastViewProjectionMatrix;\nuniform vec2 u_screenVelOffset;\n\nvoid main()\n{\n    evaluateGeometry();\n\n    gl_Position = u_viewProjectionMatrix * vec4(worldPosition, 1.);\n\n    v_screenPosition.xyz = gl_Position.xyw;\n    v_lastScreenPosition = (u_lastViewProjectionMatrix * vec4(lastWorldPosition, 1.)).xyw;\n    v_screenPosition.xy += u_screenVelOffset * v_screenPosition.z;\n\n    v_screenPosition.w = -(u_viewMatrix * vec4(worldPosition, 1.)).z; // depth\n\n    v_viewNormal = (u_viewMatrix * vec4(worldNormal, 0.)).xyz;\n#if c_useNormalMap\n    v_viewTangent = (u_viewMatrix * vec4(worldTangent, 0.)).xyz;\n    v_viewBitangent = cross(v_viewNormal, v_viewTangent);\n#endif\n\n#if c_usePointSize\n    gl_PointSize = computeProjectedPointSize(m_pointSize, u_projectionMatrix, gl_Position, u_globalHalfRenderSize);\n\tv_viewNormal = vec3(0., 0., 1.);\n#if c_useNormalMap\n    v_viewTangent = vec3(1., 0., 0.);\n    v_viewBitangent = vec3(0., -1., 0.);\n#endif\n#endif\n}\n"},VS_ShadowMapGeometry:{requires:["VS_BaseGeometry"],parameters:["usePointSize"],attributes:[],source:"\nuniform vec2 u_halfRenderSize;\n\nvoid main()\n{\n    evaluateGeometry();\n\n    gl_Position = u_viewProjectionMatrix * vec4(worldPosition, 1.);\n    gl_Position.z += 0.001 * gl_Position.w; // polygonOffset sometimes doesn't work well?\n\n#if c_usePointSize\n    gl_PointSize = computeProjectedPointSize(m_pointSize, u_projectionMatrix, gl_Position, u_halfRenderSize);\n#endif\n}\n\n"},Complex:{requires:[],parameters:[],attributes:[],source:"\nvec2 complexMultiply(vec2 a, vec2 b)\n{\n    vec3 t = vec3(b, -b.y);\n    return vec2(dot(a.xy, t.xz), dot(a.xy, t.yx));\n}\n\n"},Constants:{requires:[],parameters:[],attributes:[],source:"#define M_PI 3.1415926535897932384626433832795"},DepthFetch:{requires:["Globals","Pack"],parameters:["globalUseFullResolutionGBuffer"],attributes:[],source:"\nvec4 encodeGDepth(highp float depth)\n{\n    return vec4(pack24(depth * u_globalInvDepthFar), 0.);\n}\n\nhighp float decodeGDepth(highp vec4 encoded)\n{\n    return unpack24(encoded.xyz) * u_globalDepthFar;\n}\n\nhighp float fetchDepth(sampler2D texDepth, highp vec2 texCoord)\n{\n    return decodeGDepth(texture2D(texDepth, texCoord));\n}\n"},DepthToNormal:{requires:["DepthFetch"],parameters:[],attributes:[],source:"\n#extension GL_OES_standard_derivatives : require\n\n// screen coord [0, 1] must be provided to texCoord.\nvec3 computeNormalFromDepthUsingStandardDerivatives(sampler2D texDepth, highp vec2 texCoord, highp vec3 viewDir)\n{\n\thighp float depth = fetchDepth(texDepth, texCoord);\n\thighp vec3 viewPos = depth * viewDir;\n\n\tvec3 dx = dFdx(viewPos), dy = dFdy(viewPos);\n\n\treturn normalize(cross(dx, dy));\n}\n"},GBuffer:{requires:["SphereMap","Pack","VelocityMap"],parameters:["globalSupportsSRGB"],attributes:[],source:"\nstruct GBufferContents\n{\n    vec3 albedo;\n    vec3 normal;\n    vec2 velocity;\n    float roughness;\n    float metallic;\n    float specular;\n    float materialId;\n    float materialParam;\n\n    vec3 preshaded;\n};\n\nvec3 decodeGBufferNormal(vec4 g2)\n{\n    return decodeSpheremap(unpack12x2(g2.xyz));\n}\n\nvoid decodeGBuffer(out GBufferContents g, vec4 g0, vec4 g1, vec4 g2, vec4 g3)\n{\n    g.albedo = g0.xyz;\n#if !c_globalSupportsSRGB\n    g.albedo *= g.albedo;\n#endif\n\n    g.normal = decodeGBufferNormal(g2);\n\n    g.velocity = decodeVelocityMap(vec2(g0.w, g1.w));\n\n    g.roughness = g1.x * g1.x;\n    g.metallic = g1.y;\n    g.specular = g1.z;\n\n    float t = g1.y * (255.5 / 16.);\n    g.materialId = floor(t);\n    g.metallic = floor(fract(t) * 16.) * (1. / 15.);\n\n    g.materialParam = g2.w;\n\n    g.preshaded = g3.xyz * exp2(g3.w * 255. - 128.);\n}\n\nvoid encodeGBuffer(out vec4 g0, out vec4 g1, out vec4 g2, out vec4 g3, GBufferContents g)\n{\n    vec2 sphereMap = encodeSpheremap(g.normal);\n    vec2 vel = encodeVelocityMap(g.velocity);\n\n    vec3 preshaded = g.preshaded;\n    float lum = max(max(max(preshaded.x, preshaded.y), preshaded.z), 0.0001);\n    float lumLog = ceil(log2(lum));\n    preshaded *= exp2(-lumLog);\n\n    g0 = vec4(g.albedo, vel.x);\n    g1 = vec4(sqrt(g.roughness),\n        floor(g.metallic * 15.5) * (1. / 255.) + g.materialId * (16. / 255.),\n        g.specular,\n        vel.y);\n    g2 = vec4(pack12x2(sphereMap), g.materialParam);\n    g3 = vec4(preshaded, (lumLog + 128.) * (1. / 255.));\n}\n\nbool isGBufferEmpty(vec4 g0, vec4 g1, vec4 g2, vec4 g3)\n{\n    return g2.x < .001;\n}"},GBufferMosaic:{requires:[],parameters:[],attributes:[],source:"\nvec2 gBufferMosaicPatternNonNormalized(highp vec2 fragCoord) {\n    highp vec2 pos = floor(fragCoord.xy);\n    return fract(pos * 0.5);\n}\n\nvec2 gBufferMosaicPattern(highp vec2 fragCoord) {\n    return gBufferMosaicPatternNonNormalized(fragCoord) * 2.;\n}\n\nvec4 encodeGBufferMosaic(vec4 g0, vec4 g1, vec4 g2, vec4 g3) {\n#if 1\n    // using branch\n    vec2 pattern = gBufferMosaicPatternNonNormalized(gl_FragCoord.xy);\n\n    g0 = pattern.x > .25 ? g1 : g0;\n    g2 = pattern.x > .25 ? g3 : g2;\n\n    return pattern.y > .25 ? g2 : g0;\n#else\n    // branch-less\n    vec2 pattern = gBufferMosaicPattern(gl_FragCoord.xy);\n\n    g0 = mix(g0, g1, pattern.x);\n    g2 = mix(g2, g3, pattern.x);\n\n    return mix(g0, g2, pattern.y);\n#endif\n}\n"},Globals:{requires:[],parameters:[],attributes:[],source:"\nuniform highp vec2 u_globalRenderSize;\nuniform highp vec2 u_globalQuadRenderSize;\nuniform highp vec2 u_globalDoubleRenderSize;\nuniform highp vec2 u_globalHalfRenderSize;\nuniform highp vec2 u_globalInvRenderSize;\nuniform highp vec2 u_globalQuadInvRenderSize;\nuniform highp vec2 u_globalDoubleInvRenderSize;\nuniform highp vec2 u_globalHalfInvRenderSize;\nuniform highp vec2 u_globalQuarterInvRenderSize;\nuniform highp float u_globalDepthFar;\nuniform highp float u_globalInvDepthFar;\n"},HdrMosaic:{requires:[],parameters:["globalSupportsSRGB"],attributes:[],source:"\n#if c_globalSupportsSRGB\nconst float HdrMosaicLevel1 = 1. / 64.;\nconst float HdrMosaicLevel2 = 2.;\n#else\n// when sRGB is unavailable, dynamic range of the buffer is very very low.\nconst float HdrMosaicLevel1 = 1. / 16.;\nconst float HdrMosaicLevel2 = 1.;\n#endif\nconst float HdrMosaicMaximumLevel = 1. / HdrMosaicLevel1;\n\nfloat hdrMosaicMode(highp vec2 fragCoord) {\n    return step(fract(dot(floor(fragCoord.xy), vec2(0.5))), 0.25);\n}\n\nfloat hdrMosaicPatternForMode(float mode) {\n    // FIXME: support non-sRGB mode\n    return mix(HdrMosaicLevel1, HdrMosaicLevel2, mode);\n}\n\nfloat hdrMosaicInvPatternForMode(float mode) {\n    // FIXME: support non-sRGB mode\n    return mix(1. / HdrMosaicLevel1, 1. / HdrMosaicLevel2, mode);\n}\n\nfloat hdrMosaicPattern(highp vec2 fragCoord) {\n    return hdrMosaicPatternForMode(hdrMosaicMode(fragCoord));\n}\n\nvec4 encodeHdrMosaicDithered(vec3 color, vec3 dither) {\n    float lum = max(max(color.x, color.y), color.z);\n    vec3 mosaiced = color.rgb * hdrMosaicPattern(gl_FragCoord.xy);\n#if c_globalSupportsSRGB\n    // buffer is sRGB; error is almost proportional to the value\n    // (gamma is approximated to be 2.5)\n    // stored + error = value^-2.5 (0 <= error <= 1/255)\n    // dvalue/derror = d/derror((stored + error)^2.5)\n    //               = 2.5(stored + error)^1.3\n    //                 \\approx 2.5(value^-2.5)^1.3\n    //               < 2.5value\n    // furthermore, be aware of linear part of sRGB conversion used when input is very dark\n    mosaiced -= dither * ((2.5 / 255.) * mosaiced + 1. / 255. / 12.92) - .5 / 255. / 12.92;\n#else\n    // buffer is linear\n    mosaiced += dither * (1. / 255.) - .5 / 255.;\n#endif\n    return vec4(mosaiced, lum * HdrMosaicLevel2);\n}\n\nvec4 encodeHdrMosaic(vec3 color) {\n    return encodeHdrMosaicDithered(color, vec3(0.5));\n}\n"},HdrToneMapping:{requires:[],parameters:[],attributes:[],source:"\nvec3 encodeReinhard(vec3 hdr)\n{\n\thdr = sqrt(hdr);\n\treturn hdr / (1. + hdr);\n}\n\nvec3 decodeReinhard(vec3 ldr)\n{\n\tldr = ldr / (1.000001 - ldr);\n\treturn ldr * ldr; \n}"},LogRGB:{requires:[],parameters:[],attributes:[],source:'\n// actually not using "log"\n\nvec4 encodeLogRGB(vec3 rgb)\n{\n    float lum = max(max(rgb.r, rgb.g), rgb.b);\n    float logval = min(floor(lum * 4. + 1.), 64.) * (1. / 4.);\n    float invLogval = 1. / logval;\n    return vec4(rgb * invLogval, logval * (1. / 16.));\n}\n\nvec3 decodeLogRGB(vec4 p)\n{\n    float t = floor(p.a * 64. + .5) * (1. / 4.);\n    return p.rgb * t;\n}\n'},Materials:{requires:[],parameters:[],attributes:[],source:"\n#define MaterialIdUnlit         0.\n#define MaterialIdDefault         1.\n#define MaterialIdClearCoat     2.\n"},MatrixDeterminant:{requires:[],parameters:[],attributes:[],source:"float determinantOfMatrix2(mat2 m)\n{\n\treturn m[0][0] * m[1][1] - m[0][1] * m[1][0];\n}\nhighp float determinantOfMatrix2Highp(highp mat2 m)\n{\n\treturn m[0][0] * m[1][1] - m[0][1] * m[1][0];\n}\n\nfloat determinantOfMatrix3(mat3 m)\n{\n\treturn \n\t\tm[0][0] * m[1][1] * m[2][2] + \n\t\tm[1][0] * m[2][1] * m[0][2] +\n\t\tm[2][0] * m[0][1] * m[1][2] -\n\t\tm[2][0] * m[1][1] * m[0][2] -\n\t\tm[1][0] * m[0][1] * m[2][2] -\n\t\tm[0][0] * m[2][1] * m[1][2];\n}\nhighp float determinantOfMatrix3Highp(highp mat3 m)\n{\n\treturn \n\t\tm[0][0] * m[1][1] * m[2][2] + \n\t\tm[1][0] * m[2][1] * m[0][2] +\n\t\tm[2][0] * m[0][1] * m[1][2] -\n\t\tm[2][0] * m[1][1] * m[0][2] -\n\t\tm[1][0] * m[0][1] * m[2][2] -\n\t\tm[0][0] * m[2][1] * m[1][2];\n}\n"},MatrixInverse:{requires:["MatrixDeterminant"],parameters:[],attributes:[],source:"\nmat2 invertMatrix2(mat2 m, float safeMargin)\n{\n\treturn mat2(m[1][1], m[0][1], m[1][0], m[0][0]) /\n\t\t(determinantOfMatrix2(m) + safeMargin);\n}\n\nhighp mat2 invertMatrix2Highp(highp mat2 m, highp float safeMargin)\n{\n\treturn mat2(m[1][1], m[0][1], m[1][0], m[0][0]) /\n\t\t(determinantOfMatrix2Highp(m) + safeMargin);\n}\n\nmat3 invertMatrix3Transposed(mat3 m, float safeMargin)\n{\n\treturn mat3(\n\t\tdeterminantOfMatrix2(mat2(m[1].yz, m[2].yz)),\n\t\tdeterminantOfMatrix2(mat2(m[1].xz, m[2].xz)),\n\t\tdeterminantOfMatrix2(mat2(m[1].xy, m[2].xy)),\n\t\tdeterminantOfMatrix2(mat2(m[0].yz, m[2].yz)),\n\t\tdeterminantOfMatrix2(mat2(m[0].xz, m[2].xz)),\n\t\tdeterminantOfMatrix2(mat2(m[0].xy, m[2].xy)),\n\t\tdeterminantOfMatrix2(mat2(m[0].yz, m[1].yz)),\n\t\tdeterminantOfMatrix2(mat2(m[0].xz, m[1].xz)),\n\t\tdeterminantOfMatrix2(mat2(m[0].xy, m[1].xy))\n\t) / (determinantOfMatrix3(m) + safeMargin);\n}\n\nhighp mat3 invertMatrix3TransposedHighp(highp mat3 m, highp float safeMargin)\n{\n\treturn mat3(\n\t\tdeterminantOfMatrix2Highp(mat2(m[1].yz, m[2].yz)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[1].xz, m[2].xz)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[1].xy, m[2].xy)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[0].yz, m[2].yz)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[0].xz, m[2].xz)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[0].xy, m[2].xy)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[0].yz, m[1].yz)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[0].xz, m[1].xz)),\n\t\tdeterminantOfMatrix2Highp(mat2(m[0].xy, m[1].xy))\n\t) / (determinantOfMatrix3Highp(m) + safeMargin);\n}\n"},MatrixTranspose:{requires:[],parameters:[],attributes:[],source:"\nmat2 transposeMatrix2(mat2 m)\n{\n\treturn mat2(m[0][0], m[1][0], m[0][1], m[1][1]);\n}\nhighp mat2 transposeMatrix2Highp (highp mat2 m)\n{\n\treturn mat2(m[0][0], m[1][0], m[0][1], m[1][1]);\n}\n\nmat3 transposeMatrix3(mat3 m)\n{\n\treturn mat3(\n\t\tm[0][0], m[1][0], m[2][0],\n\t\tm[0][1], m[1][1], m[2][1],\n\t\tm[0][2], m[1][2], m[2][2]);\n}\n\nhighp mat3 transposeMatrix3Highp(highp mat3 m)\n{\n\treturn mat3(\n\t\tm[0][0], m[1][0], m[2][0],\n\t\tm[0][1], m[1][1], m[2][1],\n\t\tm[0][2], m[1][2], m[2][2]);\n}\n"},Pack:{requires:[],parameters:[],attributes:[],source:"vec2 pack16(highp float value) {\n    value *= 255.;\n    highp float flr = floor(value);\n    return vec2(flr * (1. / 255.), value - flr);\n}\n\nhighp float unpack16(vec2 packedValue) {\n    return packedValue.x + packedValue.y * (1. / 255.);\n}\n\nvec3 pack24(highp float value) {\n    value *= 256.;\n    highp float i1 = floor(value);\n    highp float f1 = value - i1;\n    f1 *= 256.;\n    highp float i2 = floor(f1);\n    highp float f2 = f1 - i2;\n    return vec3(i1 * (1. / 255.), i2 * (1. / 255.), f2);\n}\n\nhighp float unpack24(vec3 packedValue) {\n    return dot(packedValue, vec3(1., 1. / 256., 1. / 256. / 256.) * 255. / 256.);\n}\n\nvec4 pack32f(highp float value)\n{\n    highp float absValue = abs(value);\n    if (absValue <= 1.e-16) {\n        // underflow\n        return vec4(0., 0., 0., 0.);\n    } else {\n        highp float exponent = ceil(log2(absValue));\n        absValue *= exp2(-exponent);\n\n        exponent += 63.; // bias\n        if (value < 0.) {\n            exponent += 128.; // sign\n        }\n        exponent *= 1. / 255.;\n\n        return vec4(pack24(absValue), exponent);\n    }\n}\n\nhighp float unpack32f(vec4 p)\n{\n    if (p.w == 0.) {\n        return 0.;\n    } else {\n        bool negative = false;\n        highp float exponent = floor(p.w * 255. + 0.5 - 63.);\n        if (exponent >= 128. - 63.) {\n            // negative\n            negative = true;\n            exponent -= 128.;\n        }\n\n        highp float mantissa = unpack24(p.xyz);\n        if (negative) {\n            mantissa = -mantissa;\n        }\n\n        return mantissa * exp2(exponent);\n    }\n}\n\nvec3 pack12x2(highp vec2 value)\n{\n    value *= 255.;\n    highp vec2 flr = floor(value);\n    highp vec2 frc = floor((value - flr) * 16.);\n    return vec3(flr * (1. / 255.), dot(frc, vec2(1., 16.) / 255.));\n}\nhighp vec2 unpack12x2(vec3 p)\n{\n    float yy = p.z * (255. / 16.);\n    float yi = floor(yy);\n    float yf = fract(yy);\n    return p.xy + vec2(yf, yi) * vec2(1. / 255., 1. / 16. / 255.);\n}"},PointSize:{requires:[],parameters:[],attributes:[],source:"\nfloat computeProjectedPointSize(float viewSpaceSize, mat4 projMat, vec4 clipPos, vec2 halfScreenSize)\n{\n\t// See point-size.ja.md\n\tfloat invW = 1. / clipPos.w;\n\n\t// x_g, y_g, x_d, y_d\n\tvec4 coefs = vec4(halfScreenSize.xy * invW, -clipPos.xy * invW);\n\n\tvec3 row1 = vec3(projMat[0][0], projMat[1][0], projMat[2][0]) * coefs.x\n\t\t+ vec3(projMat[0][3], projMat[1][3], projMat[2][3]) * coefs.z;\n\tvec3 row2 = vec3(projMat[0][1], projMat[1][1], projMat[2][1]) * coefs.y\n\t\t+ vec3(projMat[0][3], projMat[1][3], projMat[2][3]) * coefs.w;\n\tfloat d = dot(row1, row2);\n\tfloat det = dot(row1, row1) * dot(row2, row2) - d * d;\n\treturn sqrt(sqrt(det)) * viewSpaceSize;\n}\n"},ScreenSpaceRaytrace:{requires:["DepthFetch"],parameters:[],attributes:[],source:"\n/*\nbased on http://casual-effects.blogspot.jp/2014/08/screen-space-ray-tracing.html:\n    // By Morgan McGuire and Michael Mara at Williams College 2014\n    // Released as open source under the BSD 2-Clause License\n    // http://opensource.org/licenses/BSD-2-Clause\n*/\n\nbool rayTraceScreenSpace(\n    sampler2D linearDepth,\n    highp vec3 csOrig,\n    highp vec3 csDir,\n    highp mat4 projMat, // shoudl map to pixel coordinate\n    highp vec2 bufferSize,\n    highp vec2 invBufferSize,\n    float stride,\n    float jitter,\n    float maxDistance,\n    out highp vec2 hitPixel,\n    out highp vec3 hitPoint,\n    out float hitSteps\n)\n{\n    // clip ray to the near plane\n    const highp float nearPlaneZ = 0.01;\n    highp float rayLength = (csOrig.z + csDir.z * maxDistance) < nearPlaneZ ?\n        (nearPlaneZ - csOrig.z) / csDir.z : maxDistance;\n    highp vec3 csEnd = csOrig + csDir * rayLength;\n\n    // project into homogeneous clip space\n    highp vec4 h0 = projMat * vec4(csOrig, 1.);\n    highp vec4 h1 = projMat * vec4(csEnd, 1.);\n    highp float k0 = 1. / h0.w, k1 = 1. / h1.w;\n\n    // intepolated homogeneous version of the camera-space points\n    highp vec3 q0 = csOrig * k0;\n    highp vec3 q1 = csEnd * k1;\n\n    // screen-space points\n    highp vec2 p0 = h0.xy * k0;\n    highp vec2 p1 = h1.xy * k1;\n\n    highp vec2 delta = p1 - p0;\n    if (dot(delta, delta) < 0.000001) {\n        return false;\n    }\n\n    // permute xy for vertical line\n    bool permute = false;\n    if (abs(delta.x) < abs(delta.y)) {\n        permute = true;\n        delta = delta.yx;\n        p0 = p0.yx;\n        p1 = p1.yx;\n    }\n\n    highp float stepDir = sign(delta.x);\n    highp float invdx = abs(1. / delta.x);\n\n    // derivatives of Q and k\n    highp vec3 dq = (q1 - q0) * invdx;\n    highp float dk = (k1 - k0) * invdx;\n    highp vec2 dp = vec2(stepDir, delta.y * invdx);\n\n    // scale derivatives\n    dp *= stride; dq *= stride; dk *= stride;\n    p0 += dp * jitter; q0 += dq * jitter; k0 += dk * jitter;\n\n    // slice p from p0 to p1, q from q0 to q1, k from k0 to k1\n    highp vec3 q = q0;\n\n    // end condition\n    highp float end = p1.x * stepDir;\n\n    highp float k = k0, prevZMaxEstimate = csOrig.z;\n    highp float rayZMin = prevZMaxEstimate, rayZMax = prevZMaxEstimate;\n    highp float sceneZMax = rayZMax + 100000.;\n    const highp float zThickness = .1;\n    highp vec2 p = p0;\n    float stepCount = 0.;\n    const int numMaxSteps = 16;\n    for (int i = 0; i < numMaxSteps; ++i) {\n        if (((p.x * stepDir) > end) ||\n            ((rayZMax > sceneZMax) && (rayZMin < sceneZMax + zThickness)) ||\n            sceneZMax == 0.) {\n            break;\n        }\n\n        rayZMin = prevZMaxEstimate;\n        rayZMax = (dq.z * 0.5 + q.z) / (dk * 0.5 + k);\n        prevZMaxEstimate = rayZMax;\n\n        if (rayZMin > rayZMax) {\n            float t = rayZMin; rayZMin = rayZMax; rayZMax = t;\n        }\n\n        hitPixel = permute ? p.yx : p;\n\n        sceneZMax = fetchDepth(linearDepth, hitPixel * invBufferSize);\n\n        p += dp; q.z += dq.z; k += dk; stepCount += 1.;\n    }\n\n    q.xy += dq.xy * stepCount;\n    hitPoint = q * (1. / k);\n\n    hitSteps = (stepCount + jitter) * (1. / float(numMaxSteps + 1));\n\n    return (rayZMax >= sceneZMax) && (rayZMin < sceneZMax + zThickness);\n}\n"},ShadingModel:{requires:["Constants","GBuffer","Materials"],
parameters:[],attributes:[],source:'\nstruct PointLightBRDFParameters\n{\n    float nhDot;\n    float nlDot;\n    float nvDot;\n    float hlDot;\n};\n\nstruct UniformLightBRDFParameters\n{\n    float nvDot;\n};\n\nstruct MaterialInfo\n{\n    vec3 albedo;\n    float roughness;\n    float metallic;\n    float specular;\n\n    float clearCoatRoughness;\n\n    float materialId;\n};\n\nfloat evaluateGGXSpecularDistribution(float nhDot, highp float roughness)\n{\n    // Walter et al. 2007, "Microfacet models for refraction through rough surfaces"\n    // http://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.pdf\n    highp float a = roughness * roughness;\n    highp float aa = a * a;\n    highp float t = nhDot * nhDot * (aa - 1.) + 1.;\n    return aa /\n        (t * t + 1.e-20);\n}\n\nfloat evaluateLambertDiffuse(float nlDot)\n{\n    return 1.;\n}\n\nfloat evaluateDisneyPrincipledDiffuse(float nlDot, float nvDot, float hlDot, float roughness)\n{\n    float fd90m1 = -0.5 + hlDot * hlDot * 2. * roughness;\n    float f1a = 1. - nlDot, f2a = 1. - nvDot;\n    float f1b = f1a * f1a, f2b = f2a * f2a;\n    float f1 = f1a * f1b * f1b, f2 = f2a * f2b * f2b;\n    return (1. + fd90m1 * f1) * (1. + fd90m1 * f2) * nlDot;\n}\n\nfloat evaluateSchlickFresnel(float hlDot)\n{\n    float t = 1. - hlDot;\n    float tt = t * t;\n    return tt * tt * t;\n}\n\n// evaluateXXXGeometryShadowing evaluates G(l, v, h) / (n dot v).\nfloat evaluateBeckmannGeometryShadowing(float nlDot, float nvDot, float roughness)\n{\n    // http://graphicrants.blogspot.jp/2013/08/specular-brdf-reference.html\n    float lct = .5 / (roughness * sqrt(1. - nlDot * nlDot) + 0.00001);\n    float vct = .5 / (roughness * sqrt(1. - nvDot * nvDot) + 0.00001);\n    float lc = lct * nlDot, vc = vct * nvDot;\n    float a = 3.353 * lc + 2.181 * lc * lc; // not typo\n    a *= 3.353 * vct + 2.181 * vct * vc;\n    float b = 1. + 2.276 * lc + 2.577 * lc * lc;\n    b *= 1. + 2.276 * vc + 2.577 * vc * vc;\n    return a / b;\n}\nfloat evaluateBeckmannGeometryShadowingSingleSide(float nlDot, float roughness)\n{\n    // http://graphicrants.blogspot.jp/2013/08/specular-brdf-reference.html\n    float lct = .5 / (roughness * sqrt(1. - nlDot * nlDot) + 0.00001);\n    float lc = lct * nlDot;\n    float a = 3.353 * lc + 2.181 * lc * lc; // not typo\n    float b = 1. + 2.276 * lc + 2.577 * lc * lc;\n    return a / b;\n}\n\nbool isMaterialClearCoat(MaterialInfo material)\n{\n    return material.materialId == MaterialIdClearCoat;\n}\n\nvec3 evaluatePointLight(\n    PointLightBRDFParameters params,\n    MaterialInfo material,\n    vec3 lightColor)\n{\n    if (material.materialId == MaterialIdUnlit) {\n        return vec3(0.);\n    }\n    if (params.nlDot <= 0.) {\n        return vec3(0.);\n    }\n\n    float fresnel = evaluateSchlickFresnel(params.hlDot);\n\n    vec3 minRefl = mix(vec3(material.specular), material.albedo, material.metallic);\n    vec3 refl = mix(minRefl, vec3(1.), fresnel);\n\n    float diffuseMix = 1. - mix(mix(material.specular, 1., material.metallic), 1., fresnel);\n    diffuseMix *= evaluateDisneyPrincipledDiffuse(params.nlDot, params.nvDot, params.hlDot, material.roughness);\n\n    float specular = evaluateGGXSpecularDistribution(params.nhDot, material.roughness);\n    specular *= evaluateBeckmannGeometryShadowing(params.nlDot, params.nvDot, material.roughness);\n\n    diffuseMix *= params.nlDot; specular *= params.nlDot;\n\n    vec3 diffuse = material.albedo;\n\n    vec3 final = diffuse * diffuseMix + refl * specular;\n\n    // clear coat\n    if (isMaterialClearCoat(material)) {\n        float ccspecular = evaluateGGXSpecularDistribution(params.nhDot, material.clearCoatRoughness);\n        ccspecular *= evaluateBeckmannGeometryShadowing(params.nlDot, params.nvDot, material.clearCoatRoughness);\n        ccspecular *= params.nlDot;\n        float refl = mix(0.03, 1., fresnel);\n        final = mix(final, vec3(ccspecular), refl);\n    }\n\n    return final * lightColor;\n}\n\nvec3 evaluateUniformLight(\n    UniformLightBRDFParameters params,\n    MaterialInfo material,\n    vec3 lightColor)\n{\n    if (material.materialId == MaterialIdUnlit) {\n        return vec3(0.);\n    }\n\n    // FIXME: verify this model\n    float fresnel = evaluateSchlickFresnel(params.nvDot);\n\n    vec3 minRefl = mix(vec3(material.specular), material.albedo, material.metallic);\n    vec3 refl = mix(minRefl, vec3(1.), fresnel);\n\n    float diffuseMix = 1. - mix(mix(material.specular, 1., material.metallic), 1., fresnel);\n\n    vec3 diffuse = material.albedo;\n\n    vec3 final = diffuse * diffuseMix;\n    return final * lightColor;\n}\n\nvec4 evaluateReflection(\n    float nvDot,\n    MaterialInfo material)\n{\n    if (material.materialId == MaterialIdUnlit) {\n        return vec4(0.);\n    }\n\n    // assume h = n now\n    float fresnel = evaluateSchlickFresnel(nvDot);\n\n    vec3 minRefl = mix(vec3(material.specular), material.albedo, material.metallic);\n    vec4 refl = vec4(mix(minRefl, vec3(1.), fresnel), 1.);\n\n    refl *= evaluateBeckmannGeometryShadowingSingleSide(nvDot, material.roughness);\n\n    return refl;\n}\n\nvec2 evaluateReflectionForClearCoat(\n    float nvDot,\n    MaterialInfo material)\n{\n    if (!isMaterialClearCoat(material)) {\n        return vec2(0.);\n    }\n\n    // assume h = n now\n    float fresnel = evaluateSchlickFresnel(nvDot);\n\n    float refl = mix(0.03, 1., fresnel);\n\n    float reflShadowed = refl * \n        evaluateBeckmannGeometryShadowing(nvDot, nvDot, material.clearCoatRoughness); // FIXME: optimize?\n\n    return vec2(reflShadowed, refl);\n}\n\nPointLightBRDFParameters computePointLightBRDFParameters(\n    vec3 normal, vec3 light, vec3 view)\n{\n    vec3 halfVec = normalize(light + view);\n    return PointLightBRDFParameters(\n        clamp(dot(normal, halfVec), 0., 1.),\n        clamp(dot(normal, light), 0., 1.),\n        clamp(dot(normal, view), 0., 1.),\n        clamp(dot(halfVec, light), 0., 1.));\n}\n\nUniformLightBRDFParameters computeUniformLightBRDFParameters(\n    vec3 normal, vec3 view)\n{\n    UniformLightBRDFParameters ret;\n    ret.nvDot = clamp(dot(normal, view), 0., 1.);\n    return ret;\n}\n\nMaterialInfo getMaterialInfoFromGBuffer(GBufferContents g)\n{\n    return MaterialInfo(\n        g.albedo,\n        mix(0.001, 1., g.roughness),\n        g.metallic,\n        g.specular,\n\n        mix(0.001, 1., g.materialParam), // clearCoatRoughness\n\n        g.materialId);\n}\n\n'},ShadowTexture:{requires:[],parameters:[],attributes:[],source:"float shadowTexture2D(highp sampler2D tex, highp vec3 coord)\n{\n    highp float value = texture2D(tex, coord.xy).r;\n    return step(coord.z, value);\n}\n"},SphereMap:{requires:[],parameters:[],attributes:[],source:"highp vec2 encodeSpheremap(highp vec3 normal) {\n    highp vec2 e = normal.xy * inversesqrt(8. + normal.z * 8.);\n    return e + 0.5;\n}\n\nhighp vec3 decodeSpheremap(highp vec2 encoded) {\n    highp vec4 nn = vec4(encoded * 2. - 1., 1., -1.);\n    highp float l = dot(nn.xyz, -nn.xyw);\n    nn.z = l; nn.xy *= sqrt(l);\n    return nn.xyz * 2. + vec3(0., 0., -1.);\n}\n"},TextureLod:{requires:[],parameters:[],attributes:[],source:"#extension GL_EXT_shader_texture_lod : enable\n#extension GL_OES_standard_derivatives : require\n\n#ifdef GL_EXT_shader_texture_lod\nvec4 myTextureCubeLod(samplerCube tex, highp vec3 coord, float lod, float texSize)\n{\n\treturn textureCubeLodEXT(tex, coord, lod);\n}\nvec4 myTextureCubeLodSeamless(samplerCube tex, highp vec3 coord, float lod, float texSize)\n{\n\thighp vec3 coordAbs = abs(coord);\n\thighp float majorValue = max(max(coordAbs.x, coordAbs.y), coordAbs.z);\n\tbvec3 isMajor = equal(coordAbs, vec3(majorValue));\n\n\tfloat logTexSize = log2(texSize); lod = min(lod, logTexSize - 2.);\n\tfloat lodFloor = floor(lod);\n\tfloat actualTexSizeInv1 = exp2(lodFloor - log2(texSize));\n\tfloat actualTexSizeInv2 = actualTexSizeInv1 * 2.;\n\thighp vec3 modifiedCoord1 = coord * (1. - actualTexSizeInv1);\n\thighp vec3 modifiedCoord2 = coord * (1. - actualTexSizeInv2);\n\n\thighp vec3 coord1, coord2;\n\tcoord1.x = isMajor.x ? coord.x : modifiedCoord1.x;\n\tcoord1.y = isMajor.y ? coord.y : modifiedCoord1.y;\n\tcoord1.z = isMajor.z ? coord.z : modifiedCoord1.z;\n\tcoord2.x = isMajor.x ? coord.x : modifiedCoord2.x;\n\tcoord2.y = isMajor.y ? coord.y : modifiedCoord2.y;\n\tcoord2.z = isMajor.z ? coord.z : modifiedCoord2.z;\n\n\treturn mix(textureCubeLodEXT(tex, coord1, lodFloor), textureCubeLodEXT(tex, coord2, lodFloor + 1.), fract(lod));\n}\n#else\nvec4 myTextureCubeLod(samplerCube tex, highp vec3 coord, float lod, float texSize)\n{\n\thighp vec3 coordAbs = abs(coord);\n\thighp vec3 cubeCoord = coord / max(coordAbs.x, max(coordAbs.y, coordAbs.z));\n\thighp vec3 cubeCoordD = fwidth(cubeCoord);\n\tfloat diff = max(max(cubeCoordD.x, cubeCoordD.y), cubeCoordD.z) * texSize * 0.5;\n\tfloat autolod = max(log2(diff + .125), 0.);\n\treturn textureCube(tex, coord, lod - autolod);\n}\nvec4 myTextureCubeLodSeamless(samplerCube tex, highp vec3 coord, float lod, float texSize)\n{\n\t// TODO\n\treturn myTextureCubeLod(tex, coord, lod, texSize);\n}\n#endif\n"},VelocityMap:{requires:[],parameters:[],attributes:[],source:"\nvec2 decodeVelocityMap(vec2 v)\n{\n    v = (v - 127. / 255.);\n\n    return v * length(v);\n}\n\nvec2 encodeVelocityMap(vec2 v)\n{\n    v *= inversesqrt(length(v));\n    return v + (127. / 255.);\n}\n"},YUV:{requires:[],parameters:[],attributes:[],source:"\nvec3 encodePalYuv(vec3 rgb)\n{\n    return vec3(\n        dot(rgb, vec3(0.299, 0.587, 0.114)),\n        dot(rgb, vec3(-0.14713, -0.28886, 0.436)),\n        dot(rgb, vec3(0.615, -0.51499, -0.10001))\n    );\n}\n\nvec3 decodePalYuv(vec3 yuv)\n{\n    return vec3(\n        dot(yuv, vec3(1., 0., 1.13983)),\n        dot(yuv, vec3(1., -0.39465, -0.58060)),\n        dot(yuv, vec3(1., 2.03211, 0.))\n    );\n}\n"},FS_VisualizeColor:{requires:[],parameters:["globalSupportsSRGB"],attributes:[],source:"uniform sampler2D u_texture;\nvarying highp vec2 v_texCoord;\nvoid main()\n{\n    gl_FragColor = texture2D(u_texture, v_texCoord);\n#if c_globalSupportsSRGB\n    gl_FragColor.xyz = sqrt(gl_FragColor.xyz);\n#endif\n    gl_FragColor.w = 1.;\n}\n"},FS_VisualizeGBuffer:{requires:["GBuffer"],parameters:["visualizedAttribute"],attributes:[],source:"uniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_g2;\nuniform sampler2D u_g3;\nvarying highp vec2 v_texCoord;\nvoid main()\n{\n    vec4 g0 = texture2D(u_g0, v_texCoord);\n    vec4 g1 = texture2D(u_g1, v_texCoord);\n    vec4 g2 = texture2D(u_g2, v_texCoord);\n    vec4 g3 = texture2D(u_g3, v_texCoord);\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n#if c_visualizedAttribute == 0 // Albedo\n    gl_FragColor.xyz = sqrt(g.albedo);\n#elif c_visualizedAttribute == 1 // Normal\n    gl_FragColor.xyz = g.normal * .5 + .5;\n#elif c_visualizedAttribute == 2 // Velocity\n    gl_FragColor.xy = g.velocity * .5 + .5;\n    gl_FragColor.z = 0.5;\n#elif c_visualizedAttribute == 3 // Roughness\n    gl_FragColor.xyz = vec3(g.roughness);\n#elif c_visualizedAttribute == 4 // Metallic\n    gl_FragColor.xyz = vec3(g.metallic);\n#elif c_visualizedAttribute == 5 // Specular\n    gl_FragColor.xyz = vec3(g.specular);\n#elif c_visualizedAttribute == 6 // Preshaded\n    gl_FragColor.xyz = sqrt(g.preshaded);\n#elif c_visualizedAttribute == 7 // MaterialId\n    float id = g.materialId;\n    gl_FragColor.x = frac(id * (1. / 2.));\n    gl_FragColor.y = frac(id * (1. / 4.)) > 0.25 ? .5 : 0.;\n    gl_FragColor.z = frac(id * (1. / 8.)) > 0.25 ? .5 : 0.;\n    if (id > 7.5) {\n        gl_FragColor.xyz += .5;\n    }\n#endif\n\n    gl_FragColor.w = 1.;\n}\n"},FS_VisualizeLinearDepth:{requires:["DepthFetch"],parameters:[],attributes:[],source:"uniform sampler2D u_texture;\nvarying highp vec2 v_texCoord;\n\nvoid main()\n{\n    highp float depth = decodeGDepth(texture2D(u_texture, v_texCoord));\n    highp float depthScaled = depth * u_globalInvDepthFar;\n\n    gl_FragColor.xyz = vec3(0.2, 0.05, 1.) * clamp(depthScaled * 3., 0., 1.);\n\n    gl_FragColor.xyz = mix(gl_FragColor.xyz, vec3(1.0, 0.8, 0.0), clamp(depthScaled * 3. - 1., 0., 1.));\n\n    gl_FragColor.xyz = mix(gl_FragColor.xyz, vec3(1.0, 1.0, 0.0), clamp(depthScaled * 3. - 1.5, 0., 1.));\n\n    gl_FragColor.xyz = mix(gl_FragColor.xyz, vec3(1.0, 1.0, 1.0), clamp(depthScaled * 3. - 2.0, 0., 1.));\n\n    float frac = fract(depth);\n    gl_FragColor.xyz += vec3(0., 1., 1.) * max(0., 1. - abs(frac - 0.5) * 5.);\n\n    gl_FragColor.w = 1.;\n}\n"},FS_PrefilterCubemap:{requires:["ShadingModel","TextureLod"],parameters:["seamless"],attributes:[],source:"\nuniform samplerCube u_texture;\nuniform sampler2D u_jitter;\nuniform float u_textureLod;\nuniform float u_textureSize;\nuniform float u_roughness;\nuniform float u_borderCoord;\nuniform bvec3 u_axisIsMinor;\nuniform float u_sampleRange;\n\nvarying vec3 v_dir;\nvarying vec2 v_jitterCoord;\n\n// Lambert azimuthal equal-area projection\nvec3 spheremap(vec2 v)\n{\n\tvec4 nn = vec4(v, 1., -1.);\n    float l = dot(nn.xyz, -nn.xyw);\n    nn.z = l; nn.xy *= sqrt(l);\n    return nn.xyz * 2. + vec3(0., 0., -1.); \n}\n\nvoid makeAxis(vec3 ax, out vec3 ay, out vec3 az)\n{\n\tvec3 up = abs(ax.z) > 0.5 ? vec3(1., 0., 0.) : vec3(0., 0., 1.);\n\tay = cross(ax, up);\n\taz = cross(ay, ax);\n}\n\nvoid main()\n{\n\tvec3 dir = v_dir;\n\n\t// texture cube seam elimination\n\tif (u_axisIsMinor.x) {\n\t\tdir.x /= u_borderCoord;\n\t}\n\tif (u_axisIsMinor.y) {\n\t\tdir.y /= u_borderCoord;\n\t}\n\tif (u_axisIsMinor.z) {\n\t\tdir.z /= u_borderCoord;\n\t}\n\n\tvec3 dirU, dirV;\n\tmakeAxis(dir, dirU, dirV);\n\n\tdir = normalize(dir);\n\tdirU = normalize(dirU);\n\tdirV = normalize(dirV);\n\n\thighp vec4 sum = vec4(0.);\n\n\tvec2 offs = texture2D(u_jitter, v_jitterCoord).xy * 0.1 - 0.05;\n\n\tfor (float x = -0.95; x <= 1.0; x += 0.1) {\n\t\tfor (float y = -0.95; y <= 1.0; y += 0.1) {\n\t\t\tvec2 pv = vec2(x, y) + offs;\n\t\t\t\n\t\t\tfloat borderrad = max(abs(pv.x), abs(pv.y)) / length(pv);\n\t\t\tpv *= borderrad;\n\t\t\tfloat chance2 = borderrad;\n\t\t\tfloat ln = length(pv);\n\t\t\tpv *= ln; chance2 *= ln;\n\n\t\t\tvec3 lrdir = spheremap(pv * u_sampleRange);\n\t\t\tvec3 rdir = lrdir.z * dir + lrdir.y * dirU + lrdir.x * dirV;\n\t\t\tfloat nhDot = lrdir.z;\n\t\t\thighp float chance = evaluateGGXSpecularDistribution(nhDot, u_roughness);\n\t\t\tchance *= max(0., nhDot);\n\t\t\tchance *= evaluateBeckmannGeometryShadowingSingleSide(nhDot, u_roughness);\n\t\t\tvec4 value = myTextureCubeLod(u_texture, rdir, u_textureLod, u_textureSize);\n\t\t\thighp vec3 color = value.xyz * value.xyz; // linearize\n\t\t\tsum += vec4(color, 1.) * chance * chance2;\n\t\t}\n\t}\n\n\thighp vec3 result = sum.xyz / sum.w;\n\tgl_FragColor = vec4(sqrt(result), 1.);\n}\n"},VS_PrefilterCubemap:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec3 v_dir;\nuniform vec3 u_axisMajor;\nuniform vec3 u_axisU;\nuniform vec3 u_axisV;\nvarying vec2 v_jitterCoord;\nuniform float u_jitterScale;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n\n    v_jitterCoord = a_position * u_jitterScale;\n\n    v_dir = u_axisMajor;\n    v_dir += u_axisU * a_position.x;\n    v_dir += u_axisV * a_position.y;\n}\n"},FS_BaseLight:{requires:["HdrMosaic","GBuffer","ShadingModel","DepthFetch"],parameters:["useHdrMosaic"],attributes:[],source:"// this shader is abstract; must be imported and main function must be provided\n\n\n\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_g2;\nuniform sampler2D u_g3;\nuniform sampler2D u_linearDepth;\n\nuniform vec3 u_lightColor;\nuniform highp float u_lightStrength;\n\nvarying highp vec2 v_texCoord;\nvarying highp vec2 v_viewDir;\n\nuniform sampler2D u_dither;\nvarying highp vec2 v_ditherCoord;\n\nhighp float perspectiveScaling = 1.;\nhighp vec3 viewDir;\nhighp vec3 viewDirNormalized;\nhighp vec3 viewPos;\n\nvoid setupLight()\n{\n    viewDir = vec3(v_viewDir * perspectiveScaling, 1.);\n    viewPos = viewDir * fetchDepth(u_linearDepth, v_texCoord * perspectiveScaling);\n    viewPos = -viewPos; // FIXME: ??\n\n    viewDirNormalized = normalize(viewDir);\n}\n\nvoid emitLightPassOutput(vec3 lit)\n{\n#if c_useHdrMosaic\n    float lum = max(max(lit.x, lit.y), lit.z);\n\n    // overflow protection\n    const float lumLimit = HdrMosaicMaximumLevel * 0.7;\n    if (lum > lumLimit) {\n        lit *= lumLimit / lum;\n    }\n\n    // dither\n    vec3 dither = texture2D(u_dither, v_ditherCoord * perspectiveScaling).xyz;\n\n    gl_FragColor = encodeHdrMosaicDithered(lit, dither);\n#else\n    if (lit != lit) lit *= 0.; // reject denormals\n    gl_FragColor = vec4(lit, 0.);\n#endif\n}\n"},FS_BasePointLight:{requires:["FS_BaseLight"],parameters:[],attributes:[],source:"// this shader is abstract; must be imported and main function must be provided\n\n\nGBufferContents g;\nMaterialInfo mat;\n\nvoid setupPointLight()\n{\n    vec4 g0 = texture2D(u_g0, v_texCoord * perspectiveScaling);\n    vec4 g1 = texture2D(u_g1, v_texCoord * perspectiveScaling);\n    vec4 g2 = texture2D(u_g2, v_texCoord * perspectiveScaling);\n    vec4 g3 = vec4(0.);\n\n    if (isGBufferEmpty(g0, g1, g2, g3)) {\n        discard;\n    }\n\n    decodeGBuffer(g, g0, g1, g2, g3);\n}\n\nvoid doPointLight(vec3 lightDir, highp float shadow)\n{\n    mat = getMaterialInfoFromGBuffer(g);\n\n    PointLightBRDFParameters params = computePointLightBRDFParameters(\n        g.normal, lightDir, viewDirNormalized);\n\n    vec3 lit = evaluatePointLight(params, mat, u_lightColor);\n\n    lit *= shadow * u_lightStrength;\n\n    emitLightPassOutput(lit);\n}\n"},FS_BasePositionalLight:{requires:["FS_BaseLight"],parameters:["isFullScreen"],attributes:[],source:"\n#if !c_isFullScreen\nvarying float v_w;\n#endif\n\n\nvoid setupPositionalLight()\n{\n#if !c_isFullScreen\n    perspectiveScaling = 1. / v_w;\n#endif\n}\n"},FS_DeferredAmbientLight:{requires:["GBuffer","ShadingModel","FS_BaseLight"],parameters:[],attributes:[],source:"\nuniform sampler2D u_ssao;\n\nvoid main()\n{\n    setupLight();\n\n    vec4 g0 = texture2D(u_g0, v_texCoord);\n    vec4 g1 = texture2D(u_g1, v_texCoord);\n    vec4 g2 = texture2D(u_g2, v_texCoord);\n    vec4 g3 = vec4(0.);\n\n    if (isGBufferEmpty(g0, g1, g2, g3)) {\n        discard;\n        return;\n    }\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    MaterialInfo mat = getMaterialInfoFromGBuffer(g);\n\n    float ssao = texture2D(u_ssao, v_texCoord).r;\n    ssao *= ssao;\n\n    vec3 viewDir = vec3(v_viewDir, 1.);\n    UniformLightBRDFParameters params = computeUniformLightBRDFParameters(\n        g.normal, normalize(viewDir));\n\n    vec3 lit = evaluateUniformLight(params, mat, u_lightColor * ssao);\n\n    emitLightPassOutput(lit);\n}\n"},FS_DeferredDirectionalLight:{requires:["GBuffer","ShadingModel","DepthFetch","FS_BasePointLight"],parameters:["hasShadow"],attributes:[],source:"\n\nuniform vec3 u_lightDir;\n\n#if c_hasShadow\nuniform sampler2D u_shadow;\n#endif\n\nvoid main()\n{\n    setupLight();\n    setupPointLight();\n\n#if c_hasShadow\n\n    float shadowValue = texture2D(u_shadow, v_texCoord).x;\n    if (shadowValue < 0.0001) {\n        discard;\n    }\n\n#else // c_hasShadow\n\n    float shadowValue = 1.;\n\n#endif // c_hasShadow\n\n    doPointLight(u_lightDir, shadowValue * u_lightStrength);\n\n}\n"},FS_DeferredPointLight:{requires:["GBuffer","ShadingModel","DepthFetch","FS_BasePointLight","FS_BasePositionalLight","Pack"],parameters:["isFullScreen","hasShadowMap"],attributes:[],source:"\nuniform highp vec3 u_lightPos;\nuniform highp float u_lightInvInfluenceRadiusSquared;\nuniform highp float u_minimumDistance; // squared\nuniform highp float u_lightRadius;\nuniform highp float u_lightLength;\nuniform vec3 u_lightDir; // capsule\n\n#if c_hasShadowMap\nuniform samplerCube u_shadowMap;\nuniform sampler2D u_jitter;\nuniform highp mat4 u_shadowMapMatrix;\nuniform vec2 u_jitterAmount;\nvarying vec2 v_jitterCoord;\nuniform float u_invDistanceToJitter;\n#endif\n\nfloat shadowTextureCubePack24(samplerCube tex, highp vec3 coord, highp float comparand)\n{\n    highp float value = unpack24(textureCube(tex, coord.xyz).xyz);\n    return step(comparand, value);\n}\n\nvoid makePerpendicularVectors(vec3 source, out vec3 out1, out vec3 out2)\n{\n    vec3 up = abs(source.z) > sqrt(0.5) ? vec3(1., 0., 0.) : vec3(0., 0., 1.);\n    out1 = normalize(cross(source, up));\n    out2 = cross(source, out1);\n}\n\nvoid main()\n{\n    setupPositionalLight();\n    setupLight();\n    setupPointLight();\n\n#if c_hasShadowMap\n\n    highp vec3 viewPos = viewPos;\n    vec3 shadowCoord = (u_shadowMapMatrix * vec4(viewPos, 1.)).xyz;\n\n    float shadowDist = length(shadowCoord);\n    shadowCoord = normalize(shadowCoord);\n\n    float shadowValue = 0.;\n    vec4 jitter1 = texture2D(u_jitter, v_ditherCoord.xy) - 0.5;\n    vec4 jitter2 = texture2D(u_jitter, v_jitterCoord.xy) - 0.5;\n\n    vec2 jamt = u_jitterAmount;\n    jamt += u_invDistanceToJitter / shadowDist; // soft shadow near the light\n\n    jitter1 *= jamt.xyxy;\n    jitter2 *= jamt.xyxy;\n\n    vec3 jitterVec1, jitterVec2;\n    makePerpendicularVectors(shadowCoord, jitterVec1, jitterVec2);\n\n    shadowDist -= 0.001;\n\n    shadowValue += shadowTextureCubePack24(u_shadowMap, shadowCoord + jitter1.x * jitterVec1 + jitter1.y * jitterVec2, shadowDist);\n    shadowValue += shadowTextureCubePack24(u_shadowMap, shadowCoord + jitter1.z * jitterVec1 + jitter1.w * jitterVec2, shadowDist);\n    shadowValue += shadowTextureCubePack24(u_shadowMap, shadowCoord + jitter2.x * jitterVec1 + jitter2.y * jitterVec2, shadowDist);\n    shadowValue += shadowTextureCubePack24(u_shadowMap, shadowCoord + jitter2.z * jitterVec1 + jitter2.w * jitterVec2, shadowDist);\n\n    if (shadowValue < 0.0001) {\n        discard;\n    }\n\n    shadowValue *= 1. / 4.;\n\n#else // c_hasShadowMap\n\n    float shadowValue = 1.;\n\n#endif // c_hasShadowMap\n\n    highp vec3 lightDir = u_lightPos - viewPos;\n    float dist = dot(lightDir, lightDir) * u_lightInvInfluenceRadiusSquared;\n\n    if (dist >= 1.) {\n        discard;\n    }\n\n    if (u_lightRadius > 0. || u_lightLength > 0.) {\n        // TODO: sized point light\n    }\n\n    highp float strength = 1. - dist;\n\n    strength *= 1. / max(u_minimumDistance, dot(lightDir, lightDir));\n\n    doPointLight(normalize(lightDir), shadowValue * strength);\n}\n"},FS_DeferredUnlit:{requires:["GBuffer","FS_BaseLight"],parameters:[],attributes:[],source:"\nvoid main()\n{\n    vec4 g0 = vec4(0.);\n    vec4 g1 = vec4(0.);\n    vec4 g2 = vec4(0.);\n    vec4 g3 = texture2D(u_g3, v_texCoord);\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    emitLightPassOutput(g.preshaded);\n}\n"},VS_BasePositionalLight:{requires:[],parameters:["isFullScreen"],attributes:[],source:"\n#if c_isFullScreen\nattribute vec2 a_position;\n#endif\n\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\nuniform vec2 u_ditherScale;\nvarying vec2 v_ditherCoord;\nvarying vec2 v_jitterCoord;\n\n#if !c_isFullScreen\nvarying float v_w;\nuniform mat4 u_viewProjectionMatrix;\n\nvec3 computeWorldPosition();\n#endif\n\nvoid main()\n{\n\n#if c_isFullScreen\n    gl_Position = vec4(a_position, 1., 1.);\n    float v_w = 1.;\n#else\n    gl_Position = vec4(computeWorldPosition(), 1.);\n    gl_Position = u_viewProjectionMatrix * gl_Position;\n    v_w = gl_Position.w;\n#endif\n\n    v_texCoord = gl_Position.xy * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * gl_Position.x;\n    v_viewDir += u_viewDirCoefY * gl_Position.y;\n\n    v_ditherCoord.xy = u_ditherScale * gl_Position.xy;\n    v_jitterCoord.xy = v_ditherCoord.xy + vec2(.1, .1);\n\n    v_texCoord *= v_w;\n    v_viewDir *= v_w;\n    v_ditherCoord *= v_w;\n    v_jitterCoord *= v_w;\n\n}\n"},VS_DeferredAmbientLight:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\nuniform vec2 u_ditherScale;\nvarying vec2 v_ditherCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 1., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n\n    v_ditherCoord.xy = u_ditherScale * a_position;\n}\n"},VS_DeferredDirectionalLight:{requires:[],parameters:[],attributes:[],source:"\nattribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\nuniform vec2 u_ditherScale;\nvarying vec2 v_ditherCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 1., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n\n    v_ditherCoord.xy = u_ditherScale * a_position;\n}\n"},VS_DeferredPointLight:{requires:["VS_BasePositionalLight"],parameters:[],attributes:[],source:"\n#if !c_isFullScreen\nattribute vec3 a_position;\n\nuniform vec3 u_lightPos;\nuniform float u_lightInfluenceRadius;\n\nvec3 computeWorldPosition()\n{\n    return u_lightPos + a_position * u_lightInfluenceRadius;\n}\n#endif\n"},VS_DeferredUnlit:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nuniform vec2 u_ditherScale;\nvarying vec2 v_ditherCoord;\nvarying vec2 v_viewDir;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 1., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_ditherCoord.xy = u_ditherScale * a_position;\n\n    v_viewDir = vec2(0.); // unused by required by FS_BaseLight\n}\n"},FS_BilateralFilter:{requires:["DepthFetch","Globals"],parameters:[],attributes:[],source:"\nuniform sampler2D u_input;\nuniform sampler2D u_linearDepth;\n\nvarying highp vec2 v_texCoord;\n\nvarying highp vec2 v_texCoord1;\nvarying highp vec2 v_texCoord2;\nvarying highp vec2 v_texCoord3;\nvarying highp vec2 v_texCoord4;\nvarying highp vec2 v_texCoord5;\nvarying highp vec2 v_texCoord6;\n\nhighp float baseDepth;\nhighp float weightScale;\n\nvec2 bilateralSample(highp vec2 at)\n{\n    float color = texture2D(u_input, at).r;\n    highp float depth = fetchDepth(u_linearDepth, at);\n    float weight = abs(depth - baseDepth) * weightScale;\n    weight = exp2(-weight * weight);\n    return vec2(color * weight, weight);\n}\n\n\nvoid main()\n{\n    vec2 sum = vec2(texture2D(u_input, v_texCoord).r, 1.);\n    baseDepth = fetchDepth(u_linearDepth, v_texCoord);\n\n    weightScale = 100. / baseDepth;\n\n    sum += bilateralSample(v_texCoord1);\n    sum += bilateralSample(v_texCoord2);\n    sum += bilateralSample(v_texCoord3);\n    sum += bilateralSample(v_texCoord4);\n    sum += bilateralSample(v_texCoord5);\n    sum += bilateralSample(v_texCoord6);\n\n    float result = sum.x / sum.y;\n    gl_FragColor = vec4(result);\n}\n"},FS_Blur:{requires:["Globals","LogRGB"],parameters:[],attributes:[],source:"\nuniform sampler2D u_texture;\nvarying highp vec2 v_texCoord1;\nvarying highp vec2 v_texCoord2;\nvarying highp vec2 v_texCoord3;\n\nvoid main()\n{\n    vec3 color0 = decodeLogRGB(texture2D(u_texture, v_texCoord1));\n    vec3 color1 = decodeLogRGB(texture2D(u_texture, vec2(v_texCoord1.x, v_texCoord2.y)));\n    vec3 color2 = decodeLogRGB(texture2D(u_texture, vec2(v_texCoord1.x, v_texCoord3.y)));\n    vec3 color3 = decodeLogRGB(texture2D(u_texture, vec2(v_texCoord2.x, v_texCoord1.y)));\n    vec3 color4 = decodeLogRGB(texture2D(u_texture, vec2(v_texCoord3.x, v_texCoord1.y)));\n\n    vec3 outColor = color0 * 0.5 + (color1 + color2 + color3 + color4) * 0.125;\n\n    gl_FragColor = encodeLogRGB(outColor);\n}\n"},FS_GaussianBlur:{requires:["LogRGB"],parameters:["kernelSize"],attributes:[],source:"\nvarying highp vec2 v_texCoord;\n\nuniform sampler2D u_input;\n\nuniform highp vec2 u_texCoordIncr;\n\n// In WebGL 1.0, array of uniforms is not allowed in fragment shader\nuniform float u_weight1;\n#if c_kernelSize >= 2\nuniform float u_weight2;\n#endif\n#if c_kernelSize >= 3\nuniform float u_weight3;\n#endif\n#if c_kernelSize >= 4\nuniform float u_weight4;\n#endif\n#if c_kernelSize >= 5\nuniform float u_weight5;\n#endif\n#if c_kernelSize >= 6\nuniform float u_weight6;\n#endif\n#if c_kernelSize >= 7\nuniform float u_weight7;\n#endif\n#if c_kernelSize >= 8\nuniform float u_weight8;\n#endif\n#if c_kernelSize >= 9\nuniform float u_weight9;\n#endif\n#if c_kernelSize >= 10\nuniform float u_weight10;\n#endif\n#if c_kernelSize >= 11\nuniform float u_weight11;\n#endif\n\nvec4 outp = vec4(0.);\nhighp vec2 coord;\n\nvoid addOne(float weight)\n{\n    outp += weight * texture2D(u_input, coord);\n    coord += u_texCoordIncr;\n}\n\nvoid main()\n{\n    coord = v_texCoord;\n#if c_kernelSize >= 1\n    addOne(u_weight1);\n#endif\n#if c_kernelSize >= 2\n    addOne(u_weight2);\n#endif\n#if c_kernelSize >= 3\n    addOne(u_weight3);\n#endif\n#if c_kernelSize >= 4\n    addOne(u_weight4);\n#endif\n#if c_kernelSize >= 5\n    addOne(u_weight5);\n#endif\n#if c_kernelSize >= 6\n    addOne(u_weight6);\n#endif\n#if c_kernelSize >= 7\n    addOne(u_weight7);\n#endif\n#if c_kernelSize >= 8\n    addOne(u_weight8);\n#endif\n#if c_kernelSize >= 9\n    addOne(u_weight9);\n#endif\n#if c_kernelSize >= 10\n    addOne(u_weight10);\n#endif\n#if c_kernelSize >= 11\n    addOne(u_weight11);\n#endif\n    gl_FragColor = outp;\n}\n"},FS_HdrCompress:{requires:["Globals","HdrToneMapping"],parameters:["direction","operatorType"],attributes:[],source:"\n#define OperatorType_Reinhard 0\n\nuniform sampler2D u_input;\nuniform sampler2D u_jitter;\nvarying highp vec2 v_texCoord;\nvarying highp vec2 v_jitterCoord;\n\nuniform float u_gain;\n\nvoid main()\n{\n    vec4 inp = texture2D(u_input, v_texCoord);\n\n#if !c_direction\n\tinp.xyz *= u_gain;\n#endif\n\n#if c_operatorType == OperatorType_Reinhard\n#if c_direction\n\tinp.xyz = encodeReinhard(inp.xyz);\n#else // c_direction\n\tinp.xyz = decodeReinhard(inp.xyz);\n#endif // c_direction\n#endif // c_operatorType\n\n#if c_direction\n\tinp.xyz *= u_gain;\n#endif\n\n\tinp += inp * ((texture2D(u_jitter, v_jitterCoord).x - 0.5) * (1. / 1024.));\n\n\tgl_FragColor = inp;\n}\n"},FS_SSAO:{requires:["DepthFetch","Complex","Globals","GBuffer"],parameters:[],attributes:[],source:"\nuniform sampler2D u_g2;\nuniform sampler2D u_linearDepth;\n\nvarying highp vec2 v_texCoord;\nvarying mediump vec2 v_viewDir;\n\nuniform highp vec2 u_viewDirCoefX;\nuniform highp vec2 u_viewDirCoefY;\n\nuniform mediump vec2 u_sampleOffsetScale;\n\nvoid main()\n{\n    vec4 g2 = texture2D(u_g2, v_texCoord);\n\n    highp float baseDepth = fetchDepth(u_linearDepth, v_texCoord);\n    highp vec3 baseViewPos = vec3(v_viewDir, 1.) * baseDepth;\n    vec3 baseNormal = decodeGBufferNormal(g2);\n\n    highp vec2 patternPos = fract(gl_FragCoord.xy * 0.5);\n    highp float patternPos2 = fract(dot(floor(gl_FragCoord.xy), vec2(0.25)));\n\n    float depthDecayScale = -16. / baseDepth;\n\n    vec2 sampleOffsetScale = u_sampleOffsetScale;\n\n\n    float sampleDistance = 1. + patternPos2 * 2.;\n    const float sampleRotAngle = 1.0;\n    vec2 sampleRot = vec2(sin(sampleRotAngle), cos(sampleRotAngle));\n\n    vec2 sampleDir = vec2(patternPos.x > .5 ? 1. : -1., 0.);\n    sampleDir = patternPos.y > .5 ? sampleDir : sampleDir.yx;\n\n    float sampleDecay = 1.;\n\n    float ret = 0.;\n\n    for (int i = 0; i < 12; ++i) {\n        vec2 sampleOffset = sampleDir * sampleDistance;\n        vec2 sampleCoordOffs = sampleOffset * sampleOffsetScale;\n        highp vec2 sampleAt = v_texCoord + sampleCoordOffs;\n        highp float depth = fetchDepth(u_linearDepth, sampleAt) + 0.1; // FIXME: this value needs to be tweaked?\n        vec3 viewPos = vec3(v_viewDir + u_viewDirCoefX * sampleCoordOffs.x\n            + u_viewDirCoefY * sampleCoordOffs.y, 1.) * depth;\n        vec3 relViewPos = normalize(viewPos - baseViewPos);\n        float cosHorizon = -dot(relViewPos, baseNormal);\n        float depthDecay = exp2(depthDecayScale * abs(depth - baseDepth));\n\n        ret = mix(ret, max(ret, cosHorizon), sampleDecay * depthDecay);\n\n        sampleDistance += 1. + sampleDistance * mix(.1, .2, patternPos2);\n        sampleDir = complexMultiply(sampleDir, sampleRot);\n        sampleDecay *= .9;\n    }\n\n    gl_FragColor.xyzw = vec4(1. - ret);\n}"
},FS_SSR:{requires:["DepthFetch","ScreenSpaceRaytrace","Globals","GBuffer","LogRGB","HdrMosaic","ShadingModel"],parameters:["useHdrMosaic","colorIsLogRGB"],attributes:[],source:"\n\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_g2;\nuniform sampler2D u_linearDepth;\nuniform sampler2D u_color; // LogRGB\nuniform sampler2D u_reflections; // HdrMosaic\nuniform sampler2D u_jitter;\n\nvarying highp vec2 v_texCoord;\nvarying mediump vec2 v_viewDir;\nvarying highp vec2 v_jitterCoord;\n\nuniform highp vec2 u_viewDirCoefX;\nuniform highp vec2 u_viewDirCoefY;\n\nuniform highp mat4 u_projectionMatrix;\n\nuniform mediump float u_stride;\n\n// DDA based ray caster\n// see http://casual-effects.blogspot.jp/2014/08/screen-space-ray-tracing.html\n\nGBufferContents g;\n\nvec3 decodeInputColor(vec4 color)\n{\n#if c_colorIsLogRGB\n    return decodeLogRGB(color);\n#else\n    return color.xyz;\n#endif\n}\n\nvec3 doSSR(out float confidence)\n{\n    highp float baseDepth = fetchDepth(u_linearDepth, v_texCoord);\n    highp vec3 baseViewDir = vec3(v_viewDir, 1.);\n    highp vec3 baseViewPos = baseViewDir * baseDepth;\n    vec3 baseNormal = g.normal;\n\n    vec3 reflectionVec = normalize(reflect(baseViewDir, baseNormal));\n\n    float jitter = texture2D(u_jitter, v_jitterCoord).x;\n\n    vec3 hitPoint;\n    vec2 hitPixel;\n    float hitSteps;\n\n    if (rayTraceScreenSpace(\n        u_linearDepth,\n        baseViewPos,\n        reflectionVec,\n        u_projectionMatrix,\n        u_globalRenderSize,\n        u_globalInvRenderSize,\n        u_stride,\n        0.5 + jitter,\n        64. + baseDepth * 64.,\n        hitPixel,\n        hitPoint,\n        hitSteps\n        )) {\n\n        hitPixel.xy *= u_globalInvRenderSize;\n\n        vec3 color = decodeInputColor(texture2D(u_color, hitPixel.xy));\n\n        // distance fade\n        hitSteps = clamp(2. - hitSteps * 2., 0., 1.); hitSteps *= hitSteps;\n        float fade = hitSteps;\n\n        // screen border fade\n        float dfb = min(hitPixel.x, 1. - hitPixel.x);\n        dfb = min(dfb, min(hitPixel.y, 1. - hitPixel.y));\n        dfb = clamp(dfb * 10., 0., 1.);\n        fade *= dfb;\n\n        confidence = fade;\n\n        return color.xyz;\n    } else {\n        confidence = 0.;\n        return vec3(0.);\n    }\n}\n\nvoid main()\n{\n    vec4 g0 = texture2D(u_g0, v_texCoord);\n    vec4 g1 = texture2D(u_g1, v_texCoord);\n    vec4 g2 = texture2D(u_g2, v_texCoord);\n    vec4 g3 = vec4(0.); // unused\n\n    if (isGBufferEmpty(g0, g1, g2, g3)) {\n        discard;\n        return;\n    }\n\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    gl_FragColor = texture2D(u_reflections, v_texCoord);\n\n    // TODO: adjust SSR confidence value\n    float nvDot = clamp(dot(g.normal, normalize(vec3(v_viewDir, 1.))), 0., 1.);\n    float fresnel = 1. - nvDot;\n    MaterialInfo mat = getMaterialInfoFromGBuffer(g);\n    float roughness = mat.roughness;\n    if (isMaterialClearCoat(mat)) {\n        roughness = min(roughness, mat.clearCoatRoughness);\n    }\n    float ssrAmount = min(1., 1.5 - roughness * 6.);\n    if (ssrAmount > 0.) {\n        vec4 reflAmt = evaluateReflection(nvDot, mat);\n        vec2 ccRefl = evaluateReflectionForClearCoat(nvDot, mat);\n        reflAmt = reflAmt * (1. - ccRefl.y) + ccRefl.x;\n        if (reflAmt.w > 0.00001) {\n            ssrAmount = 1.;\n\n            // FIXME: why does reflAmt sometimes become greater than pi (energy conservation)?\n            //        maybe it's bug in ShadingModel.glsl?\n            reflAmt.xyz = min(reflAmt.xyz, M_PI);\n\n            float ssrConfidence;\n            vec3 ssr = doSSR(ssrConfidence);\n            ssr *= reflAmt.xyz * (1. / M_PI);\n\n            ssrConfidence *= ssrAmount;\n\n#if c_useHdrMosaic\n            vec4 encoded = encodeHdrMosaic(ssr);\n            gl_FragColor.xyz = mix(gl_FragColor.xyz, encoded.xyz, ssrConfidence);\n            gl_FragColor.w = max(gl_FragColor.w, encoded.w);\n#else\n            gl_FragColor.xyz = mix(gl_FragColor.xyz, ssr, ssrConfidence);\n            gl_FragColor.w = 1.;\n#endif\n        }\n    }\n\n}"},FS_ScreenSpaceSoftShadow:{requires:["DepthFetch","Globals","DepthToNormal","MatrixInverse","MatrixTranspose"],parameters:["isPositionalLight","direction","numSamples"],attributes:[],source:"\n\nuniform sampler2D u_input;\nuniform sampler2D u_linearDepth;\n\nvarying highp vec2 v_texCoord;\nvarying highp vec2 v_viewDir;\n\nuniform vec3 u_covSScale;\n\nuniform float u_maxBlur;\n\nuniform vec3 u_lightU, u_lightV, u_lightDir;\n\nuniform sampler2D u_jitter;\nvarying highp vec2 v_jitterCoord;\n\nvoid main()\n{\n    highp float baseDepth = fetchDepth(u_linearDepth, v_texCoord);\n    highp vec3 baseViewPos = baseDepth * vec3(v_viewDir, 1.);\n    vec3 normal = computeNormalFromDepthUsingStandardDerivatives(u_linearDepth, v_texCoord, vec3(v_viewDir, 1.));\n\n    // ISSSS. See issss.ja.md\n\n    // Read penumbra size\n    vec4 inValue = texture2D(u_input, v_texCoord);\n    float penumbraSize = (inValue.y + 0.001) * baseDepth * 0.05; // FIXME: make this adjustable\n\n    // Penumbra matrix + normal row (world space), transposed\n    mat3 mW2PT = mat3(u_lightU, u_lightV, normal);\n    // Inverse\n    mat3 mP2W = invertMatrix3Transposed(mW2PT, 0.01);\n\n    // Covariance matrix on world space = mP2W * SigmaP * mP2W\n    // SigmaP is defined as SigmaP * (x, y, z) = (sigma * x, sigma * y, 0)\n    float sigma = penumbraSize;\n    mat3 sigmaP = mat3(\n        sigma, 0., 0.,\n        0., sigma, 0.,\n        0., 0., 0.);\n    mat3 covW = (mP2W) * sigmaP * transposeMatrix3(mP2W);\n\n    // Compute the covariance matrix on screen space\n    // mW2S = [ 1 / w    0    -x/w^2 ]\n    //        [   0    1 / w  -y/w^2 ]\n    highp float baseDepthInv = 1. / baseDepth;\n    vec2 mW2Spart = -baseViewPos.xy * (baseDepthInv * baseDepthInv);\n    vec3 covS = vec3(\n        covW[0][0] * (baseDepthInv * baseDepthInv) +\n            baseDepthInv * mW2Spart.x * (covW[0][2] * covW[0][2]) +\n            covW[2][2] * (mW2Spart.x * mW2Spart.x),   // sigma x ^ 2\n        covW[1][1] * (baseDepthInv * baseDepthInv) +\n            baseDepthInv * mW2Spart.y * (covW[1][2] * covW[1][2]) +\n            covW[2][2] * (mW2Spart.y * mW2Spart.y),   // sigma y ^ 2\n        baseDepthInv * baseDepthInv * covW[0][1] +\n        baseDepthInv * mW2Spart.x * covW[1][2] +\n        baseDepthInv * mW2Spart.y * covW[0][2] +\n        mW2Spart.x * mW2Spart.y * covW[2][2]  // sigma xy\n    );\n\n    covS *= u_covSScale;\n\n    // Compute cross convolution axis\n    vec2 axis1, axis2;\n    axis1.y = 0.;\n    axis2.y = sqrt(max(0., covS.y));\n    axis2.x = covS.z / (axis2.y + 0.0000001);\n    axis1.x = sqrt(max(0., covS.x - axis2.x * axis2.x));\n\n    float cx = dot(v_texCoord, axis1 / dot(axis1, axis1));\n    float cy = dot(v_texCoord, axis2 / dot(axis2, axis2));\n\n    float maxlen = max(dot(axis1, axis1), dot(axis2, axis2));\n    if (maxlen > u_maxBlur) {\n        float scale = sqrt(u_maxBlur / maxlen);\n        axis1 *= scale; axis2 *= scale;\n    }\n\n    // Bilateral filtering\n    highp float weightScale = 30. / baseDepth;\n\n    vec2 sum = vec2(1., 1.) * 0.001;\n\n    highp vec2 coordOffset = c_direction != 0 ? axis1 : axis2;\n    highp vec2 coord = v_texCoord - coordOffset * 0.5;\n    coordOffset *= 1. / float(c_numSamples);\n\n    float shift = -0.5;\n\n#if c_direction\n    float jitter = texture2D(u_jitter, v_jitterCoord).x;\n#else\n    float jitter = texture2D(u_jitter, v_jitterCoord).y;\n#endif\n    coord += coordOffset * jitter;\n    shift += (1. / float(c_numSamples)) * jitter;\n\n    for (int i = 0; i < c_numSamples; ++i) {\n        float value = texture2D(u_input, coord).x;\n        highp float depth = fetchDepth(u_linearDepth, coord);\n\n        float weight = abs(depth - baseDepth) * weightScale + abs(shift) * 3.;\n        weight = exp2(-weight * weight);\n\n        sum += vec2(value, 1.) * weight;\n\n        coord += coordOffset;\n        shift += 1. / float(c_numSamples);\n    }\n\n    float result = sum.x / sum.y;\n    gl_FragColor = vec4(result, inValue.yzw);\n}"},FS_TemporalAA:{requires:["Globals","GBuffer","DepthFetch","YUV"],parameters:["useWiderFilter"],attributes:[],source:"\nuniform sampler2D u_input;\nuniform sampler2D u_linearDepth;\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_oldAccum;\nuniform sampler2D u_oldDepth;\n\nvarying highp vec2 v_texCoord;\n\nvoid main()\n{\n\n    vec4 g0 = texture2D(u_g0, v_texCoord);\n    vec4 g1 = texture2D(u_g1, v_texCoord);\n    vec4 g2 = vec4(0.);\n    vec4 g3 = vec4(0.);\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    vec3 currentColor = texture2D(u_input, v_texCoord).xyz;\n\n    highp vec2 curCoord = v_texCoord.xy;\n#if c_useWiderFilter\n    highp vec4 curCoord2 = curCoord.xyxy + vec4(u_globalDoubleInvRenderSize, -u_globalDoubleInvRenderSize);\n    vec3 currentColor5 = texture2D(u_input, curCoord2.xy).xyz;\n    vec3 currentColor6 = texture2D(u_input, curCoord2.xw).xyz;\n    vec3 currentColor7 = texture2D(u_input, curCoord2.zy).xyz;\n    vec3 currentColor8 = texture2D(u_input, curCoord2.zw).xyz;\n    curCoord2 = curCoord.xyxy + vec4(u_globalInvRenderSize, -u_globalInvRenderSize);\n#else\n    highp vec4 curCoord2 = curCoord.xyxy + vec4(u_globalInvRenderSize, -u_globalInvRenderSize);\n    vec3 currentColor5 = texture2D(u_input, curCoord2.xy).xyz;\n    vec3 currentColor6 = texture2D(u_input, curCoord2.xw).xyz;\n    vec3 currentColor7 = texture2D(u_input, curCoord2.zy).xyz;\n    vec3 currentColor8 = texture2D(u_input, curCoord2.zw).xyz;\n#endif\n    vec3 currentColor1 = texture2D(u_input, vec2(curCoord.x, curCoord2.y)).xyz;\n    vec3 currentColor2 = texture2D(u_input, vec2(curCoord.x, curCoord2.w)).xyz;\n    vec3 currentColor3 = texture2D(u_input, vec2(curCoord2.x, curCoord.y)).xyz;\n    vec3 currentColor4 = texture2D(u_input, vec2(curCoord2.z, curCoord.y)).xyz;\n\n    highp vec4 neighborCoords = curCoord.xyxy + vec4(u_globalQuadInvRenderSize, -u_globalQuadInvRenderSize);\n\n    vec4 lastValue = texture2D(u_oldAccum, curCoord);\n    vec3 lastColor = lastValue.xyz;\n\n    vec3 currentColor0 = encodePalYuv(currentColor);\n    currentColor1 = encodePalYuv(currentColor1);\n    currentColor2 = encodePalYuv(currentColor2);\n    currentColor3 = encodePalYuv(currentColor3);\n    currentColor4 = encodePalYuv(currentColor4);\n    currentColor5 = encodePalYuv(currentColor5);\n    currentColor6 = encodePalYuv(currentColor6);\n    currentColor7 = encodePalYuv(currentColor7);\n    currentColor8 = encodePalYuv(currentColor8);\n\n    vec3 minColor = min(min(currentColor1, currentColor2), min(currentColor3, min(currentColor4, currentColor0)));\n    vec3 maxColor = max(max(currentColor1, currentColor2), max(currentColor3, max(currentColor4, currentColor0)));\n    minColor = mix(minColor, min(min(currentColor5, currentColor6), min(currentColor7, min(currentColor8, minColor))), 0.5);\n    maxColor = mix(maxColor, max(max(currentColor5, currentColor6), max(currentColor7, max(currentColor8, maxColor))), 0.5);\n\n    vec3 oldLastColor = lastColor;\n    lastColor = encodePalYuv(lastColor);\n    lastColor = clamp(lastColor, minColor, maxColor);\n    lastColor = decodePalYuv(lastColor);\n\n    vec3 diffLastColor = oldLastColor - lastColor;\n    lastValue.w *= max(0., 1. - dot(diffLastColor, diffLastColor) * 5.);\n\n    // prevent ghosting\n    float blendAmount = lastValue.w;\n    blendAmount = min(blendAmount, texture2D(u_oldAccum, neighborCoords.xy).w);\n    blendAmount = min(blendAmount, texture2D(u_oldAccum, neighborCoords.xw).w);\n    blendAmount = min(blendAmount, texture2D(u_oldAccum, neighborCoords.zy).w);\n    blendAmount = min(blendAmount, texture2D(u_oldAccum, neighborCoords.zw).w);\n\n    gl_FragColor.xyz = mix(currentColor, lastColor, blendAmount);\n    gl_FragColor.w = lastValue.w;\n}\n"},FS_TemporalAAPrepass:{requires:["Globals","GBuffer","DepthFetch"],parameters:[],attributes:[],source:"\nuniform sampler2D u_input;\nuniform sampler2D u_linearDepth;\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_oldAccum;\nuniform sampler2D u_oldDepth;\n\nvarying highp vec2 v_texCoord;\n\nfloat calculateLuminance(vec3 color)\n{\n    return color.x + color.y;\n}\n\nvec3 fetchVelocity(highp vec2 coord)\n{\n    vec4 g0 = texture2D(u_g0, coord);\n    vec4 g1 = texture2D(u_g1, coord);\n    vec4 g2 = vec4(0.);\n    vec4 g3 = vec4(0.);\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    return vec3(g.velocity * 0.5, dot(g.velocity, g.velocity));\n}\n\nvoid main()\n{\n    // velocity dilation\n    vec4 coords = vec4(v_texCoord.xyxy + vec4(u_globalInvRenderSize, -u_globalInvRenderSize));\n    vec3 best = fetchVelocity(v_texCoord.xy);\n    {\n        vec3 v = fetchVelocity(coords.xy);\n        if (v.z > best.z) best = v;\n    }\n    {\n        vec3 v = fetchVelocity(coords.zy);\n        if (v.z > best.z) best = v;\n    }\n    {\n        vec3 v = fetchVelocity(coords.xw);\n        if (v.z > best.z) best = v;\n    }\n    {\n        vec3 v = fetchVelocity(coords.zw);\n        if (v.z > best.z) best = v;\n    }\n\n    vec2 velocity = best.xy;\n    float velocityLen = length(velocity * u_globalRenderSize);\n\n    highp vec2 oldCoord = v_texCoord - velocity;\n\n    vec4 lastValue = texture2D(u_oldAccum, oldCoord);\n    vec3 lastColor = lastValue.xyz;\n\n    gl_FragColor.xyz = lastColor;\n\n    if (oldCoord.x < 0. || oldCoord.x > 1. ||\n        oldCoord.y < 0. || oldCoord.y > 1. ||\n        velocityLen > 50.) {\n        // too much movement. reset blend amount\n        gl_FragColor.w = 0.0;\n        return;\n    }\n\n    float blendAmt = lastValue.w;\n    blendAmt = 1. / (1.001 - blendAmt);\n    blendAmt += 1.;\n    blendAmt = min(1.001 - 1. / blendAmt, 1.);\n\n    gl_FragColor.w = blendAmt;\n}\n"},FS_ToneMapping:{requires:["Globals","LogRGB"],parameters:["globalSupportsSRGB","inputIsLogRGB"],attributes:[],source:"\nuniform sampler2D u_input;\nvarying highp vec2 v_texCoord;\n\nvarying vec2 v_vignetteCoord;\nuniform mediump float u_vignetteAmount;\n\nuniform float u_gain;\n\nuniform vec3 u_color;\n\nuniform float u_highlightCrush;\nuniform float u_contrast;\n\nvoid main()\n{\n#if c_inputIsLogRGB\n    vec3 color = decodeLogRGB(texture2D(u_input, v_texCoord));\n#else\n    vec3 color = texture2D(u_input, v_texCoord).xyz;\n#endif\n\n    // vignette\n    float vigTan2 = dot(v_vignetteCoord, v_vignetteCoord);\n    float vigCos2 =  1. / (1. + vigTan2);\n    float vigCos4 = vigCos2 * vigCos2;\n    color *= max(mix(1., vigCos4, u_vignetteAmount) * u_gain, 0.);\n\n    // apply color\n    color *= u_color;\n\n    // tone mapping\n    float luma = dot(color, vec3(0.2126, 0.7152, 0.0722));\n    float toneMapScale = 1. / (1. + luma * u_highlightCrush);\n    color *= toneMapScale;\n\n    color = mix(color, smoothstep(vec3(0.), vec3(1.), color), u_contrast);\n\n    gl_FragColor.xyz = color;\n\n#if !c_globalSupportsSRGB\n    gl_FragColor.xyz = sqrt(gl_FragColor.xyz);\n#endif\n\n    gl_FragColor.w = 1.;\n}\n"},VS_BilateralFilter:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\n\nvarying vec2 v_texCoord;\n\nvarying highp vec2 v_texCoord1;\nvarying highp vec2 v_texCoord2;\nvarying highp vec2 v_texCoord3;\nvarying highp vec2 v_texCoord4;\nvarying highp vec2 v_texCoord5;\nvarying highp vec2 v_texCoord6;\n\nuniform vec2 u_texCoordOffset;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_texCoord1 = v_texCoord + u_texCoordOffset;\n    v_texCoord2 = v_texCoord - u_texCoordOffset;\n    v_texCoord3 = v_texCoord1 + u_texCoordOffset;\n    v_texCoord4 = v_texCoord2 - u_texCoordOffset;\n    v_texCoord5 = v_texCoord3 + u_texCoordOffset;\n    v_texCoord6 = v_texCoord4 - u_texCoordOffset;\n}\n"},VS_Blur:{requires:["Globals"],parameters:[],attributes:[],source:"\nattribute vec2 a_position;\nvarying vec2 v_texCoord1;\nvarying vec2 v_texCoord2;\nvarying vec2 v_texCoord3;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n\n    vec2 normCoord = a_position * 0.5 + 0.5;\n\n    v_texCoord1 = normCoord;\n    v_texCoord2 = normCoord - u_globalInvRenderSize;\n    v_texCoord3 = normCoord + u_globalInvRenderSize;\n}\n"},VS_GaussianBlur:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nuniform vec2 u_texCoordOffset;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * 0.5 + 0.5 + u_texCoordOffset;\n}\n"},VS_HdrCompress:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_jitterCoord;\nuniform vec2 u_jitterScale;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_jitterCoord = v_texCoord * u_jitterScale;\n}\n"},VS_SSAO:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n}\n"},VS_SSR:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\n\nvarying highp vec2 v_jitterCoord;\nuniform vec2 u_jitterCoordScale;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n\n    v_jitterCoord = v_texCoord * u_jitterCoordScale;\n}\n"},VS_ScreenSpaceSoftShadow:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\nvarying vec2 v_jitterCoord;\nuniform vec2 u_jitterScale;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n\n    v_jitterCoord.xy = u_jitterScale * a_position;\n}\n"},VS_TemporalAA:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * .5 + .5;\n}\n"},VS_ToneMapping:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nuniform vec4 u_uvScale;\n\nvarying vec2 v_vignetteCoord; // tangent\nuniform vec2 u_vignetteScale;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * .5 + .5;\n\n    v_vignetteCoord = a_position * u_vignetteScale;\n}\n"},FS_DirectionalLightShadow:{requires:["DepthFetch","ShadowTexture"],parameters:["clipByFarPlane","clipByNearPlane"],attributes:[],source:"\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform sampler2D u_linearDepth;\n\nvarying highp vec2 v_texCoord;\nvarying highp vec2 v_viewDir;\n\nuniform highp float u_farPlane;\nuniform highp float u_nearPlane;\n\nuniform mat4 u_shadowMapMatrix;\nuniform highp sampler2D u_shadowMap;\n\nuniform float u_shadowMapZScale;\n\n// warning: result.x is inverted (1 = occluded)\nhighp vec2 shadowTexture2DWithDistance(highp sampler2D tex, highp vec3 coord)\n{\n    highp float value = texture2D(tex, coord.xy).r;\n    return vec2(1., coord.z - value) * step(value, coord.z);\n}\n\nvoid main()\n{\n\thighp float depth = fetchDepth(u_linearDepth, v_texCoord);\n\n#if c_clipByFarPlane\n\tif (depth > u_farPlane) {\n\t\tdiscard;\n\t}\n#endif\n#if c_clipByNearPlane\n\tif (depth < u_nearPlane) {\n\t\tdiscard;\n\t}\n#endif\n\n\thighp vec3 viewDir = vec3(v_viewDir, 1.);\n    highp vec3 viewPos = viewDir * -depth;\n\n    vec4 shadowCoordProj = u_shadowMapMatrix * vec4(viewPos, 1.);\n    vec3 shadowCoord = shadowCoordProj.xyz / shadowCoordProj.w;\n\n    float shadowValue = shadowTexture2D(u_shadowMap, shadowCoord);\n\n    // search blocker\n    // FIXME: this is too slow\n    vec3 scale = u_globalRenderSize.xyx * 0.02;\n    vec3 offX = dFdx(shadowCoord) * scale;\n    vec3 offY = dFdy(shadowCoord) * scale;\n    vec2 blockerSum = vec2(1., depth) * 0.0001; // default value\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord + offX + offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord + offX - offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord - offX + offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord - offX - offY);\n\n    offX *= 2.; offY *= 2.;\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord + offX + offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord + offX - offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord - offX + offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord - offX - offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord + offX);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord - offX);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord + offY);\n    blockerSum += shadowTexture2DWithDistance(u_shadowMap, shadowCoord - offY);\n\n    float penumbraSize = (blockerSum.y / blockerSum.x) * u_shadowMapZScale / depth * shadowCoordProj.w * 0.1;\n\n    gl_FragColor = vec4(shadowValue, penumbraSize, 0., 1.);\n}"},VS_DirectionalLightShadow:{requires:[],parameters:[],attributes:[],source:"\nattribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying vec2 v_viewDir;\nuniform vec2 u_viewDirCoefX;\nuniform vec2 u_viewDirCoefY;\nuniform vec2 u_viewDirOffset;\nuniform highp float u_depthValue;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, u_depthValue, 1.);\n    v_texCoord = a_position * 0.5 + 0.5;\n\n    v_viewDir = u_viewDirOffset;\n    v_viewDir += u_viewDirCoefX * a_position.x;\n    v_viewDir += u_viewDirCoefY * a_position.y;\n}\n"},FS_Bloom:{requires:["Globals","LogRGB"],parameters:["useLogRGB","hasTexture"],attributes:[],source:"\n\nuniform sampler2D u_input;\nuniform sampler2D u_bloom;\nuniform sampler2D u_texture;\nvarying highp vec2 v_texCoord;\nvarying highp vec2 v_dustCoord;\n\nuniform mediump float u_strength;\nuniform mediump float u_saturation;\n\nvoid main()\n{\n#if c_useLogRGB\n    vec3 color = decodeLogRGB(texture2D(u_input, v_texCoord));\n#else\n    vec3 color = texture2D(u_input, v_texCoord).xyz;\n#endif\n\n    vec3 bloom = texture2D(u_bloom, v_texCoord).xyz;\n\n    bloom = mix(vec3(dot(bloom, vec3(0.2126, 0.7152, 0.0722))), bloom, u_saturation);\n\n#if c_hasTexture\n\tvec3 dust = texture2D(u_texture, v_dustCoord).xyz;\n\tbloom *= dust * dust; // linearize & multiply\n#endif\n\n    color += bloom * u_strength;\n\n#if c_useLogRGB\n    gl_FragColor = encodeLogRGB(color);\n#else\n    gl_FragColor = vec4(color, 1.);\n#endif\n}\n"},FS_BloomDownsample:{requires:["Globals","LogRGB"],parameters:[],attributes:[],source:"\nuniform sampler2D u_input;\nvarying highp vec4 v_texCoord;\n\nuniform mediump float u_gain;\n\nvoid main()\n{\n    vec4 sample1 = texture2D(u_input, v_texCoord.xy);\n    vec4 sample2 = texture2D(u_input, v_texCoord.zy);\n    vec4 sample3 = texture2D(u_input, v_texCoord.xw);\n    vec4 sample4 = texture2D(u_input, v_texCoord.zw);\n    vec3 color1 = decodeLogRGB(sample1);\n    vec3 color2 = decodeLogRGB(sample2);\n    vec3 color3 = decodeLogRGB(sample3);\n    vec3 color4 = decodeLogRGB(sample4);\n    vec3 color = (color1 + color2 + color3 + color4) * u_gain;\n\n    gl_FragColor.xyz = color;\n}\n"},VS_Bloom:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nvarying highp vec2 v_dustCoord;\nuniform vec2 u_dustScale;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * .5 + .5;\n    v_dustCoord = a_position * u_dustScale + .5;\n}\n"},VS_BloomDownsample:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec4 v_texCoord;\nuniform vec2 u_texCoordOffset;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = (a_position * .5 + .5).xyxy;\n    v_texCoord.xy -= u_texCoordOffset;\n    v_texCoord.zw += u_texCoordOffset;\n}\n"},FS_MotionBlur:{requires:["GBuffer","DepthFetch","LogRGB"],parameters:["numSamples","useLogRGB"],attributes:[],source:'\n\n\nvarying highp vec2 v_texCoord;\nvarying highp vec2 v_jitterCoord;\n\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\nuniform sampler2D u_velTile;\nuniform sampler2D u_color;\nuniform sampler2D u_linearDepth;\nuniform sampler2D u_jitter;\n\nuniform vec2 u_velocityScale;\nuniform vec2 u_velocityInvScale;\nuniform float u_amount;\n\nuniform float u_minimumVelocitySquared;\nuniform float u_minimumVelocity;\n\nfloat cone(float dist, float vel)\n{\n    return clamp(1. - dist / vel, 0., 1.);\n}\n\nfloat cylinder(float dist, float vel)\n{\n    float ln = vel;\n    return 1. - smoothstep(ln * 0.95, ln * 1.05, dist);\n}\n\nfloat softDepthCompare(highp float a, highp float b)\n{\n    const float extent = 0.01;\n    return clamp(1. - (a - b) * (1. / extent), 0., 1.);\n}\n\nvec2 velocityAt(highp vec2 coord)\n{\n    vec4 g0 = texture2D(u_g0, coord);\n    vec4 g1 = texture2D(u_g1, coord);\n    vec4 g2 = vec4(0.), g3 = vec4(0.);\n\n    GBufferContents g;\n    decodeGBuffer(g, g0, g1, g2, g3);\n\n    return g.velocity * u_velocityScale * u_amount;\n}\n\nvoid main()\n{\n\n    // velocity in the neighborhood\n    vec2 vn = texture2D(u_velTile, v_texCoord).xy - 0.5;\n    float fnLenSq = dot(vn, vn);\n    if (fnLenSq < u_minimumVelocitySquared * 8.) {\n        // no blur\n        gl_FragColor = texture2D(u_color, v_texCoord);\n        return;\n    }\n\n    vec2 localVel = velocityAt(v_texCoord);\n    highp float localDepth = fetchDepth(u_linearDepth, v_texCoord);\n    float localVelLn = max(length(localVel), u_minimumVelocity);\n\n    // sample initial point\n    vec4 sum = vec4(\n#if c_useLogRGB\n        decodeLogRGB(texture2D(u_color, v_texCoord)),\n#else\n        texture2D(u_color, v_texCoord).xyz,\n#endif\n        1.);\n    sum *= .25 * u_minimumVelocity / localVelLn;\n\n    // start sampling neighbor points\n    highp vec2 coord = v_texCoord;\n\n    float edgeFade = max(u_globalQuadInvRenderSize.x, u_globalQuadInvRenderSize.y);\n    float jitter = texture2D(u_jitter, v_jitterCoord).x;\n\n    vn *= u_velocityInvScale;\n    coord -= vn * 0.5; // make blur "double-sided" (actually this is wrong but artifact is subtle)\n    vn *= (1. / float(c_numSamples));\n    coord += vn * jitter;\n\n    float fpos = -1.;\n\n    for (int i = 1; i < c_numSamples; ++i) {\n        coord += vn;\n        fpos += 2. / float(c_numSamples);\n\n        highp float depth = fetchDepth(u_linearDepth, coord);\n#if c_useLogRGB\n        vec3 color = decodeLogRGB(texture2D(u_color, coord));\n#else\n        vec3 color = texture2D(u_color, coord).xyz;\n#endif\n        vec2 vel = velocityAt(coord);\n\n        float b = softDepthCompare(localDepth, depth);\n        float f = softDepthCompare(depth, localDepth);\n\n        float distln = distance(coord * u_velocityScale, v_texCoord * u_velocityScale); // FIXME: optimize\n        float velln = max(length(vel), u_minimumVelocity);\n\n        float weight = f * cone(distln, velln) + b * cone(distln, localVelLn) +\n            cylinder(distln + u_minimumVelocity * 2., velln) * cylinder(distln + u_minimumVelocity * 2., localVelLn) * 2.;\n\n        // fade the border artifact\n        weight *= clamp((min(min(coord.x, coord.y), 1. - max(coord.x, coord.y)) - edgeFade) * 100., 0., 1.);\n\n        // fade the endpoint of blur\n        weight *= 1. - fpos * fpos;\n\n        sum += vec4(color, 1.) * weight;\n    }\n\n    vec3 result = sum.xyz / sum.w;\n#if c_useLogRGB\n    gl_FragColor = encodeLogRGB(result);\n#else\n    gl_FragColor.xyz = result;\n    gl_FragColor.w = 1.;\n#endif\n}'},FS_MotionBlurDownsample:{requires:["GBuffer","Globals"],parameters:["scale"],attributes:[],source:"\n\nvarying highp vec2 v_texCoord;\n\nuniform sampler2D u_g0;\nuniform sampler2D u_g1;\n\nuniform highp vec2 u_texCoordIncr;\n\nuniform vec2 u_velocityScale;\nuniform float u_amount;\n\n// based on:\n//\n// Morgan McGuire, Padraic Hennessy, Michael Bukowski, and Brian Osman. 2012.\n// A reconstruction filter for plausible motion blur. In Proceedings of the\n// ACM SIGGRAPH Symposium on Interactive 3D Graphics and Games (I3D '12),\n// Stephen N. Spencer (Ed.). ACM, New York, NY, USA, 135-142.\n// DOI=10.1145/2159616.2159639 http://doi.acm.org/10.1145/2159616.2159639\n\n\nvoid main()\n{\n    vec2 coords[c_scale];\n    coords[0] = v_texCoord;\n    for (int i = 1; i < c_scale; ++i) {\n        coords[i] = coords[i - 1] + u_texCoordIncr;\n        coords[i].y = min(coords[i].y,\n            1. - u_globalDoubleInvRenderSize.y);\n    }\n\n    vec3 best = vec3(0.);\n    for (int y = 0; y < c_scale; ++y) {\n        for (int x = 0; x < c_scale; ++x) {\n            vec2 coord = vec2(coords[x].x, coords[y].y);\n            vec4 g0 = texture2D(u_g0, coord);\n            vec4 g1 = texture2D(u_g1, coord);\n            vec4 g2 = vec4(0.), g3 = vec4(0.);\n\n            GBufferContents g;\n            decodeGBuffer(g, g0, g1, g2, g3);\n\n            g.velocity *= u_velocityScale * u_amount;\n            vec3 vel = vec3(g.velocity, dot(g.velocity, g.velocity));\n            if (vel.z > best.z) {\n                best = vel;\n            }\n        }\n    }\n\n    if (best.z > 0.25) {\n        best.xy *= inversesqrt(best.z) * 0.5;\n    }\n    best.z = length(best.xy) * 2.;\n\n    best.xy += 0.5;\n    gl_FragColor = vec4(best, 0.);\n}\n"},FS_MotionBlurNeighborMax:{requires:[],parameters:[],attributes:[],source:"\nvarying highp vec2 v_texCoord1;\nvarying highp vec4 v_texCoord2;\n\nuniform sampler2D u_input;\n\nvoid main()\n{\n    vec3 result = texture2D(u_input, v_texCoord1.xy).xyz;\n    vec3 s;\n\n    s = texture2D(u_input, vec2(v_texCoord1.x, v_texCoord2.y)).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, vec2(v_texCoord1.x, v_texCoord2.w)).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, vec2(v_texCoord2.x, v_texCoord1.y)).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, vec2(v_texCoord2.z, v_texCoord1.y)).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, v_texCoord2.xy).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, v_texCoord2.xw).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, v_texCoord2.zy).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    s = texture2D(u_input, v_texCoord2.zw).xyz;\n    if (s.z > result.z) {\n        result = s;\n    }\n\n    gl_FragColor = vec4(result, 0.);\n}\n"},VS_MotionBlur:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\n\nuniform vec2 u_jitterScale;\nvarying vec2 v_jitterCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * .5 + .5;\n\n    v_jitterCoord = v_texCoord * u_jitterScale;\n}\n"},VS_MotionBlurDownsample:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord;\nuniform vec2 u_texCoordOffset;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord = a_position * .5 + .5 + u_texCoordOffset;\n}\n"
},VS_MotionBlurNeighborMax:{requires:[],parameters:[],attributes:[],source:"attribute vec2 a_position;\nvarying vec2 v_texCoord1;\nvarying vec4 v_texCoord2;\nuniform vec2 u_texCoordOffset;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0., 1.);\n    v_texCoord1 = a_position * .5 + .5;\n    v_texCoord2 = v_texCoord1.xyxy + vec4(u_texCoordOffset, -u_texCoordOffset);\n}\n"}}},{}],48:[function(e,t,r){"use strict";var n=function(){function e(){this.map=new Int32Array([0]),this.range=0}return e.prototype.reserve=function(e){var t=this.map;t.length<<4<e&&(this.map=new Int32Array(e+3>>4),this.map.set(t))},e.prototype.setRange=function(e){this.reserve(e<<4);var t=this.range,r=this.map;if(this.range=e,e>t)for(var n=t;n<e;++n)r[n]=0;else if(e<t)for(var n=e;n<t;++n)for(var i=r[n],o=0;o<16;o+=4){var a=i>>o&15;if(a)for(var s=0;s<4;++s)a&1<<s&&this.onToggledFalse(o+s+(n<<4))}},e.prototype.onToggledTrue=function(e){},e.prototype.onToggledFalse=function(e){},e.prototype.toggleOne=function(e,t){this.reserve(e+1);var r=this.map,n=1<<(15&e),i=e>>4;if(t)if(i>=this.range){for(var o=i-1;o>=this.range;--o)r[o]=0;this.range=i+1,r[i]=n,this.onToggledTrue(e)}else 0==(r[i]&n)&&(r[i]|=n,this.onToggledTrue(e));else{if(i>=this.range)return;r[i]&n&&(r[i]&=~n,this.onToggledFalse(e))}},e.prototype.toggleAllWithTrueIndex=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];if(0==e.length)return void this.setRange(0);var r=Math.max.apply(Math,e),n=r+16>>4;this.reserve(r+1),this.setRange(n);for(var i=this.map,o=0,a=e;o<a.length;o++){var s=a[o];i[s>>4]|=65536<<(15&s)}for(var u=0;u<n;++u){var l=i[u],f=65535&l,h=l>>>16,c=f^h;if(i[u]=h,c)for(var p=0;p<16;p+=4){var d=c>>p&15;if(d)for(var m=0;m<4;++m)d&1<<m&&(h&1<<p+m?this.onToggledTrue(p+m+(u<<4)):this.onToggledFalse(p+m+(u<<4)))}}},e.prototype.toggleAllWithArray=function(e){var t=e.range;this.reserve(t<<4),this.setRange(t);for(var r=e.map,n=this.map,i=0;i<t;++i){var o=n[i],a=r[i],s=o^a;if(s){n[i]=a;for(var u=0;u<16;u+=4){var l=s>>u&15;if(l)for(var f=0;f<4;++f)l&1<<f&&(a&1<<u+f?this.onToggledTrue(u+f+(i<<4)):this.onToggledFalse(u+f+(i<<4)))}}}},e}();r.BitArray=n},{}],49:[function(e,t,r){"use strict";function n(e,t){t||(t={offset:new a.Vector2,coefX:new a.Vector2,coefY:new a.Vector2});var r=s.Vector4Pool.alloc(),n=s.Vector4Pool.alloc(),i=s.Matrix4Pool.alloc();return r.set(0,0,1,1),r.applyMatrix4(e),i.getInverse(e),n.set(0,0,r.z,r.w),n.applyMatrix4(i),t.offset.set(n.x,n.y),n.set(-1,0,r.z,r.w),n.applyMatrix4(i),t.coefX.set(n.x,n.y),n.set(0,-1,r.z,r.w),n.applyMatrix4(i),t.coefY.set(n.x,n.y),s.Vector4Pool.free(r),s.Vector4Pool.free(n),s.Matrix4Pool.free(i),t}function i(e){return(e.elements[15]-e.elements[14])/(e.elements[11]-e.elements[10])}var o=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},a=window.THREE,s=e("./ObjectPool");r.computeViewVectorCoefFromProjectionMatrix=n,r.computeFarDepthFromProjectionMatrix=i;var u=function(){function e(){}return e.prototype.computeBoundingBox=function(e,t){return null==t&&(t=new a.Box3),t.makeEmpty(),this.traverse(e,t),t},e.prototype.traverse=function(e,t){for(var r=0,n=e.children;r<n.length;r++){var i=n[r];this.traverse(i,t)}this.addObject(e,t)},e.prototype.addObject=function(e,t){if(e instanceof a.Mesh){var r=e.geometry;if(null==r)return;null==r.boundingSphere&&r.computeBoundingSphere();var n=s.Vector3Pool.alloc(),i=r.boundingSphere.radius;n.set(i,i,i),n.applyMatrix4(e.matrixWorld);var o=s.Vector3Pool.alloc();e.getWorldPosition(o);var u=o.distanceTo(n);n.copy(o),o.addScalar(u),n.subScalar(u),t.expandByPoint(n),t.expandByPoint(o),s.Vector3Pool.free(n),s.Vector3Pool.free(o)}},e}();r.ObjectBoundingBoxCalculator=u;var l=function(e){function t(){e.apply(this,arguments)}return o(t,e),t.prototype.traverse=function(e,t){if(e.visible)return u.prototype.traverse.call(this,e,t)},t.prototype.addObject=function(e,t){if(e.castShadow)return u.prototype.addObject.call(this,e,t)},t}(u);r.ShadowCastingObjectBoundingBoxCalculator=l},{"./ObjectPool":54}],50:[function(e,t,r){"use strict";var n=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},i=e("./IntegerMap"),o=function(){function e(){this.map=new i.IntegerMap}return Object.defineProperty(e.prototype,"isEmpty",{get:function(){return this.map.isEmpty},enumerable:!0,configurable:!0}),e.prototype.disposeValue=function(e){},e.prototype.get=function(e){var t=this.map.get(e.id);if(t){if(t.key!=e)throw new Error;return t.value}return null},e.prototype.set=function(e,t){var r=this,n=this.map.get(e.id);if(n){if(n.key!=e)throw new Error;n.value=t}else{var i=e.id,o=function(){return r.onItemDisposed(i)};e.addEventListener("disposed",o),this.map.set(e.id,{key:e,value:t,handler:o})}return t},e.prototype.remove=function(e){var t=this.map.get(e.id);if(null==t)return!1;if(t.key!=e)throw new Error;return this.map.remove(e.id),t.key.removeEventListener("disposed",t.handler),this.disposeValue(t.value),!0},e.prototype.dispose=function(){var e=this;this.map.forEach(function(t,r){r.key.removeEventListener("disposed",r.handler),e.disposeValue(r.value),e.map.remove(t)})},e.prototype.onItemDisposed=function(e){var t=this.map.get(e);this.map.remove(e),t.key.removeEventListener("disposed",t.handler),this.disposeValue(t.value)},e}();r.IdWeakMap=o;var a=function(e){function t(){e.apply(this,arguments)}return n(t,e),t.prototype.disposeValue=function(e){e.dispose()},t}(o);r.IdWeakMapWithDisposable=a},{"./IntegerMap":51}],51:[function(e,t,r){"use strict";var n=function(){function e(){this.map=new Map}return Object.defineProperty(e.prototype,"isEmpty",{get:function(){return 0==this.map.size},enumerable:!0,configurable:!0}),e.prototype.get=function(e,t){var r=this.map.get(e);return"undefined"==typeof r?t:r},e.prototype.set=function(e,t){return this.map.set(e,t),t},e.prototype.remove=function(e){return this.map["delete"](e)},e.prototype.forEach=function(e){this.map.forEach(function(t,r){e(r,t)})},e}();r.IntegerMap=n},{}],52:[function(e,t,r){"use strict";var n=function(){function e(){this.topics=new Map,this.omni=!1,this.enabledTopics=new Map,this.disabledTopics=new Map}return e.prototype.enableTopic=function(e){this.enabledTopics.set(e,!0),this.disabledTopics["delete"](e);var t=this.topics.get(e);t&&(t.enabled=!0)},e.prototype.disableTopic=function(e){this.disabledTopics.set(e,!0);var t=this.topics.get(e);t&&(t.enabled=!1)},e.prototype.enableAllTopics=function(){this.omni=!0,this.disabledTopics.clear(),this.enabledTopics.clear(),this.topics.forEach(function(e){e.enabled=!0})},e.prototype.disableAllTopics=function(){this.omni=!1,this.disabledTopics.clear(),this.enabledTopics.clear(),this.topics.forEach(function(e){e.enabled=!1})},e.prototype.isTopicEnabled=function(e){return!this.disabledTopics.has(e)&&(this.omni||this.enabledTopics.has(e))},e.prototype.getLogger=function(e){var t=this.topics.get(e);return t||(t=new i(e),t.enabled=this.isTopicEnabled(e),this.topics.set(e,t)),t},e}();r.LogManager=n;var i=function(){function e(e){this.topic=e}return Object.defineProperty(e.prototype,"isEnabled",{get:function(){return this.enabled},enumerable:!0,configurable:!0}),e.prototype.log=function(e){this.enabled&&console.log("Hyper3D ["+this.topic+"]",e)},e.prototype.warn=function(e){console.warn("Hyper3D ["+this.topic+"]",e)},e.prototype.error=function(e){console.error("Hyper3D ["+this.topic+"]",e)},e}()},{}],53:[function(e,t,r){"use strict";var n=function(){function e(){this.table=[],this.first=null}return e.prototype.computeHash=function(e){throw new Error("not implemented")},e.prototype.equals=function(e,t){throw new Error("not implemented")},Object.defineProperty(e.prototype,"isEmpty",{get:function(){return null==this.first},enumerable:!0,configurable:!0}),e.prototype.get=function(e,t){var r=this.computeHash(e),n=this.table[r];if(n)for(var i=n.head;null!=i;){if(this.equals(e,i.key))return i.value;i=i.next}return t},e.prototype.set=function(e,t){var r=this.computeHash(e),n=this.table[r];if(n)for(var i=n.head;null!=i;){if(this.equals(e,i.key))return i.value=t;i=i.next}var o={key:e,value:t,next:n?n.head:null};return n?n.head=o:(n={head:o,prev:null,next:null},this.first?(n.next=this.first,n.prev=this.first.prev,n.next.prev=n,n.prev.next=n):this.first=n.prev=n.next=n,this.table[r]=n),t},e.prototype.remove=function(e){var t=this.computeHash(e),r=this.table[t];if(r)for(var n=null,i=r.head;null!=i;){if(this.equals(e,i.key))return n?n.next=i.next:null==i.next?(delete this.table[t],this.first==r&&(r.next==r?this.first=null:this.first=r.next),r.next!=r&&(r.next.prev=r.prev,r.prev.next=r.next)):r.head=i.next,!0;n=i,i=i.next}return!1},e.prototype.forEach=function(e){if(this.first){var t=this.first;do{var r=t.next,n=t.head;do{var i=n.next;e(n.key,n.value),n=i}while(n);t=r}while(t!=this.first)}},e}();r.Map=n},{}],54:[function(e,t,r){"use strict";var n=window.THREE,i=function(){function e(e){this.factory=e,this.pool=[]}return e.prototype.alloc=function(){var e=this.pool.pop();return e?e:this.factory()},e.prototype.free=function(e){this.pool.push(e)},e}();r.Vector2Pool=new i(function(){return new n.Vector2}),r.Vector3Pool=new i(function(){return new n.Vector3}),r.Vector4Pool=new i(function(){return new n.Vector4}),r.Matrix4Pool=new i(function(){return new n.Matrix4})},{}],55:[function(e,t,r){"use strict";function n(e,t,r){r*=255;var n=Math.floor(r),i=255*(r-n),o=Math.floor(i),a=255*(i-o);e[t]=Math.max(Math.min(n,255),0),e[t+1]=o,e[t+2]=a}function i(e,t,r){var i=Math.abs(r);if(i<1e-16||i>1e16)e[t]=e[t+1]=e[t+2]=e[t+3]=0;else{var o=Math.ceil(a(i))+63;i*=s[o],r<0&&(o+=128),n(e,t,i),e[t+3]=o}}r.pack24ToU8=n;for(var o=1/Math.LN2,a=Math.log2||function(e){return Math.log(e)*o},s=[],u=0;u<128;++u)s.push(Math.pow(2,63-u));r.pack32FToU8=i},{}],56:[function(e,t,r){"use strict";var n=window.THREE,i=[.281064,.645281,-.167313,.685935,-.160711,-.113289,1.08453,-.0970135,-.3655,-.51894,.275308,-830889e-9,-.0431051,.574405,-.163071,-.30989,.372959,-.0161521,.131741,.456781,.0165477,-.0975113,-.273682,-.509164,.573244,-.714618,-.479023,.0525875,.316595,-.148211,-.423713,-.22462,-.528986,.390866,.0439115,-.274567,.106133,-.377686,.481055,.398664,.314325,.839894,-.625382,.0543475,-.201899,.198677,.0182834,.621111,.128773,-.265686,.602337,.296946,.773769,.0479956,-.132997,-.0410526,-.254838,.326185,.347585,-.580061,.405482,.101755,-.201249,.306534,.469578,-.111657,-.796765,-.0773768,-.538891,.206104,-.0794146,.098465,.413728,.0259771,-.823897,.0925169,.88273,-.184931,-.134422,-.247737,-.682095,.177566,.299386,-.329205,.0488276,.504052,.268825,.395508,-1.10225,.101069,-.0408943,-.580797,-.00804806,-.402047,-.418787,.697977,-.308492,-.122199,.628944,.54588,.0622768,-.488552,.0474367,.215963,-.679212,.311237,-920773e-9,-.721814,.579613,-.0458724,-.467233,.268248,.246741,-.15576,.0473638,.0246596,-.572414,-.419131,-.357526,.452787,-.112269,.710673,-.41551,.429337,.0882859,-.433878,-.0818105,-.180361,.36754,-.49486,.449489,-.837214,-1.09047,.168766,-.163687,.256186,.633943,-.012522,.631576,-.27161,-.15392,-.471082,-.071748,-.275351,-.134404,.126987,-.478438,-.144772,-.38336,.37449,-.458729,-.318997,-.313852,.081244,-.287645,.200266,-.45997,.108317,-.216842,-.165177,-.296687,.771041,.933613,.617833,-.263007,-.236543,-.406302,.241173,-.225985,-.108225,.087069,-.0444767,.645569,-.112983,-.689477,.498425,.0738087,.447277,.0972104,-.314627,.393365,-.0919185,-.32199,-.193414,-.126091,.185217,.318475,.140509,-.115877,-.911059,.336104,-.645395,.00686884,-.172296,-.513633,-.302956,-1.20699,.148284,.357629,.58123,.106886,-.872183,-.49183,-.202535,-.869357,.0371933,-.0869231,.22624,.198995,.191016,.151591,.347114,.056674,-.213039,-.228541,-.473257,-.574876,-.0826995,-.730448,.343791,.795006,.366191,.419235,-1.11688,.227321,-.0937171,.156708,-.3307,.328026,-.454046,.432153,-.189323,.31821,.312532,.0963759,.126471,-.396326,.0353236,-.366891,-.279321,.106791,.0697961,.383726,.260039,.00297499,.45812,-.544967,-.230453,-.150821,-.374241,-.739835,.462278,-.76681,-.455701,.261229,.274824,.161605,-.402379,.571192,.0844102,-.47416,.683535,.144919,-.134556,-.0414159,.357005,-.643226,-.00324917,-.173286,.770447,.261563,.707628,.131681,.539707,-.367105,.150912,-.310055,-.270554,.686523,.195065,.282361,.569649,.106642,.296521,.185682,.124763,.182832,.42824,-.489455,.55954,.383582,.52804,-.236162,-.356153,.70445,-.300133,1.06101,.0289559,.4671,-.0455821,-1.18106,.26797,.223324,.793996,-.833809,-.412982,-.443497,-.634181,-902414e-9,-.319155,.629076,-.378669,-.230422,.489184,.122302,.397895,.421496,-.41475,.192182,-.477254,-.32989,.285264,-.0248513,-.224073,.520192,.138148,.783388,.540348,-.468401,.189778,.327808,.387399,.0163817,.340137,-.174623,-.560019,-.32246,.353305,.513422,-.472848,-.0151656,.0802364,-.0833406,303745e-9,-.359159,-.666926,.446711,-.254889,-.263977,.534997,.555322,-.315034,-.62762,-.14342,-.78082,.29739,.0783401,-.665565,-.177726,.62018,-.723053,.108446,.550657,.00324011,.387362,-.251661,-.616413,-.260163,-.798613,.0174665,-.208833,-.0398486,-.506167,.00121689,-.75707,-.0326216,.30282,.085227,-.27267,.25662,.182456,-.184061,-.577699,-.685311,.587003,.35393,-.276868,-.0617566,-.365888,.673723,-.0476918,-.0914235,.560627,-.387913,-.194537,.135256,-.0808623,.315394,-.0383463,.267406,.545766,-.659403,-.410556,.305285,.0364261,.396365,-.284096,.137003,.611792,.191185,.440866,.87738,.470405,-.372227,-.84977,.676291,-.0709138,-.456707,.222892,-.728947,.2414,.109269,.707531,.027894,-.381266,-.1872,-.674006,-.441284,-.151681,-.695721,.360165,-.397063,.02772,.271526,-.170258,-.198509,.524165,.29589,-.895699,-.266005,.0971003,.640709,-.169635,.0263381,-.779951,-.37692,-.703577,.00526047,-.822414,-.152364,.10004,.194787,.453202,-.495236,1.01192,-.682168,-.453866,.387515,-.355192,.214262,.2677,-.263514,.334733,.683574,.181592,.599759,-.182972,.402297,-.319075,.553958,-.990873,-.143754,.506054,.0535431,-.647583,.53928,-.510285,.452258,-.796479,.186279,-.0960782,-.124537,.509105,-.1712,.219554,-.528307,-.377211,-.447177,-.0283537,.856948,-.128052,.482509,.528981,-.785958,.816482,.213728,-.433917,-.0413878,-.997625,.228201,-.113198,.425206,.0261474,.68678,.224967,.48489,.53184,.572936,-.419627,-.70428,-.216836,.57302,.640487,-.172722,.237492,-.390903,.0717416,.852097,-.0422118,.151465,-.638427,.132246,-.0552788,.436714,-.281931,.411517,-.340499,-.725834,-.478547,.332275,-.0243354,-.499295,.238681,-.324647,-.182754,.520306,-.0762625,.631812,-.652095,-.504378,-.534564,.118165,-.384134,.611485,.635868,.100705,.25619,.197184,.328731,-.0750947,-.763023,.516191,.375317,-.17778,.880709,.668956,.376694,.425053,-.930982,.0534644,-.0423658,.695356,.352989,.0400925,.383482,.188746,.0193305,.128885,-.23603,-.288163,-.311799,-.425027,-.297739,-.349681,-.278894,.00934887,-.38221,.542819,.234533,-.213422,.198418,.694582,-.43395,-.417672,.553686,-.10748,-.352711,-.0115025,.0581546,.962054,.210576,.339536,-.0818458,-.358587,-.342001,-.0689676,.0470595,-.3791,.212149,-.00608754,.318279,.246769,.514428,.457749,.759536,.236433,.422228,.571146,-.247402,.667306,-.558038,-.158556,-.369374,-.341798,.30697,-.535024,-.487844,-.0888073,.404439,-.580029,.457389,.297961,-.0356712,.508803,.325652,-.239089,-.743984,.21902,.455838,.149938,-.150058,.342239,.147549,-.044282,-.634129,.266822,-.764306,-.13691,-.59542,-.503302,-.581097,.455914,.193022,-.255091,.0782733,.354385,.181455,-.579845,-.597151,-.747541,-.471478,-.257622,.80429,.908564,.11331,-.210526,.893246,-.354708,-.581153,.366957,682831e-9,1.05443,.310998,.455284,-.251732,-.567471,-.660306,-.202108,.836359,-.467352,-.20453,.0710459,.0628843,-.132979,-.755594,.0600963,.725805,-.221625,.133578,-.802764,.00850201,.748137,-.411616,-.136451,.0531707,-.977616,.162951,.0394506,-.0480862,.797194,.52012,.238174,.169073,.249234,.00133944,-.01138,.107195,.0101681,-.247766,-.415877,-.450288,.800731],o=function(){function e(){this.index=0}return e.prototype.sample=function(){var e=this.index;return e+2==i.length?this.index=0:this.index=e+2,new n.Vector2(.89*i[e],.89*i[e+1])},e}();r.CenteredNoise=o},{}],57:[function(e,t,r){"use strict";function n(e){var t=[];for(var r in e)t.push(r);return t}function i(e,t){try{return t(e)}finally{e.dispose()}}function o(e,t){for(var r=[],n=0;n<t;++n)r.push(e);return r.join("")}function a(e,t,r){return e+o(r,Math.max(0,t-e.length))}function s(e,t,r){return o(r,Math.max(0,t-e.length))+e}var u=Math.imul,l=[0,9,1,10,13,21,2,29,11,14,16,18,22,25,3,30,8,12,20,28,15,17,24,7,19,27,23,6,26,5,4,31];r.ulog2=u?function(e){return e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,l[u(e,125613361)>>>27]}:function(e){for(var t=0;0!=e;)++t,e>>>=1;return t},r.getKeysOfObject=n,r.using=i,r.stringRepeat=o,r.fillWith=a,r.fillWithRightAligned=s},{}],58:[function(e,t,r){"use strict";function n(e){var t=e.gl,r=e.ext.get("OES_texture_half_float");if(null==r)return console.warn("validateHalfFloatColorBuffer: OES_texture_half_float is not available."),!1;var n=t.createTexture();try{for(t.bindTexture(t.TEXTURE_2D,n);t.getError(););if(t.texImage2D(t.TEXTURE_2D,0,t.RGBA,7,7,0,t.RGBA,r.HALF_FLOAT_OES,null),t.getError())return console.warn("validateHalfFloatColorBuffer: could not create half float texture."),!1;t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);var o=i.GLFramebuffer.createFramebuffer(t,{colors:[n]});o.dispose()}catch(a){return console.warn("validateHalfFloatColorBuffer: error: "+a),!1}finally{t.deleteTexture(n)}return!0}var i=e("../core/GLFramebuffer");r.validateHalfFloatColorBuffer=n},{"../core/GLFramebuffer":2}],59:[function(e,t,r){"use strict";function n(e){var t=e.shaderManager.get("VS_Passthrough","FS_Constant",["a_position"]),r=t.getAttributes(["a_position"]),n=t.getUniforms(["u_constantColor"]),o=e.quadRenderer,a=e.gl,s=e.ext.get("EXT_sRGB");t.use();var u=a.createTexture();try{if(a.bindTexture(a.TEXTURE_2D,u),a.texImage2D(a.TEXTURE_2D,0,s.SRGB_ALPHA_EXT,8,8,0,s.SRGB_ALPHA_EXT,a.UNSIGNED_BYTE,null),a.getError())return console.warn("validateSRGBCompliance: could not create sRGB texture."),!1;a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);var l=i.GLFramebuffer.createFramebuffer(a,{colors:[u]});try{l.bind(),e.state.flags=0,a.viewport(0,0,8,8);for(var f=[[0,0],[13,63],[54,127],[133,191],[255,255]],h=new Uint8Array(256),c=0,p=f;c<p.length;c++){var d=p[c],m=d[0]/255,g=d[1];a.uniform4f(n.u_constantColor,m,m,m,1),o.render(r.a_position),a.readPixels(0,0,8,8,a.RGBA,a.UNSIGNED_BYTE,h);for(var v=0;v<h.length;++v){var _=3==(3&v)?255:g;if(Math.abs(h[v]-_)>1)return console.warn("validateSRGBCompliance: expected "+_+", got "+h[v]),!1}}}finally{l.dispose()}}catch(x){return console.warn("validateSRGBCompliance: error: "+x),!1}finally{a.deleteTexture(u)}return!0}var i=e("../core/GLFramebuffer");r.validateSRGBCompliance=n},{"../core/GLFramebuffer":2}],60:[function(e,t,r){window.Hyper=e("../dist/hyper3d")},{"../dist/hyper3d":1}]},{},[60]);